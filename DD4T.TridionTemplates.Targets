<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="" DefaultTargets="All" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
	<PropertyGroup>
		<Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
		<BuildOutputDirectory>$(MSBuildProjectDirectory)\build</BuildOutputDirectory>

		<PackageSuffix></PackageSuffix>
        <PackageSuffix Condition="'$(Configuration)'=='Legacy'">-Legacy</PackageSuffix>

		<!-- Source Directories -->
		<BaseDirectory Condition="'$(BaseDirectory)' == ''">$(MSBuildProjectDirectory)</BaseDirectory>
		<BaseDirectory Condition="!Exists('$(BaseDirectory)\source')">..\..</BaseDirectory>

		<SourceDirectory>$(BaseDirectory)\source</SourceDirectory>

		<!-- Build Directories -->
		<BuildOutputDirectory>$(BaseDirectory)\build</BuildOutputDirectory>
		<BuildBinDirectory>$(BuildOutputDirectory)\bin</BuildBinDirectory>
		<BuildLogDirectory>$(BuildOutputDirectory)\log</BuildLogDirectory>
		<BuildPackageDirectory>$(BuildOutputDirectory)\package</BuildPackageDirectory>
		<BuildDependencyDirectory>$(BuildOutputDirectory)\dependencies</BuildDependencyDirectory>

		<BuildNuGetDirectory>$(BuildPackageDirectory)\lib</BuildNuGetDirectory>
		<BuildNuGetFramework40Directory>$(BuildNuGetDirectory)\net40</BuildNuGetFramework40Directory>
		<BuildNuGetFramework45Directory>$(BuildNuGetDirectory)\net45</BuildNuGetFramework45Directory>

		<ToolsDirectory>$(BaseDirectory)\tools</ToolsDirectory>
		<InstallerDirectory>$(ToolsDirectory)\template-installer</InstallerDirectory>

		<DependencyDirectory>$(BaseDirectory)\dependencies</DependencyDirectory>

		<NuGetFolder>$(SourceDirectory)\.nuget</NuGetFolder>

		<ConfigurationDirectory>$(BaseDirectory)\configuration</ConfigurationDirectory>

		<MergeDirectory>$(BuildPackageDirectory)\files</MergeDirectory>
    	<MergeFile>$(MergeDirectory)\$(MSBuildProjectName).Merged.dll</MergeFile>
    	<keyFile>$(SourceDirectory)\Solution Items\dynamicdelivery.snk</keyFile>
    	<logFile>$(BuildLogDirectory)\ilmerge.log</logFile>

		<!-- NuSpec file for NuGet Package creation -->
		<NuSpecFileName>DD4T.Templates.nuspec</NuSpecFileName>
		<NuSpecFile>$(ConfigurationDirectory)\$(NuSpecFileName)</NuSpecFile>

	</PropertyGroup>
	<ItemGroup>
		<InstallerFiles Include="$(InstallerDirectory)\**\*" />
		<CleanFolders Include="$(BuildOutputDirectory)"/>
		<CleanFolders Include="TestResults"/>
		<NuGetStructureFolders Include="$(BuildNugetDirectory);$(BuildNuGetFramework40Directory);$(BuildNuGetFramework45Directory)"/>
		<DependencyFiles Include="$(DependencyDirectory)\**\*.dll"/>
		<DependencyDirectories Include="@(DependencyFiles->'%(RootDir)%(Directory)'->Distinct())" />
	</ItemGroup>

	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>

	<!-- Task for retrieving ProductVersion from an Assembly -->
	<UsingTask TaskName="GetInformationalVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<AssemblyFile ParameterType="System.String" Required="true" />
			<Version ParameterType="System.String" Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.Diagnostics" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					Log.LogMessage("Getting version details of assembly " + this.AssemblyFile, MessageImportance.High);
					this.Version = FileVersionInfo.GetVersionInfo(this.AssemblyFile.Split(';')[0]).ProductVersion;
					Log.LogMessage("AssemblyVersion: " + this.Version, MessageImportance.High);
				]]>
			</Code>
		</Task>		
	</UsingTask>

	<!-- Task for generating a new version for local development -->
	<UsingTask TaskName="GetNewDevVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<OldVersion ParameterType="System.String" Required="true" />
			<NewVersion ParameterType="System.String" Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.Diagnostics" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					Log.LogMessage("Getting a new version for " + this.OldVersion, MessageImportance.High);
					Version version = new Version(this.OldVersion.Split('-')[0]);
					this.NewVersion = version.ToString() + "-build" + DateTime.Now.ToString("yyyyMMddHHmmss");
					Log.LogMessage("New Version: " + this.NewVersion, MessageImportance.High);
				]]>
			</Code>
		</Task>		
	</UsingTask>

	<Target Name="MimicPackages" Inputs="@(DependencyDirectories)" Outputs="%(DependencyDirectories.Directory)" BeforeTargets="PrepareForBuild">
		<PropertyGroup>
			<DependencyFilesDirectory>%(DependencyDirectories.Identity)</DependencyFilesDirectory>
			<FilePath>$([System.IO.Directory]::GetParent(%(DependencyDirectories.Identity)))</FilePath>
			<DependencyName>$([System.IO.Path]::GetFileName($(FilePath)))</DependencyName>
			<DependencyNameSafe>$([System.String]::Copy('$(DependencyName)').Replace(' ','-').ToLower())</DependencyNameSafe>
			<NuSpecFileLocation>$(DependencyFilesDirectory)**\*.nuspec</NuSpecFileLocation>
		</PropertyGroup>
		<ItemGroup>
			<LibFiles Include="$(DependencyFilesDirectory)**\*.dll;$(DependencyFilesDirectory)**\*.xml;$(DependencyFilesDirectory)**\*.pdb" />
			<MimicNuSpecFile Include="$(NuSpecFileLocation)"/>
		</ItemGroup>
		<PropertyGroup>
			<NuSpecFileLocation>%(MimicNuSpecFile.Identity)</NuSpecFileLocation>
		</PropertyGroup>

		<Message Text="Creating nuget package directory $(DependencyNameSafe)" />
		<Message Text="$(NuSpecFileLocation)" />

		<XmlPeek
			Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd' /&gt;"
			Query="//version/text()"
			XmlInputPath="$(NuSpecFileLocation)">
			<Output TaskParameter="Result" ItemName="PackageVersion" />
		</XmlPeek>

		<Message Text="Discovered package version @(PackageVersion)" />

		<PropertyGroup>
			<NPackageName>$(DependencyNameSafe).@(PackageVersion)</NPackageName>
			<NPackageDirectory>$(SourceDirectory)\packages\$(NPackageName)</NPackageDirectory>
			<NPackageBuildDirectory>$(BuildOutputDirectory)\$(NPackageName)</NPackageBuildDirectory>
		</PropertyGroup>

		<Copy SourceFiles="@(LibFiles)" DestinationFiles="@(LibFiles->'$(NPackageDirectory)\lib\net40\%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(LibFiles)" DestinationFiles="@(LibFiles->'$(NPackageDirectory)\lib\net45\%(Filename)%(Extension)')" />

		<Copy SourceFiles="@(LibFiles)" DestinationFiles="@(LibFiles->'$(NPackageBuildDirectory)\lib\net40\%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(LibFiles)" DestinationFiles="@(LibFiles->'$(NPackageBuildDirectory)\lib\net45\%(Filename)%(Extension)')" />

		<Copy SourceFiles="@(MimicNuSpecFile)" DestinationFiles="@(MimicNuSpecFile->'$(NPackageBuildDirectory)\$(DependencyNameSafe).nuspec')" />

		<Exec Command="$(NuGetFolder)\nuget.exe pack $(DependencyNameSafe).nuspec" WorkingDirectory="$(NPackageBuildDirectory)" />

		<ItemGroup>
			<MimicPackage Include="$(NPackageBuildDirectory)\*.nupkg"/>
		</ItemGroup>

		<Copy SourceFiles="@(MimicPackage)" DestinationFiles="@(MimicPackage->'$(NPackageDirectory)\$(NPackageName)%(Extension)')" />

		<RemoveDir Directories="$(NPackageBuildDirectory)" />
	</Target>

	<Target Name="CopyReferences" DependsOnTargets="ResolveProjectReferences;ResolveAssemblyReferences">
		<Copy SourceFiles="@(_ResolveAssemblyReferenceResolvedFiles)" 
            DestinationFiles="@(_ResolveAssemblyReferenceResolvedFiles->'$(BuildDependencyDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>

	<Target Name="Package">
		<MakeDir Directories="$(MergeDirectory)" />
		<CallTarget Targets="CopyReferences" />
		<ItemGroup>
        	<DD4TFiles Include="$(BuildBinDirectory)\**\DD4T.*.dll" />
        	<NewtonSoftFiles Include="$(BuildBinDirectory)\**\Newtonsoft.*.dll" />
        	<BinFiles Include="@(DD4TFiles);@(NewtonSoftFiles)" />
        	<MainDLL Include="$(BuildBinDirectory)\**\$(MSBuildProjectName)*.dll" />
    	</ItemGroup>
		<Message Text="ILMerge - input for merge: @(BinFiles)"  Importance="High"/>
		<Message Text="ILMerge - file to create: $(MergeFile)"  Importance="High"/>
		<Message Text="ILMerge - log file: $(logFile)"  Importance="High"/>
		<Message Text="ILMerge - build dependency directory: $(BuildDependencyDirectory)"  Importance="High"/>
		<Message Text="ILMerge - key file: $(keyFile)"  Importance="High"/>
    	<ILMerge InputAssemblies="@(BinFiles)" 
            OutputFile="$(MergeFile)" 
            LogFile="$(logFile)"
            DebugInfo="true" 
            XmlDocumentation="true" 
            KeyFile="$(keyFile)" 
            TargetPlatformVersion="v4"
            TargetPlatformDirectory="C:\Windows\Microsoft.NET\Framework64\v4.0.30319"
            SearchDirectories="$(BuildDependencyDirectory)"
            DelaySign="true" />
		
    	<!-- Get the productversion from the assemblies -->
    	<GetInformationalVersion AssemblyFile="@(MainDLL)">
    		<Output TaskParameter="Version" PropertyName="VersionInfo"/>
    	</GetInformationalVersion>

    	<Copy SourceFiles="@(InstallerFiles)" DestinationFiles="@(InstallerFiles->'$(BuildPackageDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />

    	<ItemGroup>
    		<PackageFiles Include="$(BuildPackageDirectory)\**\*"/>
    	</ItemGroup>

    	<!-- Create ZipPackage -->
        <Zip Files="@(PackageFiles)" ZipFileName="$(BuildOutputDirectory)\$(MSBuildProjectName).$(VersionInfo)$(PackageSuffix).zip" WorkingDirectory="$(BuildPackageDirectory)" />

    	<!-- Remove temporary files -->
    	<RemoveDir Directories="$(BuildNuGetDirectory)" />
    	<RemoveDir Directories="$(MergeDirectory)" />
    	<RemoveDir Directories="$(BuildWorkDirectory)" />
    	<RemoveDir Directories="$(BuildPackageDirectory)" />
    	<RemoveDir Directories="$(BuildDependencyDirectory)" />
	</Target>
	<Target Name="PackageNuGet" Condition="'$(Configuration)'=='Release'">
		<ItemGroup>
			<PackageFilesCleanup Include="$(BuildPackageDirectory)\**\*.*"/>
        	<MainDLL Include="$(BuildBinDirectory)\**\$(MSBuildProjectName)*.dll" />
		</ItemGroup>
		<Delete Files="@(PackageFilesCleanup)" />
		
		<MakeDir Directories="@(NuGetStructureFolders)"/>

		<ItemGroup>
        	<MainPackageFiles Include="$(BuildBinDirectory)\**\*.dll;$(BuildBinDirectory)\**\*.pdb;$(BuildBinDirectory)\**\*.xml" Exclude="$(BuildBinDirectory)\**\*CodeAnalysis*.xml"/>
        </ItemGroup>
    	
    	<!-- Get the productversion from the assemblies -->
    	<GetInformationalVersion AssemblyFile="@(MainDLL)">
    		<Output TaskParameter="Version" PropertyName="VersionInfo"/>
    	</GetInformationalVersion>

		<!-- Get the productversion from the assemblies -->
    	<GetNewDevVersion OldVersion="$(VersionInfo)" Condition="'$(Configuration)' == 'Debug'">
    		<Output TaskParameter="NewVersion" PropertyName="VersionInfo"/>
    	</GetNewDevVersion>

		<Message Text="Got a new version: $(VersionInfo)"  Importance="High"/>
        <ItemGroup>
        	<NuGetFiles Include="$(NuSpecFile)"/>
        </ItemGroup>

    	<Copy SourceFiles="@(NuGetFiles)" DestinationFiles="@(NuGetFiles->'$(BuildPackageDirectory)\%(Filename)%(Extension)')"/>
    	<Copy SourceFiles="@(MainPackageFiles)" DestinationFiles="@(MainPackageFiles->'$(BuildBinDirectory)\%(Filename)%(Extension)')"/>

    	<PropertyGroup>
    		<NuSpecFile>$(BuildPackageDirectory)\$(NuSpecFileName)</NuSpecFile>
    	</PropertyGroup>

    	<!-- Update version in nuspec file -->
    	<XmlUpdate XmlFileName="$(NuSpecFile)" XPath="//version" Value="$(VersionInfo)" />


		<Copy SourceFiles="@(MainPackageFiles)" DestinationFiles="@(MainPackageFiles->'$(BuildNuGetFramework40Directory)\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(MainPackageFiles)" DestinationFiles="@(MainPackageFiles->'$(BuildNuGetFramework45Directory)\%(RecursiveDir)%(Filename)%(Extension)')" />

    	<!-- Create NuGet package -->
    	<Exec Command='$(NuGetFolder)\nuget.exe pack "$(NuSpecFile)" -OutputDirectory "$(BuildOutputDirectory)"' WorkingDirectory="$(BuildPackageDirectory)"/>

		<XmlPeek
			Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd' /&gt;"
			Query="//id/text()"
			XmlInputPath="$(NuSpecFile)">
			<Output TaskParameter="Result" ItemName="PackageName" />
		</XmlPeek>

		<Delete Files="$(NuSpecFile)" />

    	<!-- Create ZipPackage -->
		<Zip Files="@(MainPackageFiles)" ZipFileName="$(BuildOutputDirectory)\@(PackageName).$(VersionInfo).zip" WorkingDirectory="$(BuildBinDirectory)" />

    	<RemoveDir Directories="$(BuildNuGetDirectory)" />
    	<RemoveDir Directories="$(MergeDirectory)" />
    	<RemoveDir Directories="$(BuildWorkDirectory)" />
    	<RemoveDir Directories="$(BuildPackageDirectory)" />
    	<RemoveDir Directories="$(BuildDependencyDirectory)" />
	</Target>

	<Target Name="Install">
		<ItemGroup>
			<NuGetPackage Include="$(BuildPackageDirectory)\**\*.nupkg"/>
		</ItemGroup>
		<Copy SourceFiles="@(NuGetPackage)" DestinationFolder="$(NUGET_LOCALREPO)" />
	</Target>
</Project>