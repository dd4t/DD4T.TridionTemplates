<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tridion.ContentManager.Common</name>
    </assembly>
    <members>
        <member name="T:Tridion.ContentManager.AccessDeniedException">
            <summary>
            An exception that is thrown if access is denied.
            </summary>
            <remarks>
            There are two kinds of access denied scenarios. 
            In both cases this exception is thrown, but with different error codes.
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.AccessDenied"/></term><description>Attempt to log in with a user which doesn't have access to the system.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.PermissionDenied"/></term><description>Attempt to perform an action for which the user doesn't have permissions.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.KernelException">
            <summary>
            Base class for exceptions raised by the TCM Kernel.
            </summary>
            <remarks>
            This is not an abstract base class. For some specific kernel errors, specific subclasses are thrown.
            For all other kernel errors, instances of KernelException are thrown and the error code can be used
            to determine the cause of the exception.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.TcmErrorCode"/>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of the KernelException class.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Diagnostics.TraceEventType)">
            <summary>
            Initializes a new instance of the KernelException class with a given severity.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="severity">The severity for the exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of the KernelException class with an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception,System.Diagnostics.TraceEventType)">
            <summary>
            Initializes a new instance of the KernelException class with a given severity and inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
            <param name="severity">The severity for the exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.CreateFromCOMException(System.Exception)">
            <summary>
            Converts a COM exception raised by the TCM Kernel to an appropriate <see cref="T:Tridion.ContentManager.KernelException"/>-derived instance.
            </summary>
            <param name="e">The exception obtained from the legacy BL.</param>
            <returns>An instance of <see cref="T:Tridion.ContentManager.KernelException"/> or of a subclass or the original exception.</returns>
            <remarks>
            Since communication with the BL occurs through COM interop, all errors raised in the BL/DAL
            will enter .NET as COM exceptions with TCM error XML as the exception message.
            This method determines if a COM exception represents such a TCM Kernel error and, if so,
            convert it to a <see cref="T:Tridion.ContentManager.KernelException"/> or one of it's subclasses (based on the error code).
            If the COM exception does not represent a TCM Kernel error, the original exception is returned.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.CreateFromCOMException(System.Exception,System.String,System.Int32)">
            <summary>
            Converts a COM exception raised by the TCM Kernel to an appropriate <see cref="T:Tridion.ContentManager.KernelException"/>-derived instance.
            </summary>
            <param name="e">The exception obtained from the legacy BL.</param>
            <param name="errorMessageOverride">The error message obtained from the legacy BL. If <c>null</c>, the error message is obtained from the exception.</param>
            <param name="errorCodeOverride">The error code obtained from the legacy BL. If <c>0</c>, the error code is obtained from the exception.</param>
            <returns>An instance of <see cref="T:Tridion.ContentManager.KernelException"/> or of a subclass or the original exception.</returns>
        </member>
        <member name="P:Tridion.ContentManager.KernelException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
            <remarks>
            This method is overridden to include an optional stack trace obtained from the legacy BL.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.KernelException.LegacyCallStack">
            <summary>
            Gets the call stack as obtained from the legacy BL.
            </summary>
            <value>
            If a legacy call stack is present, the value contains one array element per "stack frame".
            Otherwise, the value is <c>null</c>. 
            </value>
        </member>
        <member name="M:Tridion.ContentManager.AccessDeniedException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of AccessDeniedException.
            </summary>
            <param name="message">The localizable error message</param>
        </member>
        <member name="M:Tridion.ContentManager.AccessDeniedException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode)">
            <summary>
            Initializes a new instance of AccessDeniedException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
        </member>
        <member name="M:Tridion.ContentManager.AccessDeniedException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of AccessDeniedException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.Actions">
            <summary>
            Defines allowed actions for an item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.ConditionOperator">
            <summary>
            Defines an operator used for comparison.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.Equals">
            <summary>Compares if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.GreaterThan">
            <summary>Compares if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.LessThan">
            <summary>Compares if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.NotEqual">
            <summary>Compares if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.StringEquals">
            <summary>Compares if a string operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.Contains">
            <summary>Compares if a string operand contains the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.StartsWith">
            <summary>Compares if a string operand starts with the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.EndsWith">
            <summary>Compares if a string operand ends with the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator">
            <summary>
            Defines the operator used for comparison of numerical operands.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.Equals">
            <summary>Compares if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.GreaterThan">
            <summary>Compares if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.LessThan">
            <summary>Compares if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.NotEqual">
            <summary>Compares if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ConfigurationSettings">
            <summary>
            Utility class containing (extension) methods for configuration processing.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ConfigurationSettings.GetTcmHomeDirectory">
            <summary>
            Get the Tridion Content Manager root directory
            </summary>
            <returns>The name of the Tridion Content Manager root directory</returns>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BluePrintChainDirection">
            <summary>
            Defines the direction of a to-be-retrieved blueprint item chain.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BluePrintChainDirection.Up">
            <summary>Blueprint chain goes up to the top-level parent item.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BluePrintChainDirection.Down">
            <summary>Blueprint chain goes down to the bottom-level child item.</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ComponentType">
            <summary>
            Defines the sub-type of a Component.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.ComponentType.Normal">
            <summary>A normal Component containing XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia">
            <summary>A Multimedia Component containing binary content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.ComponentType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode">
            <summary>
            Specifies what will happen to the child nodes of a Taxonomy node after that node's deletion.
            </summary>
            <remarks>
                <para>
                    Using <see cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranch"/>, nodes in child Publications that are part of the branch will not be deleted. If a child node has other 
                    parents that are not part of the branch, the child node and its children will not be deleted.
                    <seealso cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranchIncludeChildPublications"/>.
                </para>
                <para>
                    Using <see cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranchIncludeChildPublications"/>, if a child node has other parents that are not part of the branch, the child node and its children will not be deleted.
                    <seealso cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranch"/>.
                </para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranch">
            <summary>
            Specifies that the entire branch of descendant nodes will be deleted, excluding nodes in child Publications.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.DeleteBranchIncludeChildPublications">
            <summary>
            Specifies that the entire branch of descendants will be deleted, including nodes in child Publications.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.RemoveParentFromChildren">
            <summary>
            Specifies that the deleted node will be removed from the children's parents.
            Children will become root if they have no other parents.
            If the children have other parents, those parents are preserved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.AssignChildrenToGrandparents">
            <summary>
            Specifies that the parents of the deleted node adopt the deleted node's children.
            If the children have other parents, those parents are preserved.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ListType">
            <summary>
            Specifies the type of list used to present allowed values for a field.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.None">
            <summary>Don't present a list of allowed values.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Select">
            <summary>Present a select list (or drop-down list if Height=1)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Edit">
            <summary>Not used.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Radio">
            <summary>Present radio buttons.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Checkbox">
            <summary>Present check boxes.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Tree">
            <summary>Present a tree (Taxonomy).</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.LockType">
            <summary>
            Defines the state (lock) of a versioned item.
            </summary>
            <remarks>
            This is a set of flags, so combinations of the values are possible.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.None">
            <summary>The item is not locked.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.CheckedOut">
            <summary>The item is checked-out. This can mean either a temporary (edit) lock, a permanent lock (explicit check-out performed by user) or a workflow lock.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.Permanent">
            <summary>The item is permanently checked-out, that is using an explicit check-out action.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.NewItem">
            <summary>The item is a new item, that is it has been created, but not checked-in for the first time yet.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.InWorkflow">
            <summary>The item is in a workflow.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SchemaPurpose">
            <summary>
            Defines a purpose of a Schema, that is in which items the Schema can be used.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component">
            <summary>Schema defines the content and metadata of Components with XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia">
            <summary>Schema defines the content and metadata of Multimedia Components.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Embedded">
            <summary>Schema is included into other Schemas.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata">
            <summary>Schema defines the metadata of items (except for Components).</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol">
            <summary>Schema defines the protocol fields of a Publication Target.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType">
            <summary>Schema defines the configuration data of a Virtual Folder.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters">
            <summary>Schema defines the parameters of a Template.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus">
            <summary>
            Specifies the Blueprint status to search for.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Unspecified">
            <summary>
            Don't search for a specific Blueprint status
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Local">
            <summary>
            Search for local items
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Localized">
            <summary>
            Search for localized items (a.k.a. local copies)
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Shared">
            <summary>
            Search for shared items 
            </summary>
            <remarks>
            This is only applicable for search in a context of specific publication. 
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.FilterException">
            <summary>
            The exception that is thrown when an invalid condition is specified on a filter/&gt;.
            </summary>
            <remarks>
            The default error code of this exception is <see cref="F:Tridion.ContentManager.TcmErrorCode.GeneralError"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.FilterException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Creates a new instance with a given details message.
            </summary>
            <param name="details">The localizable message that explains what went wrong.</param>
            <remarks>Do not use this constructor unless the reason for the exception is unknown. 
            Use <see cref="M:Tridion.ContentManager.FilterException.#ctor(System.String,Tridion.Localization.LocalizableMessage)"/> in stead to specify which condition caused the failure.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.FilterException.#ctor(System.String,Tridion.Localization.LocalizableMessage)">
            <summary>
            Creates a new instance with a given details message.
            </summary>
            <param name="conditionName">The condition name that generates the error.</param> 
            <param name="details">The localizable message sent with the conditionName.</param>
        </member>
        <member name="M:Tridion.ContentManager.FilterException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance with a given inner exception which provides the details.
            </summary>
            <param name="conditionName">The condition name that generates the error.</param> 
            <param name="inner">The inner exception.</param>
            <remarks>The <see cref="P:Tridion.TridionException.ErrorCode"/> is <see cref="F:Tridion.ContentManager.TcmErrorCode.GeneralError"/>.</remarks>        
        </member>
        <member name="T:Tridion.ContentManager.InvalidActionException">
            <summary>
            The exception that is thrown when an attempt to perform an action failed.
            </summary>
            <remarks>
            The default error code of this exception is <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidAction"/>.
            
            Throw an <see cref="T:Tridion.ContentManager.InvalidActionException"/> only when this action is not allowed because of the state of the object. 
            When the action is not allowed because the user does not have sufficient permissions, throw an <see cref="T:Tridion.ContentManager.PermissionDeniedException"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidActionException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidActionException"/>.
            </summary>
            <param name="message">A <see cref="T:Tridion.Localization.LocalizableMessage"/>.</param>
            <param name="category">A <see cref="T:Tridion.ContentManager.LogCategory"/> in which the exception can be categorized.</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidActionException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidActionException"/>.
            </summary>
            <param name="message">A <see cref="T:Tridion.Localization.LocalizableMessage"/>.</param>
            <param name="errorCode">An error code other than the default of <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidAction"/>.</param>
            <param name="category">A <see cref="T:Tridion.ContentManager.LogCategory"/> in which the exception can be categorized.</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidLinkException">
            <summary>
            The exception that is thrown if a Link has invalid value.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.InvalidLinkException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes new instance of <see cref="T:Tridion.ContentManager.InvalidLinkException"/>.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="errorCode">The error code.</param>
            <param name="category">The logging category.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidLinkException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidLinkException"/>.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="errorCode">The error code.</param>
            <param name="category">The logging category.</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidPropertyValueException">
            <summary>
            The exception that is thrown if the value of a property does not comply with a business rule.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.InvalidPropertyValueException.#ctor(System.String,Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/> with a given error code and log category.
            </summary>
            <param name="propertyName">The name of the property</param>
            <param name="details">A localizable message indicating what's wrong</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidPropertyValueException.#ctor(System.String,Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/> with a default error code and log category.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="details">The <see cref="T:Tridion.Localization.LocalizableMessage"/>.</param>
            <remarks>The <see cref="P:Tridion.TridionException.ErrorCode"/> is <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidPropertyChange"/>. The
            log category is <see cref="F:Tridion.ContentManager.LogCategory.General"/>.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidPropertyValueException.#ctor(System.String,Tridion.Localization.LocalizableMessage,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/> with a given inner exception.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="details">The <see cref="T:Tridion.Localization.LocalizableMessage"/>.</param>
            <param name="inner">The inner <see cref="T:System.Exception"/>.</param>
            <remarks>The <see cref="P:Tridion.TridionException.ErrorCode"/> is <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidPropertyChange"/>. The
            log category is <see cref="F:Tridion.ContentManager.LogCategory.General"/>.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.InvalidSchemaException">
            <summary>
            The exception that is thrown if an invalid schema is encountered.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.InvalidSchemaException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of InvalidSchemaException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidSchemaException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidSchemaException with an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidSchemaException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of InvalidSchemaException with a default error code.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidSchemaException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidSchemaException with a default error code and an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidXmlException">
            <summary>
            The exception that is thrown if an invalid xml is encountered.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.InvalidXmlException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of InvalidXmlException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidXmlException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidXmlException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidXsltException">
            <summary>
            The exception that is thrown if an invalid XSLT is encountered.
            </summary>
            <remarks>
            There are multiple reasons why a XSLT is considered invalid. 
            In all cases this exception is thrown, but with different error codes.
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.UnexpectedRootElement"/></term><description>The root element of the XSLT document is in the http://www.w3.org/1999/XSL/Transform namespace but the local name isn't transform or stylesheet.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.MissingAttribute"/></term><description>The root element of the XSLT document is not in the http://www.w3.org/1999/XSL/Transform namespace but is missing the xsl:version attribute.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidXsltException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of InvalidXsltException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidXsltException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidXsltException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:Tridion.ContentManager.ItemHasLocalCopiesException">
            <summary>
            The exception that is thrown when change to an item failed due to the constraint that the item has local copies.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ItemIsInUseException">
            <summary>
            The exception that is thrown when change to an item failed due to the constraint that the item is in use.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ItemIsInUseException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ItemIsInUseException"/> with a default error code.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The log category.</param>
            <remarks>
            The default error code of this exception is <see cref="F:Tridion.ContentManager.TcmErrorCode.ItemIsInUse"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ItemIsInUseException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ItemIsInUseException"/> class.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.ItemHasLocalCopiesException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ItemHasLocalCopiesException"/> with a default error code.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The log category.</param>
            <remarks>
            The default error code of this exception is <see cref="F:Tridion.ContentManager.TcmErrorCode.ItemIsInUse"/>.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ItemTypeClass">
            <summary>
            Defines the "class" of item types.
            </summary>
            <remarks>
            The <see cref="T:Tridion.ContentManager.ItemType"/> enumeration is a peculiar kind of Flags enumeration (bit map).
            Because there are too many item types to fit in a 32 bit integer, item types have been classified.
            Two bits (bit values 0x10000 and 0x20000) in the item type value represent the "class" of item type.
            These "class bits" are combined with one other bit to come to an item type value.
            Only item types value for item types within the same class can be safely OR-ed together.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.ItemTypeClass.RepositoryLocal">
            <summary>Item types of Repository-Local Objects and Publications</summary>
        </member>
        <member name="F:Tridion.ContentManager.ItemTypeClass.SystemWide">
            <summary>Item types of System-wide Objects, excluding Publications</summary>
        </member>
        <member name="F:Tridion.ContentManager.ItemTypeClass.Workflow">
            <summary>Item types of Workflow-related Objects</summary>
        </member>
        <member name="T:Tridion.ContentManager.LoadFlags">
            <summary>
            Specifies how the XML representation of an Identifiable Object should be loaded.
            </summary>
            <remarks>
            The <see cref="F:Tridion.ContentManager.LoadFlags.IncludeAllowedActions"/> flag is used to include allowed actions information when reading an object through the Core Service.
            It is not needed when using the properties <c>IdentifiableObject.AllowedActions</c> or <c>IdentifiableObject.DeniedActions</c>
            since these properties will implicitly load the allowed actions information.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.None">
            <summary>
            Load in the default manner.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.WebDavUrls">
            <summary>
            Load the item including WebDAV URLs.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.KeywordXlinks">
            <summary>
            Load with Keyword elements as XLink element (i.e. with the Keyword URI as xlink:href attribute)
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.Expanded">
            <summary>
            Load a Tridion Web Schema with embedded fields expanded.
            Load a dynamic Template with xsl:includes expanded.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.IncludeAllowedActions">
            <summary>
            Load the allowed actions information for the object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.PermissionDeniedException">
            <summary>
            The exception that is thrown when an attempt to perform an action failed for the User that does not have sufficient permissions.
            </summary>
            <remarks>
            Throw a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> only when, with different permissions, the action is allowed. Otherwise throw an <see cref="T:Tridion.ContentManager.InvalidActionException"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.PermissionDeniedException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> with the default error code.
            </summary>
            <param name="message">The localizable error message</param>
            <remarks>
            The default error code is <see cref="F:Tridion.ContentManager.TcmErrorCode.PermissionDenied"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.PermissionDeniedException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> with a given error code.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">An error code other than the default of <see cref="F:Tridion.ContentManager.TcmErrorCode.PermissionDenied"/>.</param>
        </member>
        <member name="T:Tridion.ContentManager.DatabaseException">
            <summary>
            The exception that is thrown when a database exception is generated.
            </summary>
            <remarks>
            The default error code of this exception is <see cref="F:Tridion.ContentManager.TcmErrorCode.SQLException"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.DatabaseException.#ctor(Tridion.Localization.LocalizableMessage,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.DatabaseException"/>.
            </summary>
            <param name="message">The localizable message sent with the exception.</param> 
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidUriException">
            <summary>
            The exception that is thrown if an invalid URI is encountered.
            </summary>
            <remarks>
            There are multiple reasons why a URI is considered invalid. 
            In all cases this exception is thrown, but with different error codes.
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.UnexpectedItemType"/></term><description>The TCM URI contains an item type which is not expected.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidURI"/></term><description>The URI is not a well-formed TCM URI.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidURL"/></term><description>The URI is not an existing WebDAV URL.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.InvalidUriException"/>.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidUriException with an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of InvalidUriException with a default error code.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of InvalidUriException with a default error code and log category.
            </summary>
            <param name="message">The localizable error message</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Initializes a new instance of InvalidUriException with a default error code and an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:Tridion.ContentManager.ItemDoesNotExistException">
            <summary>
            The exception that is thrown if a non-existent item is requested.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.ItemDoesNotExist"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ItemDoesNotExistException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of ItemDoesNotExistException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.ListBaseColumns">
            <summary>
            Specifies which columns (XML attributes) to include in XML lists.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Id">
            <summary>Only the identifier (ID attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.IdAndTitle">
            <summary>Identifier (ID attribute) and display name (Title attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Default">
            <summary>The default set of columns. Typically, this is the ID and Title attributes plus additional attributes depending on the kind of list. What these additional attributes are can be found in the system schema.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Extended">
            <summary>Same as <see cref="F:Tridion.ContentManager.ListBaseColumns.Default"/>, plus the following extended columns: IsPublished, IsShared, IsLocalized, SubType (for schemas: purpose, for template: template type), FileExt (file extension of multimedia data), Trustee (name of revisor). Only applies to ListItems.</summary>
        </member>
        <member name="T:Tridion.ContentManager.LogCategory">
            <summary>
            Specifies the category to be used for logging.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.DeployerAction">
            <summary>
            Represents the action the deployer needs to take.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.DeployerAction.Commit">
            <summary>
            The deployer should commit the tranport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.DeployerAction.Wait">
            <summary>
            The deployer should wait to commit the transport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.DeployerAction.Abort">
            <summary>
            The deployer should abort the transport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.DeployerAction.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.PublishPriority">
            <summary>
            Identifies the priority of the publish action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishPriority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishPriority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishPriority.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishPriority.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.PublishTransactionState">
            <summary>
            Represents the states a Publish Transaction can have.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.ScheduledForPublish">
            <summary>
            The PublishTransaction is scheduled to start at the specified date time. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.WaitingForPublish">
            <summary>
            The PublishTransaction is waiting to be processed. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.InProgress">
            <summary>
            The PublishTransaction is currently in progess. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.ScheduledForDeployment">
            <summary>
            The PublishTransaction is scheduled to be deployed at the specified date time. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.WaitingForDeployment">
            <summary>
            The PublishTransaction is waiting to be deployed at the specified date time. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Failed">
            <summary>
            The PublishTransaction failed. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Succes">
            <summary>
            The PublishTransaction succeeded.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Success">
            <summary>
            The PublishTransaction succeeded.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Warning">
            <summary>
            The PublishTransaction succeeded but contains warnings.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Resolving">
            <summary>
            The PublishTransaction is currently resolving.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Rendering">
            <summary>
            The PublishTransaction is currently rendering.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Throttled">
            <summary>
            The PublishTransaction is currently throttled by the TransportService.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.ReadyForTransport">
            <summary>
            The PublishTransaction is currently is ready for transport.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Transporting">
            <summary>
            The PublishTransaction is currently being transported to the destinations.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.Deploying">
            <summary>
            The PublishTransaction is currently being deployed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.PreparingDeployment">
            <summary>
            The PublishTransaction is currently begin prepared for deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.PreCommittingDeployment">
            <summary>
            The PublishTransaction is pre committing the deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.CommittingDeployment">
            <summary>
            The PublishTransaction is committing the deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.PublishTransactionState.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.RenderMode">
            <summary>
            Identifies the type of render mode to be used during rendering.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.RenderMode.Publish">
            <summary>
            Use the publish mode when publishing an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.RenderMode.PreviewStatic">
            <summary>
            Use the preview static mode when previewing the latest checked in version of an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.RenderMode.PreviewDynamic">
            <summary>
            Use the preview dynamic mode when previewing the current version of an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.RenderMode.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.ResolvePurpose">
            <summary>
            Defines the purpose of a resolving operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.ResolvePurpose.Publish">
            <summary>
            The purpose of Resolving is to publish items, regardless of whether they're already published or not.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.ResolvePurpose.UnPublish">
            <summary>
            The purpose of Resolving is to unpublish previously published items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.ResolvePurpose.RePublish">
            <summary>
            The purpose of Resolving is to publish again items that were published previously.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.ResolvePurpose.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.StructureResolveOption">
            <summary>
            Represents the option to include the resolved items and/or structure.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.StructureResolveOption.OnlyItems">
            <summary>
            Only item(s) will be resolved. This is the default value.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.StructureResolveOption.OnlyStructure">
            <summary>
            Only Structure Group(s) will be resolved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.StructureResolveOption.ItemsAndStructure">
            <summary>
            Structure Group(s) along with item(s) will be resolved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.StructureResolveOption.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Permissions">
            <summary>
            Specifies the Permissions used for security checks.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.None">
            <summary>
            No permission to access the items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.Read">
            <summary>
            Grants read access to items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.Write">
            <summary>
            Grants write access to items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.Delete">
            <summary>
            Grants delete access to items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.Localize">
            <summary>
            Grants localize and unlocalize access to items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.All">
            <summary>
            Grants all permissions to acces the items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Permissions.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Queuing.QueueMessageAction">
            <summary>
            Defines possible actions on a queue message; used by search.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.None">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.Insert">
            <summary>
            Inserts an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.Update">
            <summary>
            Updates an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.Delete">
            <summary>
            Deletes an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.Reset">
            <summary>
            Purges the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessageAction.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Queuing.QueueMessagePriority">
            <summary>
            Defines possible priorities that a queue message can have.
            </summary>
            <remarks>
                <para>Using <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Low"/>, this message is retrieved if there aren't any messages with <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Normal"/> or <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.High"/> priority in the queue.</para>
                <para>Using <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Normal"/>, this message is retrieved if there aren't any messages with <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.High"/> priority.</para>
                <para>Using <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.High"/>, this message is retrieved before the messages with <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Low"/> or <see cref="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Normal"/> priority in the queue.</para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Low">
            <summary>
            Give the queue messages a low priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessagePriority.Normal">
            <summary>
            Give the queue messages a normal priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessagePriority.High">
            <summary>
            Give the queue messages a high priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.QueueMessagePriority.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Queuing.PredefinedQueue">
            <summary>
            Defines kinds of available predefined queues.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.PredefinedQueue.PublishQueue">
            <summary>
            Used to send QueueMessages to the publisher service for (Un-)Publishing.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.PredefinedQueue.DeployQueue">
            <summary>
            Used to send the commit or cancel command to the publisher service for scheduled deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.PredefinedQueue.SearchQueue">
            <summary>
            Used to send QueueMessages to the search service for modifying the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Queuing.PredefinedQueue.WorkflowAgentQueue">
            <summary>
            Used to send QueueMessages to the workflow agent service for running automated activities.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Rights">
            <summary>
            Specifies the Rights used for security checks.
            </summary>
            <remarks>
                <para>
                    Using <see cref="F:Tridion.ContentManager.Security.Rights.WorkflowManagement"/> allows the user to:
                    <list type="bullet">
                        <item>Create, update and delete ProcessDefinitions.</item>
                        <item>Localize and UnLocalize ProcessDefinitions.</item>
                        <item>Set the Process Definition for a Component, Page Template and Component Template.</item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.All">
            <summary>
            All rights.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.None">
            <summary>
            No rights.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PublicationAccess">
            <summary>
            Grants access to a publication.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PublicationManagement">
            <summary>
            Grants publication properties update. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.FolderManagement">
            <summary>
            Grants create, update, delete rights on Folder.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.StructureGroupManagement">
            <summary>
            Grants create, update, delete rights on StructureGroup.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.SchemaManagement">
            <summary>
            Grants create, update, delete rights on Schema.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.ComponentManagement">
            <summary>
            Grants create, update, delete rights on Components.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.ComponentTemplateManagement">
            <summary>
            Grants create, update, delete rights on ComponentTemplates.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PageManagement">
            <summary>
            Grants create, update, delete rights on Pages.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PageTemplateManagement">
            <summary>
            Grants create, update, delete rights on PageTemplates.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.ProfileManagement">
            <summary>
            Grants create, update, delete rights on TargetGroups.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PublishManagement">
            <summary>
            Grants rights to publish.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.PermissionManagement">
            <summary>
            Grants rights to change rights on Repository and permissions on Organizational Items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.WorkflowManagement">
            <summary>
            Grants create, update, delete rights to manage Worflow.
            To grant workflow management rights to a trustee, the WorkflowManager privilege must be used.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.CategoryManagement">
            <summary>
            Grants create, update, delete rights on Categories.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.TemplateBuildingBlockManagement">
            <summary>
            Grants create, update, delete rights on TemplateBuildingBlocks.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.VirtualFolderManagement">
            <summary>
            Grants create, update, delete rights on VirtualFolders.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Rights.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.DirectorySearchType">
            <summary>
            Search types for Directory Group Mapping.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.DirectorySearchType.Subtree">
            <summary>
            Search in a given subtree.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.DirectorySearchType.Group">
            <summary>
            Search in a given group.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.DirectorySearchType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.StaThreadPool`1">
            <summary>
            Provides a pool of threads that can be used to post work items.
            </summary>
            <typeparam name="T">Specifies the type of work items.</typeparam>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.#ctor(System.Int32,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StaThreadPool`1"/> class.
            </summary>
            <param name="maxThreadCount">
            The maximum number of threads in a thread pool.
            </param>
            <param name="threadTimeout">
            The thread's timeout after which thread will be aborted.
            </param>
            <param name="threadNamePrefix">
            The thread's name prefix.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.QueueWorkItem(Tridion.ContentManager.StaThreadPool{`0}.WorkItemCallback,`0)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callback">The method to execute.</param>
            <param name="item">An object that contains data to be used by the method.</param>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.ControlThreads">
            <summary>
            Controls working threads, aborts working thread if it exceeds timeout value.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.Dispose">
            <summary>
            Closes thread pool and all created threads.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.Threads">
            <summary>
            Gets created threads (excluding control thread).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.StaThreadPool`1.WorkItemCallback">
            <summary>
            Common Delegate used to perform work item.
            </summary>
            <param name="item">The item which should be processed.</param>
        </member>
        <member name="T:Tridion.ContentManager.StaThreadPool`1.StaThread">
            <summary>
            Creates and controls a thread.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.StaThread.#ctor(Tridion.ContentManager.StaThreadPool{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StaThreadPool`1.StaThread"/> class. 
            </summary>
            <param name="threadPool">The context <see cref="T:Tridion.ContentManager.StaThreadPool`1"/> of current thread.</param>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.StaThread.Abort">
            <summary>
            Aborts the thread.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StaThreadPool`1.StaThread.DoWork">
            <summary>
            Actual work process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.StaThread.Name">
            <summary>
            Gets the name of the thread.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.StaThread.IsBusy">
            <summary>
            Gets or sets a value indicating whether the thread is busy with execution user method.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.StaThread.InterruptionTime">
            <summary>
            Gets a time when thread should be aborted.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.StaThread.IsAlive">
            <summary>
            Gets a value indicating the execution status of the current thread is alive.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.StaThreadPool`1.StaThread.ThreadState">
            <summary>
            Gets the state of the thread.
            </summary>
            <value>The state of the thread.</value>
        </member>
        <member name="T:Tridion.ContentManager.TcmErrorCode">
            <summary>Error codes used in TridionException-derived exceptions</summary>
            <remarks>
            The numeric values correspond to the error codes as defined in TDSDefines, minus 0x80040000.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.TridionComException">
            <summary>
            This class is used to convert a .NET exception (chain) into an single XML string in the TCM R5 error format.
            </summary>
            <remarks>
            The R5 error XML is returned by the <see cref="P:Tridion.ContentManager.TridionComException.Message"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.TridionComException.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tridion.ContentManager.TridionComException"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TridionComException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.TridionComException"/> class.
            </summary>
            <param name="inner">The exception that is the cause of this Exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.TridionComException.#ctor(System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.TridionComException"/> class.
            </summary>
            <param name="inner">The exception that is the cause of this Exception</param>
            <param name="skipOuterException">Skip this TridionComException in the Message property.</param>
        </member>
        <member name="M:Tridion.ContentManager.TridionComException.GetMessageId(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the message id.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <param name="appendResId">if set to <c>true</c> [append res id].</param>
            <param name="returnResourceNameIfNotFound">if set to <c>true</c> [return resource name if not found].</param>
            <returns>String representation of MessageId</returns>
        </member>
        <member name="P:Tridion.ContentManager.TridionComException.Message">
            <summary>
            Gets the exception message which represents the .NET exception chain and stack trace in R5 XML format.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TridionFileStream">
            <summary>
            Custom file stream to provide streaming support.
            Deletes the file after streaming is done.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TridionFileStream.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.TridionFileStream"/> class with the specified path and creation mode.
            </summary>
            <param name="path">A relative or absolute path for the file that the current TridionFileStream object will encapsulate.</param>
            <param name="mode">A constant that determines how to open or create the file.</param>
        </member>
        <member name="M:Tridion.ContentManager.TridionFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.TridionFileStream"/> class with the specified path, creation mode, and read/write permission.
            </summary>
            <param name="path">A relative or absolute path for the file that the current TridionFileStream object will encapsulate.</param>
            <param name="mode">A constant that determines how to open or create the file.</param>
            <param name="access">A constant that determines how the file can be accessed by the TridionFileStream object. 
            This gets the CanRead and CanWrite properties of the TridionFileStream object. 
            CanSeek is <c>true</c> if path specifies a disk file.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.TridionFileStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.FileStream"/> and optionally releases the managed resources.
            And deletes the file from system.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Tridion.ContentManager.TridionFileStream.GetTridionTempDirectoryPath">
            <summary>
            Gets the temporary directory path.
            </summary>
            <returns>Directory path</returns>
        </member>
        <member name="M:Tridion.ContentManager.TridionFileStream.GetTempFileName">
            <summary>
            Generates a unique file name and returns the full path of that file.
            </summary>
            <returns>A String containing the full path of the temporary file.</returns>
        </member>
        <member name="T:Tridion.ContentManager.UniquenessException">
            <summary>
            The exception that is thrown when an attempt to save an item failed due to uniqueness constraints.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UniquenessException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.UniquenessException"/> with a default error code.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The log category.</param>
            <remarks>
            The default error code is <see cref="F:Tridion.ContentManager.TcmErrorCode.UniquenessConflict"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.UniquenessException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.UniquenessException"/> with a given error code.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The log category.</param>
            <param name="errorCode">An error code other than the default of <see cref="F:Tridion.ContentManager.TcmErrorCode.UniquenessConflict"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utils.ElementsEqualIgnoringSequence(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Matches two collection if they both contain same elements ignoring the sequence.
            </summary>
            <param name="sourceList">The source list for the extension method.</param>
            <param name="otherList">The other list to compare the source to.</param>
            <returns>True if both the collection contains same elements otherwise False.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.CheckBits(System.Int32,System.Int32)">
            <summary>
            Check whether a given (set of) bit(s) is set.
            </summary>
            <param name="pattern">The bit(s) to check for.</param>
            <param name="bitMap">The bit map to check in.</param>
            <returns><c>true</c> if all bits in the pattern are set in the bit map</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.CheckBits(System.Enum,System.Enum)">
            <summary>
            Check whether a given (set of) flag(s) is set in a Flags enum.
            </summary>
            <param name="pattern">The flag(s) to check for.</param>
            <param name="flags">The flags enum to check in.</param>
            <returns><c>true</c> if all flags in the pattern are set in the flags enum.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.GetTcmHomeDirectory">
            <summary>
            Get the Tridion Content Manager root directory
            </summary>
            <returns>The name of the Tridion Content Manager root directory</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.GetR5IconValue(Tridion.ContentManager.ItemType)">
            <summary>
            Get the value of the Icon attribute used in R5 XML lists, based on a given item type.
            </summary>
            <param name="itemType">The item type.</param>
            <returns>A string containing the value of the Icon attribute.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.GetR5IconValue(Tridion.ContentManager.ItemType,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            Get the value of the Icon attribute used in R5 XML lists, based on its consituent parts.
            </summary>
            <param name="itemType">The item type.</param>
            <param name="isLocked">Whether the item is locked.</param>
            <param name="isPublished">Whether the item is published.</param>
            <param name="subType">The subtype, if applicable, or <c>null</c> if not applicable.</param>
            <param name="mmFileExtension">The file extension of a MultiMedia Component, or <c>null</c> if not applicable.</param>
            <returns>A string containing the value of the Icon attribute.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.AssertSameContextRepositories(Tridion.ContentManager.TcmUri,Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that the two RepositoryLocalObject TCM URIs have the same context Repositories.
            </summary>
            <param name="uri1">TcmUri of the first RepositoryLocalObject.</param>
            <param name="uri2">TcmUri of the second RepositoryLocalObject.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utils.IsValidSystemWideContextRepository(Tridion.ContentManager.TcmUri)">
            <summary>
            Checks if the specified System Wide Object TCM Uri has a valid context repository.
            The context repository part of the given Uri must be system wide and not point to a specific repository.
            </summary>
            <param name="uri">
            The TCM Uri to verify.
            </param>
            <returns>
            <c>true</c> is the Uri specifies a valid context repository for a System Wide Object; <c>false</c> otherwise.
            </returns>
            <exception cref="T:System.NullReferenceException">if <paramref name="uri"/> is <c>null</c></exception>
        </member>
        <member name="M:Tridion.ContentManager.Utils.IsValidSystemWideContextRepository(Tridion.ContentManager.TcmUri,Tridion.Localization.LocalizableMessage@)">
            <summary>
            Checks if the specified System Wide Object TCM Uri has a valid context repository.
            The context repository part of the given Uri must be system wide and not point to a specific repository.
            </summary>
            <param name="uri">
            The TCM Uri to verify.
            </param>
            <param name="errorMessage">
            If the Uri is not valid, this parameter will receive a suitable error message.
            </param>
            <returns>
            <c>true</c> is the Uri specifies a valid context repository for a System Wide Object; <c>false</c> otherwise.
            </returns>
            <exception cref="T:System.NullReferenceException">if <paramref name="uri"/> is <c>null</c></exception>
        </member>
        <member name="M:Tridion.ContentManager.Utils.AssertValidSystemWideContextRepository(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that the specified System Wide Object TCM Uri has a valid context repository.
            The context repository part of the given Uri must be system wide and not point to a specific repository.
            </summary>
            <param name="uri"><see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
            <exception cref="T:System.NullReferenceException">if <paramref name="uri"/> is <c>null</c></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">if <paramref name="uri"/> doesn't have a proper context repository for a System Wide Object</exception>
        </member>
        <member name="M:Tridion.ContentManager.Utils.IsValidTcmUri(Tridion.ContentManager.TcmUri,System.Boolean,Tridion.ContentManager.ItemType,Tridion.Localization.LocalizableMessage@)">
            <summary>
            Checks if the given Uri represents an Identifiable Object of a specific item type.
            If not, the <paramref name="errorMessage"/> will be filled with an error message that identified the problem.
            </summary>
            <param name="uri">The Uri to check</param>
            <param name="allowNullUri">Determines whether a <c>null</c> or <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/> value is valid or not</param>
            <param name="itemType">The item type that the given Uri must specify</param>
            <param name="errorMessage">The error message that describes the reason why the Uri is not valid. If the Uri is valid, this parameter will be set to <c>null</c>.</param>
            <returns><c>true</c> if the given Uri represents an Identifiable Object of the provided item type; <c>false</c> otherwise</returns>
            <remarks>
            The method doesn't check if the object actually exists. The Uri can be invalid in the following cases:
            <ol>
            <li>
                <paramref name="allowNullUri"/> is <c>false</c> and the given Uri is <c>null</c> or <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/>.
            </li>
            <li>
                The Uri's item type is not equal to <paramref name="itemType"/>.
            </li>
            <li>
                The Uri is a System Wide Object's Uri and publication part is pointing to a specific publication.
            </li>
            <li>
                The Uri is a Non System Wide Object's Uri and publication part is pointing to System Wide Repository (0).
            </li>
            </ol>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Utils.IsRepository(Tridion.ContentManager.TcmUri,System.Boolean,Tridion.Localization.LocalizableMessage@)">
            <summary>
            Checks if the given Uri represents a Repository. If not, the <paramref name="errorMessage"/> will
            be filled with an error message that identified the problem.
            </summary>
            <param name="uri">The Uri to check if it is a Repository</param>
            <param name="allowNullUri">Determines whether a <c>null</c> or <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/> value is valid or not</param>
            <param name="errorMessage">The error message that describes the reason why the Uri is not valid. If the Uri is valid, this parameter will be set to <c>null</c>.</param>
            <returns><c>true</c> is the given Uri represents a Repository; <c>false</c> otherwise</returns>
            <remarks>
            The method doesn't check if the Repository actually exists. The Uri can be invalid in the following cases:
            <ol>
            <li>
                <paramref name="allowNullUri"/> is <c>false</c> and the given Uri is <c>null</c> or <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/>.
            </li>
            <li>
                The Uri's item type is not equal to <see cref="F:Tridion.ContentManager.ItemType.Publication"/>.
            </li>
            <li>
                The Uri's publication part is pointing to a specific publication.
            </li>
            </ol>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Utils.GetAllItemTypes(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType},System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemTypeClass})">
            <summary>
            Gets a List of ItemType depending on <paramref name="typesToExclude"/> and <paramref name="expectedItemTypeClasses"/>.
            </summary>
            <param name="typesToExclude">List of ItemType to exclude from the ResultSet.</param>
            <param name="expectedItemTypeClasses">Expected ItemTypeClass.</param>
            <returns>A list of ItemType</returns>
            <remarks>
                For example, if ItemType to exclude is set to new ItemType[]{ItemType.Schema} and expectedItemTypeClass is set to new ItemTypeClass[]{ItemTypeClass.RepositoryLocal} , it will return all the RepositoryLocalItem except Schema.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Utils.AreEqualCollections(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Checks whether the specified collections contain equal items.
            </summary>
            <returns>True if specified collections contain equal items, false otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utils.AssertValidWindowsPathComponent(System.String,System.String)">
            <summary>
            Asserts that the specified path is a valid Windows path component.
            </summary>
            <param name="path">The path to validate.</param>
            <param name="propertyName">The property name to report in case of an Exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utils.AssertValidUrl(System.String,System.String)">
            <summary>
            Asserts that the specified Url is a valid.
            </summary>
            <param name="url">The Url to validate.</param>
            <param name="propertyName">The property name to report in case of an Exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utils.ComputeHash(System.Byte[])">
            <summary>
            Modified FNV with good avalanche behavior and uniform distribution with larger hash sizes. 
            http://bretm.home.comcast.net/~bretm/hash/6.html
            </summary>
            <param name="data">The byte array to compute the hash code for</param>
            <returns>A hash code for the given array</returns>
        </member>
        <member name="T:Tridion.ContentManager.VersionCondition">
            <summary>
            Specifies which versions to include in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.VersionCondition.AllVersions">
            <summary>
            Include all versions in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.VersionCondition.OnlyLatestVersions">
            <summary>
            Include only the latest version in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.VersionCondition.OnlyLatestAndCheckedOutVersions">
            <summary>
            Include only latest versions and checked out version in the search filter.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityState">
            <summary>
            Defines a state of an Activity.
            </summary>
            <remarks>
            When the Workflow Agent can't execute the script, the Activity is set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/>.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityState.Assigned">
            <summary>
            The Activity is assigned to an User or Group.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityState.Started">
            <summary>
            The Activity is started by a User.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityState.Suspended">
            <summary>
            The Activity is suspended.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityState.Finished">
            <summary>
            The Activity is finished. 
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityState.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityType">
            <summary>
            Defines a type of an Activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityType.Normal">
            <summary>
            Normal activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityType.Decision">
            <summary>
            Decision activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ActivityType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ApprovalStatusType">
            <summary>
            Defines a type of an Approval Status.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ApprovalStatusType.Undefined">
            <summary>
            Undefined Approval Status.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ApprovalStatusType.Unapproved">
            <summary>
            Unapproved Approval Status.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessFinishReason">
            <summary>
            Defines the reason a Process is going to be finished or has finished already.
            </summary>
            <remarks>
                Some changes have been introduced in comparison with SDL Tridion R5. The <see cref="F:Tridion.ContentManager.Workflow.ProcessFinishReason.ForceFinished"/> value did not exist in R5.
                The ProcessFinishForced value of R5 is mapped to <see cref="F:Tridion.ContentManager.Workflow.ProcessFinishReason.Terminated"/> in TOM.NET.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessFinishReason.CompletedNormally">
            <summary>
            Identifies if the process has finished normally.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessFinishReason.ForceFinished">
            <summary>
            Identifies if the process was forcefully finished.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessFinishReason.Terminated">
            <summary>
            Identifies if the process was terminated.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessFinishReason.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessType">
            <summary>
            Defines the type of a Process
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessType.Any">
            <summary>
            Includes both ProcessInstance and ProcessHistory.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessType.Active">
            <summary>
            Includes ProcessInstance only.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessType.Historical">
            <summary>
            Includes ProcessHistory only.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ProcessType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.XmlFormat">
            <summary>
            Specifies the XML "format" to use: R5 compatible or native R6
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlFormat.R5Compatible">
            <summary>R5 compatible XML format</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlFormat.R6Native">
            <summary>R6 native XML format</summary>
        </member>
        <member name="T:Tridion.ContentManager.XmlUtilities">
            <summary>
            Utility class containing (extension) methods for XML processing, either using XML DOM or low-level XML reader/writers.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.GetNewXmlDocument">
            <summary>
            Create a new XmlDocument instance.
            </summary>
            <returns>A new XmlDocument instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.LoadXmlDocument(System.String)">
            <summary>
            Creates a new XmlDocument and load it with given XML.
            </summary>
            <param name="xml">The XML to parse.</param>
            <returns>An XmlDocument instance loaded with the given XML.</returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.GetNamespaceManager">
            <summary>
            Gets an XmlNamespaceManager instance initialized with frequently used namespaces (tcm, xsd, xlink)
            </summary>
            <returns>An XmlNamespaceManager instance initialized with frequently used namespaces (tcm, xsd, xlink)</returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.CreateTcmElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Extension method for XmlDocument to create an element in the TCM namespace.
            </summary>
            <param name="xmlDoc">The XmlDocument on which to operate.</param>
            <param name="localName">The local name of the element to create.</param>
            <returns>An XML element in the TCM namespace, using the standard TCM namespace prefix.</returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.SelectSingleElement(System.Xml.XmlNode,System.String)">
            <summary>
            Extension method for XmlNode to select a single XML element for a given XPath.
            </summary>
            <param name="contextNode">The context for the XPath evaluation (should be an XmlElement or XmlDocument).</param>
            <param name="xpath">The XPath that selects XML element(s). The namespace prefixes tcm, xlink and xsd can be used (see <see cref="M:Tridion.ContentManager.XmlUtilities.GetNamespaceManager"/>)</param>
            <returns>The first XML element found using the given context and XPath, or <c>null</c> if no such element exists.</returns>
            <remarks>
            The XPath must select XML elements only, otherwise this method throws an exception.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.SelectSingleElement(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Extension method for XmlNode to select a single XML element for a given XPath.
            </summary>
            <param name="contextNode">The context for the XPath evaluation (should be an XmlElement or XmlDocument).</param>
            <param name="xpath">The XPath that selects XML element(s).</param>
            <param name="nsManager">The namespace manager used to resolve namespace prefixes used in the XPath.</param>
            <returns>The first XML element found using the given context and XPath, or <c>null</c> if no such element exists.</returns>
            <remarks>
            The XPath must select XML elements only, otherwise this method throws an exception.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.ValueType)">
            <summary>
            Extension method for XmlWriter to write a typed attribute value.
            </summary>
            <param name="writer">The writer on which to operate.</param>
            <param name="localName">The local name of the attribute.</param>
            <param name="value">The typed value (must be a value type).</param>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.WriteOptionalAttributeValue``1(System.Xml.XmlWriter,System.String,System.Nullable{``0})">
            <summary>
            Extension method for XmlWriter to write an optional typed attribute value.
            </summary>
            <typeparam name="T">The (non-nullable) value type</typeparam>
            <param name="writer">The writer on which to operate.</param>
            <param name="localName">The local name of the attribute.</param>
            <param name="nullable">The nullable typed value (must be a value type).</param>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.InsertXsdElement(System.Xml.XmlNode,System.String)">
            <summary>
            Extension method for XmlNode to insert an element as the first child with the given local name in the xsd namespace.
            </summary>
            <param name="node">The node on which to operate.</param>
            <param name="localName">The locale name of the element.</param>
            <returns>The just inserted xsd element.</returns>
            <remarks>The element will be inserted as the first child of <paramref name="node"/></remarks>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.AppendXsdElement(System.Xml.XmlNode,System.String)">
            <summary>
            Extension method for XmlNode to append an element as the last child with the given local name in the xsd namespace.
            </summary>
            <param name="node">The node on which to operate.</param>
            <param name="localName">The locale name of the element.</param>
            <returns>The just inserted xsd element.</returns>
            <remarks>The element will be appended as the last child of <paramref name="node"/></remarks>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.GetXLinkAttribute(System.Xml.XmlElement,System.String)">
            <summary>
            Extension method for XmlElement for getting the value of a xlink attribute.
            </summary>
            <param name="element">The element on which to operate.</param>
            <param name="localName">The locale name of the xlink attribute.</param>
            <returns>The value of the xlink attribute.</returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.SetXLinkAttribute(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Extension method for XmlElement for setting a xlink attibute value.
            </summary>
            <param name="element">The XmlElement on which to operate.</param>
            <param name="localName">The locale name of the xlink attribute.</param>
            <param name="value">The value of the xlink attribute.</param>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.StripFragmentID(System.String@)">
            <summary>
            Function that takes out the fragmentID from the xLinkUri.
            </summary>
            <param name="xLinkUri">The XLink Uri to be parsed.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.MoveToNextElement(System.Xml.XmlReader)">
            <summary>
            Progresses this XML Reader to the next element or end of document.
            </summary>
            <param name="xmlReader"> The XML Reader.</param>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.IsValidXsdNCName(System.String)">
            <summary>
            Verifies the given string conforms with Xsd:NCName
            </summary>
            <param name="ncName"></param>
            <returns>returns true if valid otherwise false.</returns>
            <remarks>It is valid when:
            <list type="bullet">
            <item>The first character is a letter or an underscore.</item>
            <item>Following characters are letters, digits, underscores, dashes or dots.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.XmlUtilities.IsXmlChanged(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Determines whether XML has any changes changed
            </summary>
            <param name="oldXml">The old Xml.</param>
            <param name="currentXml">The current Xml.</param>
            <returns>
              <c>true</c> if XML changed; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
