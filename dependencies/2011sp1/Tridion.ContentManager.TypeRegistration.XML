<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tridion.ContentManager.TypeRegistration</name>
    </assembly>
    <members>
        <member name="T:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry">
            <summary>
            The COM interface for the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> implementation.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.GetPublicationTypesXml(System.Int32,System.Int32)">
            <summary>
            Gets <c>Xml</c> Representation of PublicationTypes 
            </summary>
            <param name="columnFilter">a <see cref="T:System.Int32"/>that refers to column to be included in the <c>Xml</c> Representation</param>
            <param name="languageId">a <see cref="T:System.Int32"/> represents Id of a Language. All the Localizable Texts will be localized using this Language</param>
            <returns>a <see cref="T:System.String"/> that denotes the <c>Xml</c> Representation of List of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> exists in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.TryGetPublicationTypeName(System.Int32,System.String@)">
            <summary>
            Gets the PublicationType's Name that corresponds to <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationId"/> Id. 
            </summary>
            <param name="publicationId">a <see cref="T:System.Int32"/> represents the Id of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <param name="publicationTypeName">When this method returns, contains the PublicationType's Name associated with the specified <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/>, if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> is found with <paramref name="publicationId"/>; otherwise, <code>PublicationType.Unknown.Name</code>. This parameter is passed uninitialized. 
            </param>
            <returns>
                a <see cref="T:System.Boolean"/> with value <see langword="true"/> if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> contains <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with specified <paramref name="publicationId"/> ; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.TryGetPublicationTypeId(System.String,System.Int32@)">
            <summary>
            Gets the PublicationType's Id that corresponds to <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> Name. 
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> represents the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <param name="publicationId">When this method returns, contains the PublicationType's Id associated with the specified <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> , if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> is found in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>; otherwise, <code>PublicationType.Unknown.Id</code>. This parameter is passed uninitialized. 
            </param>
            <returns>
                a <see cref="T:System.Boolean"/> with value <see langword="true"/> if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> contains <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with specified <paramref name="publicationTypeName"/> ; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.GetPublicationTypeName(System.Int32)">
            <summary>
            Gets the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> associated with <paramref name="publicationId"/> from the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>.
            </summary>
            <param name="publicationId"> a <see cref="T:System.Int32"/> represents the Id of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to lookup in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <returns>a <see cref="T:System.String"/> representing the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> associated with the <paramref name="publicationId"/> </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.GetPublicationTypeId(System.String)">
            <summary>
            Gets the ID of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/>. 
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> representing the name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <returns>a <see cref="T:System.Int32"/> corresponds to the Id of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.IPublicationTypeRegistry.ReloadConfiguration">
            <summary>
            Reloads the Configuration related to Type Registry.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade">
            <summary>
            Represents a COM visible Facade on top of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.GetPublicationTypesXml(System.Int32,System.Int32)">
            <summary>
            Gets <c>Xml</c> Representation of PublicationTypes 
            </summary>
            <param name="columnFilter">a <see cref="T:System.Int32"/>that refers to column to be included in the <c>Xml</c> Representation</param>
            <param name="languageId">a <see cref="T:System.Int32"/> represents Id of a Language. All the Localizable Texts will be localized using this Language</param>
            <returns>a <see cref="T:System.String"/> that denotes the <c>Xml</c> Representation of List of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> exists in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.GetPublicationTypeName(System.Int32)">
            <summary>
            Gets the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> associated with <paramref name="publicationId"/> from the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>.
            </summary>
            <param name="publicationId"> a <see cref="T:System.Int32"/> represents the Id of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to lookup in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <exception cref="T:Tridion.ContentManager.TridionComException"> Throws this exception if <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationId"/> could not be found in the Type Registry.</exception>
            <returns>a <see cref="T:System.String"/> representing the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> associated with the <paramref name="publicationId"/> </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.GetPublicationTypeId(System.String)">
            <summary>
            Gets the ID of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/>. 
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> representing the name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <exception cref="T:Tridion.ContentManager.TridionComException"> Throws this exception if <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> could not be found in the Type Registry.</exception>
            <returns>
                    a <see cref="T:System.Int32"/> corresponds to the Id of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.TryGetPublicationTypeName(System.Int32,System.String@)">
            <summary>
            Gets the PublicationType's Name that corresponds to <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationId"/> Id. 
            </summary>
            <param name="publicationId">a <see cref="T:System.Int32"/> represents the Id of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <param name="publicationTypeName">When this method returns, contains the PublicationType's Name associated with the specified <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/>, if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> is found with <paramref name="publicationId"/>; otherwise, <code>PublicationType.Unknown.Name</code>. This parameter is passed uninitialized. 
            </param>
            <returns>
                a <see cref="T:System.Boolean"/> with value <see langword="true"/> if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> contains <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with specified <paramref name="publicationId"/> ; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.TryGetPublicationTypeId(System.String,System.Int32@)">
            <summary>
            Gets the PublicationType's Id that corresponds to <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> Name. 
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> represents the Name of the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> to look up in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/></param>
            <param name="publicationId">When this method returns, contains the PublicationType's Id associated with the specified <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> , if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> is found in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>; otherwise, <code>PublicationType.Unknown.Id</code>. This parameter is passed uninitialized. 
            </param>
            <returns>
                a <see cref="T:System.Boolean"/> with value <see langword="true"/> if the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> contains <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with specified <paramref name="publicationTypeName"/> ; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.ReloadConfiguration">
            <summary>
            Reloads Configuration 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.ReturnListWithIdAndTitle(System.Int32)">
            <summary>
            Determines weather to return <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> Id and Title in the list.
            </summary>
            <param name="columnFilter">The column filter.</param>
            <returns><see langword="true"/> if the Id and Title are in the list otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.ReturnDefaultList(System.Int32)">
            <summary>
             Determines weather to return <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> weather to return Default list.
            </summary>
            <param name="columnFilter">The column filter.</param>
            <returns><see langword="true"/> if the default list is returned otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.ComWrapper.PublicationTypeRegistryFacade.GetCultureInfo(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Globalization.CultureInfo"/> specific to <paramref name="languageId"/>
            </summary>
            <param name="languageId"> a <see cref="T:System.Int32"/> represents Language Id</param>
            <returns>The <see cref="T:System.Globalization.CultureInfo"/> for the specified <paramref name="languageId"/>.</returns>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement">
            <summary>
            Represents a PublicationType Element 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement.#ctor">
            <summary>
            Default Constructor for creating PublicationTypeElement
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes PublicationTypeElement
            </summary>
            <param name="id">a <see cref="T:System.Int32"/> represents <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/>.Id</param>
            <param name="name"></param>
            <param name="titleResourceId"></param>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement.Id">
            <summary>
            Id of PublicationType
            </summary>
            <remarks>
                Min Value has to be greater than 0. In addition, please note that Web and Email publications have configured( in the Tridion.ContentManager.Config) PublicationType Id of 2 and 3 respectively.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement.Name">
            <summary>
            Name of the PublicationType
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement.TitleResourceId">
            <summary>
            String representation of TitleResource ID
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.Add(Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.Remove(Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElementCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.Configuration.TypeRegistrySection">
            <summary>
              Represents a TypeRegistry section within Tridion.ContentManager.Config configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.TypeRegistrySection.SectionName">
            <summary>
            Represents the Name of the Section that represents typeRegistry
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.Configuration.TypeRegistrySection.PublicationTypeElements">
            <summary>
            Repesents PublicationType Elements of the configuration 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException">
             <summary>
            The exception is thrown when a non-fatal PublicationTypeRegistry related error occurs. 
             </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.TypeRegistrationException">
            <summary>
            Exception Thrown due to error in TypeRegistry
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.TypeRegistrationException.#ctor(Tridion.Localization.LocalizableMessage,System.Exception,Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode,Tridion.ContentManager.TypeRegistration.TypeRegistrationLogCategory,System.Diagnostics.TraceEventType)">
            <summary>
            Use this constructor to specify all eventlog options yourself.
            </summary>        
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.TypeRegistrationException.#ctor(Tridion.Localization.LocalizableMessage,System.Exception,Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode,Tridion.ContentManager.TypeRegistration.TypeRegistrationLogCategory)">
            <summary>
            Constructor to use the default severity.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException.#ctor(System.Exception,System.String)">
            <summary>
            Constructor that can be used without needing to create a localized message each time.
            </summary> 
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode)">
            <summary>
            Constructor that can be used when no inner exception is caught.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            Constructor that can be used without needing to create a localized message each time.
            </summary> 
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException.#ctor(Tridion.Localization.LocalizableMessage,System.Exception,Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode)">
            <summary>
            Constructor to use the default LogCategory and severity.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.PublicationType">
            <summary>
            Represents a PublicationType
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.PublicationType.UnknownPublicationType">
            <summary>
            Specifies Unknown PublicationType
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.PublicationType.UnspecifiedPublicationType">
            <summary>
            Specifies Unspecified PublicationType
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationType.#ctor(Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement)">
            <summary>
            Initializes PublicationType
            </summary>
            <param name="publicationTypeConfigElement">a <see cref="T:Tridion.ContentManager.TypeRegistration.Configuration.PublicationTypeElement"/> which specifies different properties of a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationType.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes PublicationType
            </summary>
            <param name="publicationTypeId"> Id of this PublicationType</param>
            <param name="publicationTypeName">Name of this PublicationType</param>
            <param name="titleResourceId">Id of a Localizable Resource. Localized Representation of this Resource would be represented as the Title of this PublicationType</param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationType.GetLocalizedTitle(System.Globalization.CultureInfo)">
            <summary>
            Get the title (display name) of the PublicationType in a given language.
            </summary>
            <remarks>
            If no title resource exists for the given language, the standard .NET language fallback mechanism applies.
            </remarks>
            <param name="culture">The language in which to get the title</param>
            <returns>The title in the given language or the symbolic name if no title resource is configured.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationType.GetHashCode">
            <summary>
            Computes and return the hashcode of this PublicationType
            </summary>
            <returns>a <see cref="T:System.Int32"/> refers to the hashcode of this PublicationType</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationType.Equals(System.Object)">
            <summary>
            Compare this PublicationType with <paramref name="obj"/>
            </summary>
            <param name="obj"></param>
            <returns>true if this PublicationType is equals to the <paramref name="obj"/>; otherwise, false.</returns>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.PublicationType.Id">
            <summary>
            Id of this PublicationType
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.PublicationType.Name">
            <summary>
            Refers to the Name of the PublicationType
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.PublicationType.Title">
            <summary>
            Refers to the Localized Title of this PublicationType to show it in GUI(e.g. List)
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.TypeRegistration.PublicationType.TitleResourceId">
            <summary>
            Refers to the Resource Id that can be localized in end user's culture as needed.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry">
             <summary>
            Repository of the PublicationTypes. 
             </summary>
             <remarks>
                 Loads the PublicationTypes from the Configuration and stores it in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>. 
                 Provides a faster access to the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> by leveraging lookup capability using Name and ID. 
                 Caches the Configuration internally which can be reloaded using <see cref="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.ReloadConfiguration"/>.
             </remarks>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.#cctor">
            <summary>
            Static Constructor loads the PublicationTypes as soon as this Registry gets loaded.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.GetPublicationTypes">
            <summary>
            Returns an IEnumerable of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> configured in the <see cref="T:Tridion.ContentManager.TypeRegistration.Configuration.TypeRegistrySection"/>
            </summary>
            <returns>IEnumerable  of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></returns>
            <exception cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistrationException"> throws this exception wtih TypeRegistrationErrorCode.MissingTypeRegistryConfigurationError if typeRegistry configuration missing in Tridion.ContentManager.config file. </exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.ContainsPublicationType(System.Int32)">
            <summary>
            Verify whether PublicationType with <paramref name="publicationTypeId"/> exists in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>
            </summary>
            <param name="publicationTypeId">Id of a PublicationType</param>
            <returns>true if <paramref name="publicationTypeId"/> exists in the PublicationTypeRegistry ; otherwise false</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.ContainsPublicationType(System.String)">
            <summary>
            Verify whether PublicationType with <paramref name="publicationTypeName"/> exists in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>
            </summary>
            <param name="publicationTypeName">Name of the PublicationType</param>
            <returns>true if <paramref name="publicationTypeName"/> exists in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> ; otherwise false</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.TryGetPublicationType(System.Int32,Tridion.ContentManager.TypeRegistration.PublicationType@)">
            <summary>
            Returns the PublicationType with <paramref name="publicationTypeId"/> Id. A return value indicates whether the retrieval succeeded.
            </summary>
            <param name="publicationTypeId">a <see cref="T:System.Int32"/> represents the Id of a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
            <param name="publicationType">a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/>. When this method returns, contains PublicationType with <paramref name="publicationTypeId"/> Id, if the retrieval succeeded, or null is the retrieval failed</param>
            <returns>true , if a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeId"/> Id  is found in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> ; otherwise false.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.TryGetPublicationType(System.String,Tridion.ContentManager.TypeRegistration.PublicationType@)">
            <summary>
            Returns the PublicationType with <paramref name="publicationTypeName"/> Name . A return value indicates whether the retrieval succeeded.
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> represents the Name of <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
            <param name="publicationType">a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/>. When this method returns, contains PublicationType with <paramref name="publicationTypeName"/>  Name, if the retrieval succeeded, or null is the retrieval failed</param>
            <returns>true , if a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> is found with <paramref name="publicationType"/> Id in the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/> ; otherwise false.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.GetPublicationType(System.String)">
            <summary>
            Returns PublicationType with <paramref name="publicationTypeName"/> Name.
            </summary>
            <param name="publicationTypeName">a <see cref="T:System.String"/> representing Name of a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
            <returns><see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> with <paramref name="publicationTypeName"/> Name </returns>
            <exception cref="T:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeNameException"> throws this exception if <paramref name="publicationTypeName"/> refers to an unknown <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> </exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.GetPublicationType(System.Int32)">
            <summary>
            Returns PublicationType that is related to <paramref name="publicationTypeId"/>
            </summary>
            <param name="publicationTypeId">a <see cref="T:System.Int32"/> representing Id of a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
            <returns><see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> that is related to <paramref name="publicationTypeId"/></returns>
            <exception cref="T:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeIdException"> throws this exception if <paramref name="publicationTypeId"/> refers to an unknown <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/> </exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.ReloadConfiguration">
            <summary>
            Reloads PublicationType Configuration and updates PublicationTypeRegistry
            </summary>
            <remarks>
            This method is not thread-safe.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.InitializeRegistry">
            <summary>
            Initialize Mappings of PublicationTypes.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.Add(Tridion.ContentManager.TypeRegistration.PublicationType)">
            <summary>
            Adds <paramref name="publicationType"/> to the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>
            </summary>
            <param name="publicationType">a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry.Remove(Tridion.ContentManager.TypeRegistration.PublicationType)">
            <summary>
            Removes<paramref name="publicationType"/> from the <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>
            </summary>
            <param name="publicationType">a <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationType"/></param>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.TypeRegistrationLogCategory">
            <summary>
            Tridion Type Registration Category
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationLogCategory.PublicationTypeRegistry">
            <summary>
            PublicationTypeRegistry LogCategory
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationLogCategory.GeneralTypeRegistry">
            <summary>
            General TypeRegistry LogCategory
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode">
            <summary>
            Tridion Type Registration error codes
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode.GeneralTypeRegistrationError">
            <summary>
            General Type Registration Error
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode.UnknownPublicationTypeId">
            <summary>
            Unknown PublicationType Id error.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode.UnknownPublicationTypeName">
            <summary>
            Unknown PublicationType Name error.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.TypeRegistration.TypeRegistrationErrorCode.MissingTypeRegistryConfigurationError">
            <summary>
            Missing TypeRegistry Configuration Error 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeIdException">
            <summary>
            The exception that is thrown when PublicationType that refers to a particular Id is not found in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeIdException.#ctor(System.Int32)">
            <summary>
            Initializes this exception.
            </summary>
            <param name="id">Id that caused this exception. That is, no PublicationType could be found in PublicationTypeRegistry with this Id</param>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeNameException">
            <summary>
            The exception that is thrown when PublicationType that refers to a particular name is not found in <see cref="T:Tridion.ContentManager.TypeRegistration.PublicationTypeRegistry"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistration.UnknownPublicationTypeNameException.#ctor(System.String)">
            <summary>
            Initializes UnknownPublicationTypeNameException with <paramref name="publicationName"/>. 
            </summary>
            <param name="publicationName">a <see cref="T:System.String"/> represents name of PublicationType that does not exist in PublicationTypeRegistry</param>
        </member>
    </members>
</doc>
