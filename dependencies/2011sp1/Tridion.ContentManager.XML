<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tridion.ContentManager</name>
    </assembly>
    <members>
        <member name="T:Tridion.ContentManager.ApplicationDataAdapter">
            <summary>
            Reference implementation of a helper class to convert between strongly typed objects and <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> objects.
            The conversion is done by (de)serializing from/to the binary <see cref="P:Tridion.ContentManager.ApplicationData.Data"/> property.
            </summary>
            <remarks>
            The following kinds of object types are supported:
            <list type="bullet">
                <item>types with <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> defined</item>
                <item>serializable types (<see cref="T:System.SerializableAttribute"/> defined)</item>
                <item><see cref="T:System.Xml.XmlElement"/> objects</item>
                <item>.NET value types</item>
                <item><c>null</c> value</item>
            </list>
            <para>
            Types with WCF data contract are converted by (de)serializing with standard <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> using binary XML format.
            The <see cref="P:Tridion.ContentManager.ApplicationData.TypeId"/> property will contain information about the name, namespace and version of the data contract.
            </para>
            <para>
            Serializable types (and all value types) are converted by (de)serializing with standard <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.
            The <see cref="P:Tridion.ContentManager.ApplicationData.TypeId"/> property will contain full assembly qualified name of the serialized type.
            </para>
            <para>
            Types representing <see cref="T:System.Xml.XmlElement"/> are converted by storing UTF-8 encoded content of the XML element.
            The <see cref="P:Tridion.ContentManager.ApplicationData.TypeId"/> property will contain information about the name and namespace of the root element.
            This is the only format which potencialy can be decoded in different language or technology, because the data simply contains an XML content.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationDataAdapter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the adapter class from a typed application data object.
            </summary>
            <param name="applicationId">Application identifier for the application data</param>
            <param name="typedApplicationData">Typed application data object to convert - for all supported types see the class remarks</param>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationDataAdapter.#ctor(Tridion.ContentManager.ApplicationData)">
            <summary>
            Initializes a new instance of the adapter class from an <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> object.
            </summary>
            <param name="applicationDataObject">An <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> object to convert</param>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationDataAdapter.GetAs``1">
            <summary>
            Returns the strongly typed application data object, deserializing it from the <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> if needed.
            </summary>
            <typeparam name="T">The expected type to cast to - must be compatible with the original type</typeparam>
            <returns>Typed application data object of the requested type</returns>
            <example>
            Converting <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> into strongly typed application data:
            <code>
            ApplicationDataAdapter adapter = new ApplicationDataAdapter(appData);
            DateTime time = adapter.GetAs&lt;DateTime&gt;(); 
            </code>
            </example>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData">
            <summary>
            Returns the <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/> object, serializing it from the strongly typed application data if needed.
            </summary>
            <example>
            Converting strongly typed application data into <see cref="P:Tridion.ContentManager.ApplicationDataAdapter.ApplicationData"/>:
            <code>
            ApplicationDataAdapter adapter = new ApplicationDataAdapter("TestApplication", DateTime.Now);
            ApplicationData appData = adapter.ApplicationData;
            </code>
            </example>
        </member>
        <member name="T:Tridion.ContentManager.ApplicationDataUtilities">
            <summary>
            Contains utility or extension methods for the <see cref="T:Tridion.ContentManager.ApplicationData"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationDataUtilities.GetAs``1(Tridion.ContentManager.ApplicationData)">
            <summary>
            Returns the strongly typed application data object, deserializing it from the <see cref="T:Tridion.ContentManager.ApplicationData"/> if needed.
            </summary>
            <typeparam name="T">The expected type to cast to</typeparam>
            <param name="target">Implicit target object parameter</param>
            <returns>Typed application data object of the requested type</returns>
        </member>
        <member name="T:Tridion.ContentManager.Configuration.SessionSettings">
            <summary>
            Specifies Session related settings
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Configuration.SessionSettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Configuration.SessionSettings"/> class.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.SessionSettings.TransactionTimeout">
            <summary>
            Gets or sets the session transaction timeout.
            </summary>
            <value>The transaction timeout.</value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter">
            <summary>
            Represents the Filter for retrieving the BluePrint chain of an item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.SubjectRelatedListFilter">
            <summary>
            Abstract base class for the filters on subject-related lists.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.StronglyTypedFilter">
            <summary>
            Base class for strongly-typed filters.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StronglyTypedFilter"/> class. 
            Only used for registering concrete list filters.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StronglyTypedFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StronglyTypedFilter"/> class based on a copy of the given Filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.#ctor(Tridion.ContentManager.Data.StronglyTypedFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.StronglyTypedFilter"/> class based on a copy of the given date object Filter. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.ClearAdditionalColumns">
            <summary>
            Clears all the additional columns.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.ClearConditions">
            <summary>
            Clears all the conditions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>A <see cref="T:System.NotImplementedException"/></returns>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.SetDefaultValues">
            <summary>
            Sets default values on the properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.GetConditionLink``1(Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Gets a data object link for a given target TOM.NET object.
            </summary>
            <typeparam name="TData">The data object type of the target of the link.</typeparam>
            <param name="target">A TOM.NET object representing the target of the link. If <c>null</c>, the result is also <c>null</c>.</param>
            <returns>A data object link or <c>null</c> if <paramref name="target"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.GetConditionLinks``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets data object links for a given set of target TOM.NET objects.
            </summary>
            <typeparam name="T">The type of the TOM.NET objects.</typeparam>
            <typeparam name="TData">The type of the Data Objects.</typeparam>
            <param name="targets">The TOM.NET objects representing the targets of the links. If <c>null</c>, the result is also <c>null</c>.</param>
            <returns>A set of data object links or <c>null</c> if <paramref name="targets"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.EnsureInstance``1(``0@,Tridion.ContentManager.Session)">
            <summary>
            Ensures that the given Filter reference is not <c>null</c>.
            </summary>
            <typeparam name="TFilter">The concrete filter type.</typeparam>
            <param name="filter">The Filter reference which may be <c>null</c>. If so, it is changed to a new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.GetRowFilterXml">
            <summary>
            Gets the row filter XML representation as expected by the legacy BL.
            </summary>
            <returns>A string containing the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.GetListColumnFilter">
            <summary>
            Gets the TDSDefines.ListColumnFilter enumeration value as expected by the BL.
            </summary>
            <returns>
            The TDSDefines.ListColumnFilter enumeration value which is derived from both the <see cref="P:Tridion.ContentManager.StronglyTypedFilter.BaseColumns"/> and the additional columns.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.CreateLooselyTypedClone">
            <summary>
            Creates a loosely typed clone of the current filter
            </summary>
            <returns>A Filter object.</returns>
            <remarks>Derived classes should override this method if they have a sort expression.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.ParseLegacyFilter(Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter)">
            <summary>
            Creates a new instance based on a legacy <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> value.
            </summary>
            <param name="columnFilter">The <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> value to translate.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.ParseLegacyFilter(Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter,System.String)">
            <summary>
            Creates a new instance based on legacy row filter XML and <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> value.
            </summary>
            <param name="columnFilter">The <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> value to translate.</param>
            <param name="rowFilterXml">The R5 row filter XML to translate.</param>
        </member>
        <member name="M:Tridion.ContentManager.StronglyTypedFilter.ParseRowFilterXml(System.String)">
            <summary>
            Creates conditions based on row filter collection in XML.
            </summary>
            <param name="rowFilterXml">XML-representation of row filters.</param>
        </member>
        <member name="P:Tridion.ContentManager.StronglyTypedFilter.BaseColumns">
            <summary>
            Gets or sets which base columns (XML attributes) to include in the XML list.
            </summary>
            <value>A default value is <c>ListBaseColumn.Default</c>.</value>
            <remarks>
            The available columns depend on the list method for which the Filter is used.
            This property is only applicable to methods returning R5 style XML lists,
            such as <c>GetSystemWideListXml</c> and <c>GetListXml</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.StronglyTypedFilter.IncludeAllowedActionsColumns">
            <summary>
            Gets or sets a value indicating whether allowed actions columns should be included in the list data.
            </summary>
            <value>By default, the allowed actions columns are not included.</value>
        </member>
        <member name="P:Tridion.ContentManager.StronglyTypedFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.StronglyTypedFilter.Session">
            <summary>
            Gets the current session to construct business objects.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SubjectRelatedListFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in the subject that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in the subject that returns a list as TOM.NET objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SubjectRelatedListFilter.#ctor(System.Type,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/> class. 
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in the subject that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in the subject that returns a list as TOM.NET objects.</param>
            <param name="dataObjectListMethodName">The name of the method in the subject that returns a list as data objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SubjectRelatedListFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/> class. 
            </summary>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SubjectRelatedListFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/> class which is a copy of the given Filter.
            </summary>
            <param name="filter">
            The filter to copy from.
            </param>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SubjectRelatedListFilter.#ctor(Tridion.ContentManager.Data.SubjectRelatedListFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/> class based on a given data object.
            </summary>
            <param name="data">
            The data object to be used as state of the new Filter instance.
            </param>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter"/> class. 
            </summary>
            <param name="session">The session to use in order to create this filter.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter"/> class based on the given filter.
            </summary>
            <param name="filter">The filter to copy from</param>
            <param name="session">The session to use in order to create this filter.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.#ctor(Tridion.ContentManager.ContentManagement.BluePrintChainDirection,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter"/> class, setting the <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.Direction"/> to the given value.
            </summary>
            <param name="direction">The direction to set on the newly created filter.</param>
            <param name="session">The session to use in order to create this filter.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.BluePrintChainFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter"/> class using the given data object to initialize the filter.
            </summary>
            <param name="data">The data object to copy from</param>
            <param name="session">The session to use in order to create this filter</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintChainFilter"/> class. 
            This constructor is used to register the type internally.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The type of this filter's data object, which is <see cref="T:Tridion.ContentManager.Data.ContentManagement.BluePrintChainFilterData"/></returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.Direction">
            <summary>
            Gets or sets the direction of the BluePrint item chain (i.e. up to the top-level parent item, or down to the bottom-level child item).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.Data.ContentManagement.LocationInfo.WebDavUrl"/> or XML attribute <c>URL</c> is set in the returned list. 
            </summary>
            <value>The value is <c>null</c> means <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to true, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintChainFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BluePrintFilter">
            <summary>
            Represents the Filter for a list of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/>.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.SystemWideListFilter">
            <summary>
            Abstract base class for filters on system-wide lists
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideListFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideListFilter"/> class.
            </summary>
            <param name="businessObjectType">The Type of the business object (TOM.NET object).</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideListFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideListFilter"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideListFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideListFilter"/> class based on a copy of the given Filter.
            </summary>        
            <param name="filter">The Filter to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideListFilter.#ctor(Tridion.ContentManager.Data.SystemWideListFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideListFilter"/> class based on the given filter data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideListFilter.GetManagerType">
            <summary>
            Gets the Type of class that contains the list method of this filter.
            </summary>
            <returns>Type of the class containing the list method.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.BluePrintFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The type of <see cref="T:Tridion.ContentManager.Data.ContentManagement.BluePrintFilterData"/>.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForRepository">
            <summary>
            Gets or sets a condition that specifies for which Repository to get the BluePrint hierarchy. 
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> for which to get the BluePrint hierarchy.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForItem">
            <summary>
            Gets or sets a condition that specifies for which Item to retrieve all BluePrint nodes.
            </summary>
            <remarks>
            If specified, the result contains all BluePrint nodes for the item. A BluePrint node represents the specified
            Item in the context of a Repository in the BluePrint hierarchy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.Data.ContentManagement.LocationInfo.WebDavUrl"/> or XML attribute <c>URL</c> is set in the returned list. 
            </summary>
            <value>The value is <c>null</c> means <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to true, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BluePrintNode">
            <summary>
            Represent a node in a BluePrint hierarchy.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Publication">
            <summary>
            Represents a Publication: a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> used for publishing.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Repository">
            <summary>
            Represents a Repository: a context for Blueprinting
            </summary>
            <remarks>
            All Publications are Repositories, but in the future not all Repositories have to be Publications.
            Basically, a Repository is the same as a Publication, but without any Communication Management functionalities.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.SystemWideObject">
            <summary>
            Abstract base class for all system-wide objects.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.IdentifiableObject">
            <summary>
            Abstract base class for all objects that can be identified using a <see cref="T:Tridion.ContentManager.TcmUri"/>.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.IdentifiableObject.VersionInfoSection">
            <summary>
            The name of the VersionInfo subsection.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <remarks>
            This is not done with a class constructor, because the implementation uses virtual methods.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new object.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing object.
            </summary>
            <param name="id">The identifier (TCM URI) of the item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(Tridion.ContentManager.Data.IdentifiableObjectData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)">
            <summary>
            (Re-)load the state of the object using the given flags.
            </summary>
            <param name="flags">The flags that affect the XML representation of the object.</param>
            <remarks>
            The flags have impact on the result of the ToXml method, 
            but also on properties that expose the XML (e.g. <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Save">
            <summary>
            Save the state of the object to the database.
            </summary>
            <remarks>
            If the object is new (i.e. not saved to the database yet), it will get a regular <see cref="T:Tridion.ContentManager.TcmUri"/> after saving.
            Before actual saving the item to the database, business rules will be checked.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if 
                    <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
                                        <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
                                        <item><description>the linked item does not exist</description></item>
                                        <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
                    </list>
            </exception>
            <example>
            <code>
            //Get a component for editing
            Component component = Session.GetObject("tcm:17-225");
            //CheckOut and change title
            component.CheckOut();
            component.Title = "This is the new title";
            //Save and CheckIn the component
            component.Save();
            component.CheckIn();
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> for a description of supported condition.
            </param>
            <returns><c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.</returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/> 
            if you are only interested in finding out if there are using items 
            and not which items are using this item. 
            If the item does not exist, method returns <c>false</c>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <returns><c>true</c> if the item is used by any other items, otherwise <c>false</c>.</returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems"/> 
            if you are only interested in finding out if there are using items and not which items are using this item.
            If the item does not exist, method returns <c>false</c>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>OnlyLatestVersions</term><description>Only return items of which the latest version has a reference to this item.</description></item>
                <item><term>InPublication</term><description>Only returns items that reside in the given Publication</description></item>
                <item><term>InclLocalCopies</term><description>Include local copies of the item (if any).</description></item>
            </list>
            </param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            If the item does not exist, method returns empty result.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems">
            <summary>
            Get a list of items linking to (i.e. "using") this object.
            </summary>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            If the item does not exist, method returns empty result.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Get a list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">Can be used to filter out the items from the result.</param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            If the item does not exist, method returns empty result.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListUsingItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems">
            <summary>
            Get an XML list of items linking to (i.e. "using") this object.
            </summary>
            <returns>The root element of the XML list (tcm:ListUsingItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Get an XML list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>The root element of the XML list (tcm:ListUsingItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>InPublication</term><description>Only returns items that reside in the given Publication</description></item>
                <item><term>InclParentItem</term><description>Include the "parent item" of this item (if any). If this item is a local copy, then the "parent item" is the item that this item overrides (as a local copy).</description></item>
            </list>
            </param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems">
            <summary>
            Get a list of items to which this object links (i.e. "used" by this object).
            </summary>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get a list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">Can be used to filter the items based on conditions.</param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListUsedItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems">
            <summary>
            Get an XML list of items to which this object links (i.e. "used" by this object).
            </summary>
            <returns>The root element of the XML list (tcm:ListUsedItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get an XML list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>The root element of the XML list (tcm:ListUsedItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Delete">
            <summary>
            Permanently deletes the item or a specific version of the item from the
            system.
            </summary>
            <remarks>
                <para>The object should not be used anymore after this method has been called.</para>
                <para>
                    For an instance of a class that derives from <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>,
                    the version that is loaded into the instance is taken into account. If the
                    latest version of the item is loaded without a version specified in the
                    <see cref="T:Tridion.ContentManager.TcmUri"/>, the item will be fully deleted. If a specific
                    version of the item is loaded, only that version will be deleted.
                </para>
                <para>
                    If the object being deleted is a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/>, the method <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.Delete(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)"/>
                    offers more control over the handling of the keyword's descendants. The <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/> method
                    is the equivalent of calling <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.Delete(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)"/> method with an argument value of
                    <see cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.RemoveParentFromChildren"/>.
                </para>
                <para>
                    If the object being deleted is a <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>, the delete event will be raised only for item itself and
                    not for child items. 
                </para>
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidUriException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> instance represents the latest version. The instance was created using a <see cref="T:Tridion.ContentManager.TcmUri"/> that specifies the latest version.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> instance is checked-out.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> instance is a root Structure Group in a parent Publication of a BluePrint hierarchy.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> instance is a root Folder.</exception>
            <exception cref="T:Tridion.ContentManager.ItemHasLocalCopiesException">The item is localized in another Publication in the BluePrint hierarchy.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The item is published.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> instance is localized.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> instance is shared.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have Delete permissions or appropriate rights.</exception>
            <exception cref="T:Tridion.ContentManager.ItemIsInUseException" caption="">The embedded <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> instance is included or imported by another Schema.</exception>
            <exception cref="T:Tridion.ContentManager.ItemIsInUseException">The item is in use by another item.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException" caption="">The User that is performing a Delete action on the <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance is not a system administrator.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException" caption="">The User that is performing a Delete action on the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> instance is not a system administrator.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance is predefined by the system.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance represents the user that is performing the Delete action.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Delete(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Permanently deletes the item or a specific version of the item from the
            system.
            </summary>
            <param name="deleteEventArgs">The arguments of the events to pass to the OnDeleting and OnDeleted events.</param>
            <remarks>
            <para>The object should not be used anymore after this method has been called.</para>
            <para>
            For an instance of a class that derives from <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>,
            the version that is loaded into the instance is taken into account. If the
            latest version of the item is loaded without a version specified in the
            <see cref="T:Tridion.ContentManager.TcmUri"/>, the item will be fully deleted. If a specific
            version of the item is loaded, only that version will be deleted.
            </para>
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidUriException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> instance represents the latest version. The instance was created using a <see cref="T:Tridion.ContentManager.TcmUri"/> that specifies the latest version.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> instance is checked-out.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> instance is a root Structure Group in a parent Publication of a BluePrint hierarchy.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> instance is a root Folder.</exception>
            <exception cref="T:Tridion.ContentManager.ItemHasLocalCopiesException">The item is localized in another Publication in the BluePrint hierarchy.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The item is published.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> instance is localized.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> instance is shared.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have Delete permissions or appropriate rights.</exception>
            <exception cref="T:Tridion.ContentManager.ItemIsInUseException" caption="">The embedded <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> instance is included or imported by another Schema.</exception>
            <exception cref="T:Tridion.ContentManager.ItemIsInUseException">The item is in use by another item.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException" caption="">The User that is performing a Delete action on the <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance is not a system administrator.</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException" caption="">The User that is performing a Delete action on the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> instance is not a system administrator.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance is predefined by the system.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException" caption="">The <see cref="T:Tridion.ContentManager.Security.Trustee"/> instance represents the user that is performing the Delete action.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateInternal(Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Updates the state of the object based on a given <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData">Data Object</see>.
            </summary>
            <param name="deltaData">An <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData">Data Object</see> which contains the properties to be modified.</param>
            <remarks>
            The type of the <paramref name="deltaData"/> parameter should be a subtype of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> 
            that matches the type of the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> property.
            All "dirty" properties of this Data Object will be merged into the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateInternal(System.String)">
            <summary>
            Updates the state of the object from the specified (delta) R5 XML. 
            </summary>
            <param name="deltaXml">An XML <see cref="T:System.String"/> that should be valid according to the R5 XML schema.</param>
            <remarks>This method provides functionality for the BL facade to facility the original UpdateXML functionality.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Update(System.Xml.XmlElement)">
            <summary>
            Updates the state of the object from the specified (delta) XML. 
            </summary>
            <param name="xmlRepresentation">The XML representation to be used to update the state of the object.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml">
            <summary>
            Get the R5 compatible XML representation of the object.
            </summary>
            <returns>The root element of the XML representation. All sections of the XML representation are included.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Get a part of the R5 compatible XML representation of the object.
            </summary>
            <param name="sections">
            Specifies which section(s) of the XML to retrieve.
            This can be a combination of values from the enumeration <see cref="T:Tridion.ContentManager.XmlSections"/>
            </param>
            <returns>The root element of the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml(Tridion.ContentManager.XmlFormat)">
            <summary>
            Get an XML representation of the object.
            </summary>
            <param name="format">Specifies which XML "format" to use: R5 compatible or native R6.</param>
            <returns>The root element of the XML representation. All sections of the XML representation are included.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml(Tridion.ContentManager.XmlFormat,Tridion.ContentManager.XmlSections)">
            <summary>
            Get a part of an XML representation of the object.
            </summary>
            <param name="format">Specifies which XML "format" to use: R5 compatible or native R6.</param>
            <param name="sections">
            Specifies which section(s) of the XML to retrieve.
            This can be a combination of values from the enumeration <see cref="T:Tridion.ContentManager.XmlSections"/>
            </param>
            <returns>The root element of the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)">
            <summary>
            Loads application-specific data associated with this object for a given application.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <returns>An <see cref="T:Tridion.ContentManager.ApplicationData"/> instance representing the application-specific data or <c>null</c> if no such data exists.</returns>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadAllApplicationData"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.LoadGlobalApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.LoadAllApplicationData">
            <summary>
            Loads all application-specific data associated with this object.
            </summary>
            <returns>
            A collection of <see cref="T:Tridion.ContentManager.ApplicationData"/> objects representing all the application-specific data associated with this object.
            If no application-specific data is associated with this object, the collection will be empty.
            </returns>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)">
            <summary>
            Saves application-specific data associated with this object.
            </summary>
            <param name="applicationData">The application-specific data to store.</param>
            <remarks>
            If application-specific data already exists for the given application identifier, it will be overwritten.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ApplicationData})">
            <summary>
            Saves application-specific data associated with this object.
            </summary>
            <param name="applicationDataCollection">A collection of application-specific data to store.</param>
            <remarks>
            If application-specific data already exists for the given application identifiers, it will be overwritten.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)">
            <summary>
            Deletes application-specific data associated with this object for a given application.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteAllApplicationData"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.DeleteAllApplicationData">
            <summary>
            Deletes all application-specific data associated with this object.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns><c>true</c> if the given object is an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> instance and it has the same <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/> as this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code, which is based on the <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which includes the type name and Id.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)">
            <summary>
            (Re-)load the state of the object using the given flags.
            </summary>
            <param name="flags">The flags that affect the XML representation of the object.</param>
            <param name="forceReload">If <c>true</c>, any current state is overwritten (discarding any unsaved changes).</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertMethodExecuted(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Asserts that the methods identified by the two parameters are executed.
            </summary>
            <param name="preMethodName">The name of the method that contains the business rules that should have been executed before the write action. (eg. OnSaving)</param>
            <param name="preMethodExecuted">A boolean that indicates whether the method before the write action has been performed. (eg. is OnSaving executed)</param>
            <param name="postMethodName">The name of the method that contains the business rules that should have been executed after the write action. (eg. OnSaved)</param>
            <param name="postMethodExecuted">A boolean that indicates whether the method after the write action has been performed. (eg. is OnSaved executed)</param>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">Will be thrown if the method was not executed.</exception>
            <remarks>This method will be used to verify that business rules are executed.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTypeId">
            <summary>
            Gets the type identifier for this type.
            </summary>
            <returns>The type identifier.</returns>
            <remarks>
            The default implementation returns <see cref="F:Tridion.ContentManager.ItemType.None"/>, but must be overridden in concrete subclasses implemented in R6 architecture.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights">
            <summary>
            Get the type of security management rights needed to create/update/delete objects of this class.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value needed to create/update/delete objects of this class.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertCanPublish">
            <summary>
            Verifies if current user is allowed to publish the item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsingItemsFilter">
            <summary>
            Determines the filter options that are needed for the HasUsingItems(filter) function
            </summary>
            <returns>an UsingItemsFilter with additional properties set (if appropriate)</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.IdentifiableObject.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AddLegacyXsltParams(System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Adds parameters to the Legacy XSLT.
            </summary>
            <param name="xsltArguments">The parameters that will be passed to the XSLT.</param>
            <remarks>
            The default implementation adds the "localizedStrings" parameter.
            Subclasses can override this method to add additional parameters.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>When implementing this method in a derived class, call the base method first to clear the collection.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
            <remarks>
            By default, all Links provided by <see cref="M:Tridion.ContentManager.Data.IdentifiableObjectData.CollectLinks(System.Boolean)"/> are included in the batch.
            Subclasses that have XML properties which can have XLink elements should override this method to add those to the batch.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnLoading(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>Default implementation only converts WebDAV URLs is requested. Subclasses can override if more post processing is needed.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if 
                    <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
                                        <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
                                        <item><description>the linked item does not exist</description></item>
                                        <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
                    </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business rule : - check that the item does not have using items
                            - check that the item does not have local copies
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnPrepareDeleteEvent(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called just before the Delete event is delivered.
            This offers the chance to prepare the event arguments if needed.
            </summary>
            <param name="eventArgs">The arguments of the Delete event.</param>
            <remarks>
            The implementation in <c>IdentifiableObject</c> is empty.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnDeleted(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateEnumProperties">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/> when saving via the legacy BL.
            </summary>
            <remarks>
            This method validates enumeration properties for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is saved.
            It is used only when saving through legacy BL. After migrating the saving operations, this validation should be moved to the appropriate <see cref="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/> methods.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.CreateDeleteEventArgs">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/> for creating the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> or a derived class.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> or a derived class.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>
            The default implementation sets the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property with a default AllowedActions instance.
            This method should be overridden in subclasses to actually set applicable allowed actions.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of items that reference this item as an XML <see cref="T:System.IO.Stream"/> constraint by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of items referencing this item.</param>
            <returns>A <see cref="T:System.IO.Stream"/> of items referencing this item as XML.</returns>
            <remarks>You must implement this method to serialize the list of data objects returned 
            by the <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItemsData(Tridion.ContentManager.UsingItemsFilter)"/> method.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItemsData(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of items that reference this item as <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> objects constraint by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of items that reference this item.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> of items that reference this item as <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> objects.</returns>
            <remarks>You must override this method when adding post processing to a list of items that reference this item.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> for a description of supported condition.
            </param>
            <returns><c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.</returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> 
            if you are only interested in finding out if there are using items 
            and not which items are using this item. 
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToR5DeltaXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Gets a delta XML representation of the object.
            </summary>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <returns>A string containing the (UTF-8 encoded) XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnLoadingApplicationData(Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnLoadedApplicationData(Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnSavingApplicationData(Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnSavedApplicationData(Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnDeletingApplicationData(Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.OnDeletedApplicationData(Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>, After going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.EnsureFullyLoaded">
            <summary>
            Ensure that the object's state is fully loaded.
            </summary>
            <remarks>
            <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> can be pre-loaded with a partially loaded Data Object (e.g. obtained from list data).
            This method should be used in all property setters to avoid updating (partially loaded) pre-loaded state.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.EnsureLoaded(System.Object)"/>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.LoadState"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.EnsureLoaded(System.Object)">
            <summary>
            Ensure that a given property is loaded.
            </summary>
            <param name="propertyValue">The property value to test for</param>
            <remarks>
            <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> can be pre-loaded with a partially loaded Data Object (e.g. obtained from list data).
            If a property of such a partially loaded Data Object is <c>null</c>, the Current State has to be JIT loaded.
            This method should be used in all property getters to avoid returning default values for partially loaded Data Object properties.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.EnsureFullyLoaded"/>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.LoadState"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetRootAttribute(System.String)">
            <summary>
            Get an XML attribute on the root element of the XML representation.
            </summary>
            <param name="name">The name of the XML attribute.</param>
            <returns>The XML attribute</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetContextElement(System.String)">
            <summary>
            Get an XML element within the Context section of the XML representation.
            </summary>
            <param name="name">The (local) name of the XML element.</param>
            <returns>The XML element or null if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoElement(System.String,System.String)">
            <summary>
            Get an XML element within the Info section of the XML representation.
            </summary>
            <param name="name">The (local) name of the XML element.</param>
            <param name="sectionName">The name of the subsection within the Info section.</param>
            <returns>The XML element or null if no element with the given name exists.</returns>
            <remarks>
            More specialized methods exists to get info values for common data types: GetInfoXYZ.
            This method should only be used to get info values with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.PropertyExists(System.String)">
            <summary>
            Determine whether the specified property (XML element) exists.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns><c>true</c> if the property exists; otherwise, <c>false</c>.</returns>
            <remarks>Properties are represented by XML elements inside the Data section of the XML representation.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyElement(System.String,System.Boolean)">
            <summary>
            Get the XML element for a property. 
            </summary>
            <param name="propertyName">The name of the property (corresponds to the local name of the XML element).</param>
            <param name="forWriting">Indicates if the XML element will be used for writing. If <c>true</c>, an XML element will be created in the delta if it didn't exist yet.</param>
            <returns>The XML element.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no element with the given name exists.</exception>
            <remarks>
            More specialized methods exists to get/set property values for common data types: Get/SetPropertyXYZ.
            This method should only be used to get/set properties with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyElement(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the XML element for a property. 
            </summary>
            <param name="propertyName">The name of the property (corresponds to the local name of the XML element).</param>
            <param name="forWriting">Indicates if the XML element will be used for writing. If <c>true</c>, an XML element will be created in the delta if it didn't exist yet.</param>
            <param name="mustExist">Indicates whether an exception should be thrown if the XML element does not exist.</param>
            <returns>The XML element or null if no element with the given name exists and <c>mustExist=false</c>.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no element with the given name exists and <c>mustExist=true</c></exception>
            <remarks>
            More specialized methods exists to get/set property values for common data types: Get/SetPropertyXYZ.
            This method should only be used to get/set properties with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoString(System.String,System.String)">
            <summary>
            Get an info value as string.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element or an empty string if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoBoolean(System.String,System.String)">
            <summary>
            Get an info value as boolean.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as a boolean or <c>false</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoInteger(System.String,System.String)">
            <summary>
            Get an info value as integer.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as an integer or <c>-1</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoDateTime(System.String,System.String)">
            <summary>
            Get an info value as date/time.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as a date/time or <c>DateTime.MinValue</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoObject``1(System.String,System.String)">
            <summary>
            Get an info object reference.
            </summary>
            <typeparam name="T">The type of the referenced object. Must be a type derived from <see cref="T:Tridion.ContentManager.IdentifiableObject"/></typeparam>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The object referenced by the xlink:href attribute on the info element or <c>null</c> if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyString(System.String)">
            <summary>
            Get the value of a property as string.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a string.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyBoolean(System.String)">
            <summary>
            Get the value of a property as boolean.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a boolean.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyInteger(System.String)">
            <summary>
            Get the value of a property as integer.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as an integer.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyDateTime(System.String)">
            <summary>
            Get the value of a property as date/time.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a date/time.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyXml(System.String)">
            <summary>
            Get the value of a property as XML.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The root element of the property value or <c>null</c> if the property element is empty.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyEnum``1(System.String)">
            <summary>
            Get the value of a property as enumeration member.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="name">The name of the property.</param>
            <returns>The property value as an member of the given enumeration.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
            <remarks>
            The XML representation should contain either the symbolic name or the numeric id of the enumeration members.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyObject``1(System.String)">
            <summary>
            Get the value of a property as object.
            </summary>
            <typeparam name="T">The type of the return value. This must be a (subclass of) <see cref="T:Tridion.ContentManager.IdentifiableObject"/>. It may be a superclass of the actual referenced object's class.</typeparam>
            <param name="name">The name of the property.</param>
            <returns>The property value as an object.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.String)">
            <summary>
            Set the value of a string property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The string value. Should not be <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Boolean)">
            <summary>
            Set the value of a boolean property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The boolean value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Int32)">
            <summary>
            Set the value of an integer property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The integer value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.DateTime)">
            <summary>
            Set the value of a date/time property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The date/time value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Xml.XmlElement)">
            <summary>
            Set the value of an XML property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The root element of the XML value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Enum)">
            <summary>
            Set the value of an enumerated property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">An enumeration member from any enumeration. The symbolic name is used as value in the XML representation.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Set the value of an object reference property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The referenced object. The Id and Title of this object are put as XLink element in the XML representation. May be <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTitlePropertyName">
            <summary>
            Get the name of the XML element representing the Title property.
            </summary>
            <returns>The local name of the XML element.</returns>
            <remarks>
            By default this method returns "Title", but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetParentId">
            <summary>
            Get the Id of the parent organizational item of this object.
            </summary>
            <returns>The TCM URI of the parent organizational item.</returns>
            <remarks>
            By default this method returns <c>TcmUri.UriNull</c>, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetObjectsFromXmlList``1(System.Xml.XmlElement)">
            <summary>
            Get a list of objects from a list of XLink elements.
            </summary>
            <typeparam name="T">The type of the objects in the list. This must be a (subclass of) <see cref="T:Tridion.ContentManager.IdentifiableObject"/>. It may be a superclass of the actual referenced object's class.</typeparam>
            <param name="listElement">The XML element which contains the XLink elements.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Unload">
            <summary>
            Unloads the current and loaded state
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetPreLoadedTitle(System.String)">
            <summary>
            Provide a pre-loaded title.
            </summary>
            <param name="title">The pre-loaded title.</param>
            <remarks>
            The pre-loaded title is only set if not null/empty and the object is not fully loaded yet.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetPreLoadedIsEditable(System.Nullable{System.Boolean})">
            <summary>
            Provide a pre-loaded IsEditable flag.
            </summary>
            <param name="isEditable">The pre-loaded IsEditable flag.</param>
            <remarks>
            The pre-loaded IsEditable flag is only set if not null/empty and the object is not fully loaded yet.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTitleIfAvailable">
            <summary>
            Get the title of this object if it is available.
            </summary>
            <remarks>
            The title is available if:
            <list type="bullet">
                <item>The object's state has been loaded earlier.</item>
                <item>The title has been pre-loaded (by an earlier call to <see cref="M:Tridion.ContentManager.IdentifiableObject.SetPreLoadedTitle(System.String)"/>).</item>
            </list>
            </remarks>
            <returns>The title or <c>null</c> if no title is available (yet).</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidId(System.Boolean)">
            <summary>
            Assert that the <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/> of the object is valid: Item Type and Version should correspond to the class.
            </summary>
            <param name="allowUriNull">Specifies whether tcm:0-0-0 is allowed.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidLinks(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link})">
            <summary>
            Iterates over links to validate the Link with <see cref="M:Tridion.ContentManager.IdentifiableObject.AssertValidLink(Tridion.ContentManager.Data.Link)"/>
            </summary>
            <param name="links">The links to validate.</param> 
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidLinks">
            <summary>
            Collects all the Link objects and validates them.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidatePropertyConstraints">
            <summary>
            Validates constraints on properties.
            This method is called by <see cref="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateSystemConstraints">
            <summary>
            Validates system constraints before this object is saved.
            </summary>
            <remarks>
            The word system here is used to imply that these constraints are hard-coded and not possible to be altered by the user.
            For constraints that the user can alter by means of XSD, see <see cref="M:Tridion.ContentManager.IdentifiableObject.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
            <remarks>
            This method checks constraints against a user editable XSD file. For system critical constraints that the user
            should not be able to alter, see <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateSystemConstraints"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXmlStream(Tridion.ContentManager.XmlFormat,Tridion.ContentManager.XmlSections)">
            <summary>
            Get an XML representation of the object as a Stream
            </summary>
            <param name="format">Specifies which XML "format" to use: R5 compatible or native R6.</param>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <returns>A Stream containing the (UTF-8 encoded) XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXmlStream(Tridion.ContentManager.XmlFormat,Tridion.ContentManager.XmlSections,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Get an XML representation of the object as a Stream
            </summary>
            <param name="format">Specifies which XML "format" to use: R5 compatible or native R6.</param>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <param name="xsltAdditionalArguments">Lists of Xslt arguments which should be added during Xslt transformation.</param>
            <returns>A Stream containing the (UTF-8 encoded) XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.WriteXLink(System.Xml.XmlElement)">
            <summary>
            Write a reference to this object as an XLink
            </summary>
            <param name="linkElement">The XML element that will act as XLink element.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetRootElementName">
            <summary>
            Get the XML element name of the root element of the XML representation.
            </summary>
            <returns>The local name of the root element.</returns>
            <remarks>
            By default this is the (unqualified) name of the type, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.DeleteThroughLegacyBL">
            <summary>
            Deletes the object through bl (old code).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetBLClassName">
            <summary>
            Gets the legacy BL class name.
            </summary>
            <returns>The legacy BL class name.</returns>
            <remarks>
            By default, the (unqualified) type name is returned, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetBLObject(System.Boolean)">
            <summary>
            Gets a legacy BL object.
            </summary>
            <param name="transactional">Specifies whether transactional BL actions are required.</param>
            <returns>The legacy BL object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Save(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Saves the state of the object to the database.
            </summary>
            <param name="eventArgs">The data of the event.</param>
            <remarks><see cref="P:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.CheckInAfterSave"/> property is not used in current method, but it is used in <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> and events can change a value of it.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SaveThroughLegacyBL(System.String)">
            <summary>
            Saves the state of the object to the database through bl (old code).
            </summary>
            <param name="xml"><c>xml</c> which will be sent to bl. For create it should be full <c>xml</c> representation, for update it should be delta <c>xml</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidLink(Tridion.ContentManager.Data.Link)">
            <summary>
            Performs general link validation:
            <list type="bullet">
              <item>Uri does not contain a version.</item>
              <item>Item Type matches the link type.</item>
              <item>The linked item exists.</item>
            </list>
            </summary>
            <param name="link">The link to validate.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.CloneState(Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Clone the state (including Id) of another IdentifiableObject
            </summary>
            <param name="source">The source object to clone the state from.</param>
            <remarks>
            This is used in the VersionedItem.Load implementation to switch to the dynamic version if needed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateKeywordXlinks(System.Xml.XmlNode)">
            <summary>
            Updates Keyword xlink attributes by setting the text node to the title of the Keyword and removing any other
            xlink attributes on the element.
            </summary>
            <param name="node">The root element to process.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetEditable(System.Boolean)">
            <summary>
            Sets a value indication whether a <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> is editable. 
            </summary>
            <value>For <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>s also the <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/> property is being set to a v0 Uri when <paramref name="editable"/> is <c>true</c>.</value>
            <param name="editable">A boolean parameter indicating whether to set <see cref="P:Tridion.ContentManager.IdentifiableObject.IsEditable"/> to <c>true</c> or <c>false</c></param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateSearchCollection(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Updates the search collection for the specified <see cref="T:Tridion.ContentManager.TcmUri"/>.
            </summary>
            <param name="session">The Session to use.</param>
            <param name="id">The <see cref="T:Tridion.ContentManager.TcmUri"/> of the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateSearchCollection">
            <summary>
            Updates the search collection for the specified <see cref="T:Tridion.ContentManager.TcmUri"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.DeleteFromSearchCollection">
            <summary>
            Deletes the item specified by <see cref="T:Tridion.ContentManager.TcmUri"/> from the search collection.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.UpdateIndex(Tridion.ContentManager.Queuing.QueueMessageAction,Tridion.ContentManager.Data.IDataSession,Tridion.ContentManager.TcmUri)">
            <summary>
            Updates the verity search index for the specified <see cref="T:Tridion.ContentManager.TcmUri"/>.
            </summary>
            <param name="action">A <see chref="QueueMessageAction"/> that specified the action that was done</param>
            <param name="dataSession">DataSession needed by the Enqueue method of the QueueSupplier.</param>
            <param name="id">The <see cref="T:Tridion.ContentManager.TcmUri"/> of the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.op_Equality(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Tests the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> for equality against another <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <param name="objectA">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/> to compare.</param>
            <param name="objectB">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/> to compare against.</param>
            <returns><c>true</c> if the given object is an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> instance that has the same Id as this object, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.op_Inequality(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Tests the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> for inequality against another <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <param name="objectA">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/> to compare.</param>
            <param name="objectB">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/> to compare against.</param>
            <returns><c>false</c> if the given object is an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> instance that has the same Id as this object, otherwise <c>true</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidRootContentElements(System.Xml.Schema.XmlSchemaSet,System.String)">
            <summary>
            Verify whether the Root Element in Xml Content is Valid according to the <paramref name="xmlSchemaSet"/>
            </summary>
            <param name="xmlSchemaSet"><see cref="T:System.Xml.Schema.XmlSchemaSet"/> used to verify the XmlContent</param>
            <param name="rootTargetNamespace">string representing Target Namespace of the Root Elements.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateXml(Tridion.ContentManager.ContentManagement.Schema,System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Validates all the custom Xml Properties.
            </summary>
            <param name="schema">The schema to validate the content.</param>
            <param name="content">The content to validate.</param>
            <param name="repository">The repository in which the schema and the content is in.</param>
            <remarks>
            ValidateXml validates following :
            <para>
            		<list type="Bullet">
            			<item>
            Validate the XML against XML Schema Definition Language (XSD) schemas.
            Schemas that are used for Validation are retrieved from <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> of Component.
            <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)"/>
            			</item>
            			<item>
            Validates all the xLink reference in Xml. If there is any Component Link inside Xml, then it
            also checks whether it is valid component for this Component. For example, it checks Linktype,
            AllowMultimediaLinks,AllowedTargetSchemas values in Schema to verify valid component link.
            <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXLinks(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})"/>
            			</item>
            			<item>
            For every Keyword , it adds xlink:href by using PSVI.
            <see cref="T:System.Xml.Schema.IXmlSchemaInfo"/>
            				<see cref="M:Tridion.ContentManager.IdentifiableObject.PostProcessPSVI(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)"/>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateXml">
            <summary>
            Validates all the custom Xml Properties.
            </summary>
            <remarks>
            ValidateXml validates following : 
            <para>
                <list type="Bullet">
                        <item>
                                Validate the XML against XML Schema Definition Language (XSD) schemas.
                                Schemas that are used for Validation are retrieved from <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> of Component. 
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)"/>
                        </item>
                        <item>
                                Validates all the xLink reference in Xml. If there is any Component Link inside Xml, then it 
                                also checks whether it is valid component for this Component. For example, it checks Linktype,
                                AllowMultimediaLinks,AllowedTargetSchemas values in Schema to verify valid component link.
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXLinks(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})"/>
                        </item>
                        <item>
                                For every Keyword , it adds xlink:href by using PSVI. 
                                <see cref="T:System.Xml.Schema.IXmlSchemaInfo"/>
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.PostProcessPSVI(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)"/>
                        </item>
                </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidRootContentElement(System.Xml.XmlElement,System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
            <summary>
            Validates the metadata root exists if schema defines Metadata.
            </summary>
            <param name="rootElement">Root Element.</param>
            <param name="schemaSet">Enumerable of related SchemaData</param>
            <param name="expectedRootElementName">Expected name of the root element.</param>        
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateXLinks(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})">
            <summary>
            Validates xlink:href attributes in the XML to conform to the specified <paramref name="allowedItemTypes"/>.
            </summary>
            <param name="content">The content.</param>
            <param name="allowedItemTypes">A list of item types that are valid for the specified XML.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)">
            <summary>
            Validates the xml of <paramref name="xmlElement"/> against the Schema referred to by <paramref name="schemaSet"/>.
            </summary>
            <param name="schemaSet">The schema set.</param>
            <param name="xmlElement">The XmlElement to validate against Schema.</param>
            <param name="repositoryId"></param>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">
            Throws InvalidXmlException if the Xml in <paramref name="xmlElement"/> is not valid according to the XmlSchema referred to by <paramref name="schemaSet"/> 
            </exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlFieldsAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlDocument)">
            <summary>
            Validates the XML fields against schema.
            </summary>
            <param name="schemaSet">The schema set.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.PostProcessPSVI(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Post-processes the Post Schema Validation Infoset (PSVI).
            </summary>
            <param name="elementWithPsvi">XmlElement to process</param>
            <param name="repository">The Repository of the item</param>
            <remarks>
                It finds out all the Keyword in the <paramref name="elementWithPsvi"/> and adds xlink:href in every keyword.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.AssertValidLinkedComponent(System.Xml.XmlElement,Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that the schema on which the linked component with <paramref name="linkedComponentUri"/> Id is based on, 
            is specified in allowedSchemas in the Xml Schema definition of this linked component (which is retrieved from IXmlSchemaInfo/PSVI of
            the <paramref name="xLinkElement"/>).
            </summary>
            <param name="xLinkElement">XmlElement that represents the linked component's xLink.</param>
            <param name="linkedComponentUri">TcmUri of the linked component.</param>
            <remarks>
                This method loads the Component with <paramref name="linkedComponentUri"/> from Database.
                Then it validates following with the SchemaInfo associated with <paramref name="xLinkElement"/> - 
                    1. LinkType of SchemaInfo matches with the ComponentType of this Component.
                    2. Schema of this Component matches with one of the TargetSchemas in SchemaInfo. If there is no TargetSchema mentioned in the 
                    SchemaInfo, then , component with any schema is acceptable in the source RepositoryLocalObject.
                If any of the above mentioned valdiation failed, it throws <see cref="T:Tridion.ContentManager.InvalidSchemaException"/> exception.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Session">
            <summary>
            Get the Session in which the object was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Id">
            <summary>
            Get the identifier (TCM URI) of the object.
            </summary>
            <remarks>
            Accessing the Id property is an inexpensive operation; it doesn't require loading the object state.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Title">
            <summary>
            Get or set the title (display name) of the object.
            </summary>
            <remarks>
            If an object is retrieved by traversing a link from another object,
            the Title property is preloaded (it's present in the link).
            In that case, accessing the Title property is an inexpensive operation.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.CreationDate">
            <summary>
            Get the date/time at which the item was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.RevisionDate">
            <summary>
            Get the date/time at which the item was last modified.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.AllowedActions">
            <summary>
            Gets information about the actions that can be performed on the object in its current state.
            </summary>
            <value>
            A combination of values from the enumeration <see cref="T:Tridion.ContentManager.Actions"/>.
            </value>
            <remarks>
            An action can be either Allowed, Denied or neither. In the latter case, the action is not applicable.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.DeniedActions"/>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.DeniedActions">
            <summary>
            Gets information about the actions that cannot be performed on the object in its current state.
            </summary>
            <value>
            A combination of values from the enumeration <see cref="T:Tridion.ContentManager.Actions"/>.
            </value>
            <remarks>
            An action can be either Allowed, Denied or neither. In the latter case, the action is not applicable.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.AllowedActions"/>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.LoadState">
            <summary>
            Get the object's load state: the extent to which the state has been loaded.
            </summary>
            <remarks>
            <para>TOM.NET objects feature "lazy loading" and "pre-loading".</para>
            <para>
            If the object is obtained through <see cref="M:Tridion.ContentManager.Session.GetObject(System.String)"/>, <see cref="M:Tridion.ContentManager.Session.GetNewObject``1"/>
            or one of the constructors that create an instance for a new of existing item, then only its
            <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/> property is set, the rest of the state is not loaded yet 
            (thus making the previously mentioned operations relatively lightweight).
            Initially, the LoadState will be <see cref="F:Tridion.ContentManager.LoadState.NotLoaded"/> to reflect this situation.
            </para>
            <para>
            If the object is obtained by traversing a reference from another object of from a list,
            at least its <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property will be pre-loaded (it is already available in the source).
            Therefore, at least the <see cref="P:Tridion.ContentManager.IdentifiableObject.Id"/> and <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> properties can be accessed without
            causing a full load of the object's state.
            If the object is obtained from a list, it depends on the list which properties will be pre-loaded;
            see the documentation of the list method to know which properties that will be.
            In this case, the LoadState will be <see cref="F:Tridion.ContentManager.LoadState.PreLoaded"/> to reflect this situation.
            </para>
            <para>
            As soon as a property that has not been (pre-)loaded yet is accessed, the full state is loaded Just-In-Time.
            After such a full load, the LoadState will be <see cref="F:Tridion.ContentManager.LoadState.FullyLoaded"/>. 
            </para>
            <para>
            A full (re-)load can also be forced by calling <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/>.
            </para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.LoadFlags"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.LoadFlags">
            <summary>
            Get the flags used when the object was last loaded.
            </summary>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.LoadState"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsEditable">
            <summary>
            Gets a value indicating whether the object is editable.
            </summary>
            <remarks>
            Default it will return false if not set
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsWhereUsedImplemented">
            <summary>
            Gets a value indicating whether this type implements where used functionality.
            </summary>
            <remarks>
            <para>Default value is <c>true</c>.</para>
            <para>It is used when throwing <see cref="T:Tridion.ContentManager.ItemIsInUseException"/>. When where used is not implemented we want to set ItemIsInUseNoWhereUsed error code to prevent GUI showing Where Used button.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsSaveImplementedInR6">
            <summary>
            Gets a value indicating whether saving of this type objects is implemented in R6.
            </summary>
            <value><c>true</c>, if save is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.</value>
            <remarks>
            Types that doesn't implement save in R6 must override this property and set it to <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsDeleteImplementedInR6">
            <summary>
            Gets a value indicating whether deleting of this type objects is implemented in R6.
            </summary>
            <value><c>true</c>, if delete is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.</value>
            <remarks>
            Types that doesn't implement delete in R6 must override this property and set it to <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.CurrentState">
            <summary>
            Gets or sets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.LoadedState">
            <summary>
            Gets or sets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsSaved">
            <summary>
            Gets whether the object is saved.
            </summary>
            <remarks>
            Newly created objects which have not been saved yet have an tcm:0-0-0 Id.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.UserContext">
            <summary>
            Gets the UserContext to be used for legacy BL access.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.XsltLocalizedStrings">
            <summary>
            Gets a collection of localized strings as input for an XSLT transformation.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(System.Type,System.Type,System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class used internally for registering the type.
            </summary>
            <param name="filterType">
            The Type of the <c>filter</c> parameter in the list method
            </param>
            <param name="filterDataType">
            The Type of the data class corresponding to the specified filter type.
            </param>
            <param name="managerType">
            The Type of class containing the system wide list methods.
            </param>
            <param name="xmlListMethodName">
            The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.
            </param>
            <param name="listMethodName">
            The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class for a new object.
            </summary>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(Tridion.ContentManager.Data.SystemWideObjectData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemWideObject"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>        
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of used items as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of used items in the XML.</param>
            <returns>A list of used items in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.SetDefaultData">
            <summary>
            Sets the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.SystemWideObject.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.SystemWideObject.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
            		<item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
            		<item><description>the linked item does not exist</description></item>
            		<item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            	</list>
            </exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.OnLoadingApplicationData(Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this list are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.AssertValidSystemWideUri">
            <summary>
            System wide objects must not have a context publication and no version in their URI
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.AssertNoUniquenessConflicts(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}})">
            <summary>
            Checks that specified values are unique.
            Throws <see cref="T:Tridion.ContentManager.InvalidActionException"/> if the values are not unique.
            </summary>
            <param name="propertiesToCheck">Properties in this collection are checked for uniqueness.</param>
        </member>
        <member name="P:Tridion.ContentManager.SystemWideObject.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.SystemWideObject.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.IContainer">
            <summary>
            Represents the concept of a container in general. It is implemented by Repository and OrganizationalItem classes. For now the interface is empty.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.ISecurable">
            <summary>
            Interface implemented by items that can be secured or has SecurityDescriptors.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.ISecurable.Id">
            <summary>
            Gets the identifier (TCM URI) of the item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(Tridion.ContentManager.Data.ContentManagement.RepositoryData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class for a new Repository.
            </summary>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class for an existing Repository.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Repository.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1">
            <summary>
            Get a new root organizational item of the given type.
            </summary>
            <typeparam name="T">The type of the organizational item. Must be a sub-type of <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/></typeparam>
            <returns>An organizational item instance representing a new root organizational item.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1"/>
            <seealso cref="M:Tridion.ContentManager.Session.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(Tridion.ContentManager.TcmUri)">
            <summary>
            Get a (repository-local) object in the context of this Repository.
            </summary>
            <param name="tcmUri">The TCM URI of the object.</param>
            <returns>The requested object in context of this Repository or <c>null</c> if the TCM URI is <c>null</c> or <c>tcm:0-0-0</c>.</returns>
            <remarks>
            The given TCM URI may be in another Repository, but the returned object will be in the context of the given Repository
            </remarks>
            <example><code>
            Repository testRepository = (Repository)session.GetObject("tcm:0-2-1");
            Component testComponent = (Component)testRepository.GetObject(new TcmUri("tcm:1-3"));
            Console.WriteLine(testComponent.Id); // will show "tcm:2-3"
            </code></example>
            <seealso cref="M:Tridion.ContentManager.Session.GetObject(Tridion.ContentManager.TcmUri)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(System.String)">
            <summary>
            Get a (repository-local) object in the context of this Repository.
            </summary>
            <param name="uri">The URI of the object. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns>The requested object in context of this Repository or <c>null</c> if the URI is <c>null</c> or <c>tcm:0-0-0</c>.</returns>
            <remarks>
            The given URI may be in another Repository, but the returned object will be in the context of the given Repository
            </remarks>
            <example><code>
            Repository testRepository = (Repository)session.GetObject("tcm:0-2-1");
            Component testComponent = (Component)testRepository.GetObject("tcm:1-3");
            Console.WriteLine(testComponent.Id); // will show "tcm:2-3"
            </code></example>
            <seealso cref="M:Tridion.ContentManager.Session.GetObject(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockFilter</term><description>Specifies a bitmask to apply to the items' LockType. Must be used in combination with LockResult.</description></item>
                <item><term>LockResult</term><description>Only return items with the given LockType (after the LockFilter bitmask has been applied).</description></item>
                <item><term>SubType</term><description>Only return item with the given sub-type: <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/>, <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType"/> or template type ID.</description></item>
                <item><term>Recursive</term><description>Specifies whether to include items in contained organizational items (recursively).</description></item>
            </list>
            </param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetItems">
            <summary>
            Get a list of items contained in this Repository.
            </summary>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)">
            <summary>
            Get a list of items contained in this Repository.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Repository as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems">
            <summary>
            Get a list of items contained in this Repository as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)">
            <summary>
            Get a list of items contained in this Repository as XML.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrganizationalItems(Tridion.ContentManager.Filter)">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return Organizational Items with the given item type(s)</description></item>
                <item><term>IncludeTrustees</term><description>Only return Organizational Items that use ALL the specified trustees in their permissions.</description></item>
                <item><term>ExcludeTrustees</term><description>Only return Organizational Items that do not use ANY of the specified trustees in their permissions.</description></item>
            </list>
            </param>
            <returns>A list of Organizational objects.</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrganizationalItems">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <returns>A list of Organizational objects.</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrganizationalItems(Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter)">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <param name="filter">Can be used to filter the result of items.
            </param>
            <returns>A list of Organizational objects.</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrganizationalItems(Tridion.ContentManager.Filter)">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return Organizational Items with the given item type(s)</description></item>
                <item><term>IncludeTrustees</term><description>Only return Organizational Items that use ALL the specified trustees in their permissions.</description></item>
                <item><term>ExcludeTrustees</term><description>Only return Organizational Items that do not use ANY of the specified trustees in their permissions.</description></item>
            </list>
            </param>
            <returns>The root element of the XML list (tcm:ListOrganizationalItems)</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrganizationalItems">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <returns>The root element of the XML list (tcm:ListOrganizationalItems)</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrganizationalItems(Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter)">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <param name="filter">Can be used to filter the result of items.
            </param>
            <returns>The root element of the XML list (tcm:ListOrganizationalItems)</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Categories in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>Root</term><description>Only return the root categories (<c>true</c>) or non-root categories (<c>false</c>).</description></item>
            </list>
            </param>
            <returns>A list of Category objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories">
            <summary>
            Get a list of Categories in this Repository.
            </summary>
            <returns>A list of Category objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.ContentManagement.CategoriesFilter)">
            <summary>
            Get a list of Categories in this Repository.
            </summary>
            <param name="filter">Can be used to filter the result of Categories.</param>
            <returns>A list of Category objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.ContentManagement.CategoriesFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Categories in this Repository as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories">
            <summary>
            Get a list of Categories in this Repository as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.ContentManagement.CategoriesFilter)">
            <summary>
            Get a list of Categories in this Repository as XML.
            </summary>
            <param name="filter">Can be used to filter the result of Categories.</param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.ContentManagement.CategoriesFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of "orphan" Keywords: Keywords that should have a parent, but don't.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>RootCategory</term><description>Only return orphan keywords within a specific root Category.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords">
            <summary>
            Get a list of "orphan" Keywords: Keywords that should have a parent, but don't.
            </summary>
            <remarks>
                An orphan Keyword is a root Keyword that belongs to a non-root Category.
                A root Keyword is a Keyword that doesn't have any parents.
                A non-root Category is a Category that specifies an Allowed Parent Category other than itself.
                So, if we have two categories A and B and A is the Allowed Parent Category of B, then any Keyword that belongs to B
                and doesn't have parents is an orphan Keyword.
            </remarks>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords(Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter)">
            <summary>
            Get a list of "orphan" Keywords: Keywords that should have a parent, but don't.
            </summary>
            <param name="filter">Can be used to filter the result of orphan Keywords.</param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrphanKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of "orphan" Keywords as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrphanKeywords">
            <summary>
            Get a list of "orphan" Keywords as XML.
            </summary>
            <remarks>
                An orphan Keyword is a root Keyword that belongs to a non-root Category.
                A root Keyword is a Keyword that doesn't have any parents.
                A non-root Category is a Category that specifies an Allowed Parent Category other than itself.
                So, if we have two categories A and B and A is the Allowed Parent Category of B, then any Keyword that belongs to B
                and doesn't have parents is an orphan Keyword.
            </remarks>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrphanKeywords(Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter)">
            <summary>
            Get a list of "orphan" Keywords as XML.
            </summary>
            <param name="filter">Can be used to filter the result of orphan Keywords.</param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of the taxonomies in this Repository
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>UseForNavigation</term><description>Only return taxonomies with root Categories that have the given value for <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation"/>.</description></item>
            </list>
            </param>
            <returns>The root element of the XML list (tcm:ListTaxonomies).</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            The description of the root Category is used as the title of the Taxonomy.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies">
            <summary>
            Get an XML list of the taxonomies in this Repository
            </summary>
            <returns>The root element of the XML list (tcm:ListTaxonomies).</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            The description of the root Category is used as the title of the Taxonomy.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.ContentManagement.TaxonomiesFilter)">
            <summary>
            Get an XML list of the taxonomies in this Repository
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>The root element of the XML list (tcm:ListTaxonomies).</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            The description of the root Category is used as the title of the Taxonomy.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.Filter)">
            <summary>
            Get the taxonomies in this Repository in RDF/OWL-Lite format.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>UseForNavigation</term><description>Only return taxonomies with root Categories that have the given value for <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation"/>.</description></item>
                <item><term>Categories</term><description>Only return taxonomies with the given root Categories.</description></item>
            </list>
            </param>
            <returns>The root element of the RDF/OWL-Lite output (rdf:RDF)</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl">
            <summary>
            Get the taxonomies in this Repository in RDF/OWL-Lite format.
            </summary>
            <returns>The root element of the RDF/OWL-Lite output (rdf:RDF)</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter)">
            <summary>
            Get the taxonomies in this Repository in RDF/OWL-Lite format.
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>The root element of the RDF/OWL-Lite output (rdf:RDF)</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.ContentManagement.TaxonomiesFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListPathToCategory(Tridion.ContentManager.ContentManagement.Category,Tridion.ContentManager.Filter)">
            <summary>
            Get the path from the root of the taxonomy to the given Category.
            </summary>
            <param name="category">The Category to get the path for.</param>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            Currently, no conditions are supported.
            </param>
            <returns>The root element of the path structure (tcm:ListPathToCategory).</returns>
            <remarks>
            This method is deprecated and kept for backward compatibility purposes only. 
            Use <see cref="M:Tridion.ContentManager.ContentManagement.Category.GetListPathToCategory(Tridion.ContentManager.ContentManagement.PathToCategoryFilter)"/> instead.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.SetDefaultTitles(Tridion.ContentManager.Data.ContentManagement.RepositoryData)">
            <summary>
            Initializes the titles of inner properties to their default localized values.
            If a title has already been set to a non empty value, it is not changed.
            </summary>
            <remarks>
            This method handles the title of the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.DefaultMultimediaSchema"/>.
            </remarks>
            <param name="state">The data object to set the titles on. Depending on where this method is being called from,
            it could be the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.LoadedState"/> or the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.CurrentState"/> of this object.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>Adds a localized string for the lock type title.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>
            This override sets Search, Publish, UnPublish, View, Edit, Delete, Localize, Unlocalize, RePublish,
            BlueprintManaged, PermissionManaged and WorkflowManaged actions.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.ToR5DeltaXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Gets a delta XML representation of the object.
            </summary>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <returns>
            A string containing the (UTF-8 encoded) XML representation.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.UpdateInternal(System.String)">
            <summary>
            Updates the state of the object from the specified (delta) R5 XML. 
            </summary>
            <param name="deltaXml">An XML <see cref="T:System.String"/> that should be valid according to the R5 XML schema.</param>
            <remarks>This method provides functionality for the BL facade to facility the original UpdateXML functionality.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.AssertCanPublish">
            <summary>
            Verifies if current user is allowed to publish the item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategoriesXsdNamespaceUri(Tridion.ContentManager.TcmUri)">
            <summary>
            Gets the namespace URI of the Categories XSD for the given Repository
            </summary>
            <param name="id">The TCM URI of the Repository</param>
            <returns>The namespace URI of the Categories XSD.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetIdFromCategoriesXsdNamespaceUri(System.String)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.TcmUri"/> of the given Categories XSD namespace URI.
            </summary>
            <param name="categoriesXsdName">The Categories XSD namespace URI of the Repository.</param>
            <returns>The <see cref="T:Tridion.ContentManager.TcmUri"/> of the Repository.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GenerateAndUpdateCategoriesXsd">
            <summary>
            Generates the CategoriesXSD XmlElement with schema as root element for the current Repository and updates it in the database.
            The XmlElement is set on the LoadedState.CategoriesXsd property.
            </summary>
            <remarks>Keep in mind that the LoadedState will be saved in the database</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategoriesXsd(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Gets the categories XSD.
            </summary>
            <param name="id">The id of the Repository.</param>
            <param name="currentSession">The current session.</param>
            <returns>SerializableXmlDocument representing Categories Xsd</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GenerateAndUpdateCategoriesXsd(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Generates and updates Categories Xsd of a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> with given <paramref name="id"/>
            </summary>
            <param name="id">The id of a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>.</param>
            <param name="currentSession">The current <see cref="T:Tridion.ContentManager.Session"/>.</param>
            <returns>SerializableXmlDocument representing Categories Xsd</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItemsStream(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)">
            <summary>
            Gets a list of Repository Local Object as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> that constraints the list of Repository Local Object in the XML.</param>
            <returns>A list of Repository Local Object in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItemsData(Tridion.ContentManager.ContentManagement.RepositoryItemsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects.</returns>
            <remarks>
            The returned Data Objects do NOT have allowed actions set yet, 
            but will be loaded with all properties needed to determine allowed actions (if requested in the filter).
            In order to set the allowed actions (and remove non-requested, internal properties needed to determine allowed action),
            use <see cref="M:Tridion.ContentManager.Session.GetObjectsFromDataObjects``2(System.Collections.Generic.IEnumerable{``1},Tridion.ContentManager.StronglyTypedFilter,System.Boolean)"/> on the list of Data Objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.CreateKeywordEnumeration(System.String,System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData})">
            <summary>
            Creates the keyword simpleType element for CategoriesXsd and adds it to <paramref name="schemaElement"/>.
            </summary>
            <param name="categoryXmlName">The XML Name of the Category for which the keyword simpleType element should be created.</param>
            <param name="schemaElement">The XmlElement where to add the simpleType element to.</param>
            <param name="keywordList">The list of KeywordData objects that exist in the specified category.</param>
            <example>An example of the simpleType Element looks like this:
               <![CDATA[<xsd:simpleType name="_TomTestLevel1">
                   <xsd:restriction base="xsd:string">
                       <xsd:enumeration value="key1"/>
                       <xsd:enumeration value="key2"/>
                   </xsd:restriction>
               </xsd:simpleType>]]>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.CreateCategoryType(Tridion.ContentManager.Data.ContentManagement.CategoryData,System.Xml.XmlElement,System.Boolean)">
            <summary>
            Creates the Category complexType element for CategoriesXsd and adds it to <paramref name="schemaElement"/>
            </summary>
            <param name="category">the CategoryData object where the category complexType element should be created for</param>
            <param name="schemaElement">the XmlElement where to add the complexType element to</param>
            <param name="useEnumeration">if the xsd also contains the keywords</param>
            <example>An example of the simpleType Element looks like this:
               <![CDATA[<xsd:complexType name="TomTestLevel1">
                            <xsd:annotation>
                                <xsd:documentation>TomTest Level 1</xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleContent>
                                <xsd:extension base="category:_TomTestLevel1">
                                    <xsd:attribute ref="category:CategoryURI" use="optional" fixed="tcm:6817-13934-512"/>
                                    <xsd:attribute ref="xlink:type" use="optional" fixed="simple"/>
                                    <xsd:attribute ref="xlink:href" use="optional"/>
                                    <xsd:attribute ref="xlink:title" use="optional"/>
                                </xsd:extension>
                            </xsd:simpleContent>
                        </xsd:complexType>]]>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.CreateSchemaElement(Tridion.ContentManager.TcmUri)">
            <summary>
            Creates the schema element for CategoriesXsd.
            </summary>
            <param name="id">The TCM URI of the Repository. Used to construct the schema namespace.</param>
            <returns>the schemaElement</returns>
            <example>An example of the schemaElement looks like this:
               <![CDATA[<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:category="tcm:0-6440-1/Categories.xsd" targetNamespace="tcm:0-6440-1/Categories.xsd">
                            <xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="cm_lnk.xsd"/>
                            <xsd:attribute name="CategoryURI" type="xsd:anyURI"/>
                        </xsd:schema>]]>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.ResetRightsOnDeletedTrustees">
            <summary>
            Resets all rights for any trustee that was removed (ie. exist in <see cref="P:Tridion.ContentManager.ContentManagement.Repository.LoadedState"/> but not in <see cref="P:Tridion.ContentManager.ContentManagement.Repository.CurrentState"/>).
            This way removing a Trustee from the Access Control Entries is the same as implicit denying (setting it to None) him all Rights.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            Checks if the CategoriesXsd property is set. If it is not set, it will generate it and update the database.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.OnDeleted(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, after going to the DAL.
            </summary>
            <remarks>Updates the search index.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.UniquenessException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not unique.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">
                    <list type="bullet"><item>The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</item>
                                        <item>The <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Key"/> is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Key"/> is exceeding 255 characters./&gt;</item>
                                        <item>If <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/> of <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Metadata"/> is not set to <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/></item>
                                        <item>If Root XmlElement is not valid or Xml is not valid or xLink inside XmlElement is not valid.</item>
                    </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if 
                    <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
                                        <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
                                        <item><description>the linked item does not exist</description></item>
                                        <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
                    </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">This exception will be thrown if
                    <list type="bullet"><item>User does not have <see cref="F:Tridion.ContentManager.Security.Rights.PermissionManagement"/> to change <see cref="P:Tridion.ContentManager.ContentManagement.Repository.AccessControlList"/>.</item>
                                        <item>User does not have <see cref="F:Tridion.ContentManager.Security.Rights.PublicationManagement"/> while updating.</item>
                                        <item>User is not system administrator</item>
                    </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">This exception will be thrown if
                    <list type="bullet"><item>BluePrint Hierarchy is invalid or there is BluePrint Conflict</item>
                                        <item>Making master publication as child or vice versa</item>
                                        <item></item>
                    </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetBLClassName">
            <summary>
            The BL class name of all Repositories is "Publication".
            </summary>
            <returns>The legacy BL class name.</returns>
            <remarks>
            By default, the (unqualified) type name is returned, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.ContentManagement.Repository.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.Unload">
            <summary>
            Unloads the current, loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.ValidateSystemConstraints">
            <summary>
            Validates system constraints before this object is saved.
            </summary>
            <remarks>
            The word system here is used to imply that these constraints are hard-coded and not possible to be altered by the user.
            For constraints that the user can alter by means of XSD, see <see cref="M:Tridion.ContentManager.IdentifiableObject.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Creator">
            <summary>
            Gets the user who created the Repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.RootFolder">
            <summary>
            Gets the root Folder (typically called "Building Blocks") of the Repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.CategoriesXsd">
            <summary>
            Gets the Categories XSD of this Repository.
            </summary>
            <value>The root element of the Categories XSD (xsd:schema).</value>
            <remarks>
            The Categories XSD is a W3C Schema defining all Categories and Keywords (titles)
            in the Repository.
            Since each Repository has its own set of Categories and Keywords and Keyword titles can be localized,
            each Repository has its own Categories XSD.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Parents">
            <summary>
            Gets access to the parent Repositories.
            </summary>
            <value>A list of Repository objects. This is a connected collection: changes to the collection are reflected in the state of the Repository.</value>
            <remarks>
            The order of the items in the lists corresponds to the Blueprint priority of the parents.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.DefaultMultimediaSchema">
            <summary>
            Gets or sets the default Multimedia Schema.
            </summary>
            <remarks>
            The default Multimedia Schema is used by WebDAV.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.HasChildren">
            <summary>
            Gets a value indicating whether this Repository has child Repositories in a BluePrint hierarchy.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata on the Repository.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/>) or <c>null</c> if the Repository has no custom metadata.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Repository.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Metadata">
            <summary>
            Gets or sets the (custom) metadata as XML.
            </summary>
            <value>
            The root element of the metadata XML or <c>null</c> if there is no custom metadata.
            </value>
            <remarks>
            This property provides low-level access to the metadata XML.
            It is also possible to access the metadata through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single metadata field value with the ItemFields API:
            <code>
            Repository myRepository = (Repository)mySession.GetObject("tcm:0-1-1");
            ItemFields metadataFields = new ItemFields(myRepository.Metadata, myRepository.MetadataSchema);
            TextField myTextField = (TextField)metadataFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Repository.MetadataSchema"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.AccessControlList">
            <summary>
            Gets the Access Control List which is used to restrict access to the Repository.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Security.AccessControlList"/> object representing the Access Control List.
            Access Control Entries can be added/removed using the <see cref="P:Tridion.ContentManager.Security.AccessControlList.AccessControlEntries"/> property.
            </value>
            <remarks>
            In general, an Access Control List can specify both Rights and Permissions, but for a Repository only Rights are used.
            Notice that saving a Repository with empty ACL is not supported. In such case the original ACL will not be modified during saving.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Key">
            <summary>
            Gets or sets the Key value for the Repository.
            </summary>
            <remarks>
            The Key property is used as an additional value to identify Repository. Its value can not be empty and must be unique across all Repositories.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.WebDavUrl">
            <summary>
            Get the WebDAV URL of the item.
            </summary>
            <value>A string containing the WebDAV URL or an empty string if WebDAV is not enabled or the item cannot be exposed through WebDAV.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PublicationData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> class for a new Publication.
            </summary>
            <param name="session">
            The Session in which the Publication should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> class for an existing Publication.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Publication.
            </param>
            <param name="session">
            The Session in which the Publication should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.GetTypeId">
            <summary>
            Gets the type ID for this type.
            </summary>
            <returns>
            Returns <see cref="F:Tridion.ContentManager.ItemType.Publication"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.UniquenessException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not unique.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">
            <list type="bullet"><item>The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also
            thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</item>
            <item>The <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Key"/> is not set or an empty string. This exception is also thrown if the length of the 
            <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Key"/> is exceeding 255 characters./&gt;</item>
            <item>If <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/> of <see cref="P:Tridion.ContentManager.ContentManagement.Repository.Metadata"/> is not set to <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/></item>
            <item>If Root <c>XmlElement</c> is not valid or Xml is not valid or xLink inside <c>XmlElement</c> is not valid.</item>
            <item>If <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationType"/> is not valid</item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
            <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
            <item><description>the linked item does not exist</description></item>
            <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">This exception will be thrown if
            <list type="bullet"><item>User does not have <see cref="F:Tridion.ContentManager.Security.Rights.PermissionManagement"/> to change 
            <see cref="P:Tridion.ContentManager.ContentManagement.Repository.AccessControlList"/>.</item>
            <item>User does not have <see cref="F:Tridion.ContentManager.Security.Rights.PublicationManagement"/> while updating.</item>
            <item>User is not system administrator</item>
            <item>User does not have <see cref="F:Tridion.ContentManager.Security.Rights.WorkflowManagement"/> while updating <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PageTemplateProcess"/> and 
            <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.ComponentTemplateProcess"/>.</item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">This exception will be thrown if
            <list type="bullet"><item>BluePrint Hierarchy is invalid or there is BluePrint Conflict</item>
            <item>Making master publication as child or vice versa</item>
            <item></item>
            </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.ValidateSystemConstraints">
            <summary>
            Validates system constraints.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.SetDefaultTitles(Tridion.ContentManager.Data.ContentManagement.RepositoryData)">
            <summary>
            Initializes the titles of inner properties to their default localized values.
            If a title has already been set to a non empty value, it is not changed.
            </summary>
            <remarks>
            This method handles the title of the properties <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultComponentTemplate"/>,
            <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultPageTemplate"/>, <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultTemplateBuildingBlock"/>, <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PageSnapshotTemplate"/>
            and <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.ComponentSnapshotTemplate"/>.
            </remarks>
            <param name="repositoryData">The data object to set the titles on. Depending on where this method is being called from,
            it could be the <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.LoadedState"/> or the <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.CurrentState"/> of this object.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>
            This override sets Managed flag.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.NormalizePath(System.String)">
            <summary>
            Normalizes a path. Removes trailing slash in the passed path parameter.
            </summary>
            <param name="path">The path string which will be cleaned.</param>
            <returns>A path string without a trailing slash.</returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.RootStructureGroup">
            <summary>
            Gets the root Structure Group of this Publication.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> object or <c>null</c> if no root Structure Group has been defined (yet).</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath">
            <summary>
            Gets or sets the publication/publish path.
            </summary>
            <remarks>
            The publish path of Structure Groups and Pages starts with the Publication's PublicationPath.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationType">
            <summary>
            Gets or sets the Publication Type.
            </summary>
            <value>
            The value must be the name of one of the configured Publication Types (see Tridion.ContentManger.config) 
            The following values can be used out-of-the box (configured with installation by default):
            <list type="table">
                <item><term>Unspecified</term><description>Unspecified Publication Type</description></item>
                <item><term>Content</term><description>Content Publication Type</description></item>
                <item><term>Web</term><description>Web Publication Type</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationUrl">
            <summary>
            Gets or sets the publication/publish URL.
            </summary>
            <remarks>
            The publish URL of Structure Groups and Pages starts with the Publication's PublicationUrl.
            This needs to be a relative Url.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.MultimediaPath">
            <summary>
            Gets or sets the path to the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.MultimediaUrl">
            <summary>
            Gets or sets the URL of the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            This needs to be a relative Url.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultComponentTemplate">
            <summary>
            Gets or sets the default Component Template.
            </summary>
            <remarks>
            The default Component Template is used to render previews of Components.
            It also provides the default content for new Component Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultPageTemplate">
            <summary>
            Gets or sets the default Page Template.
            </summary>
            <remarks>
            The default Page Template provides the default content for new Page Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultTemplateBuildingBlock">
            <summary>
            Gets or sets the default Template Building Block.
            </summary>
            <remarks>
            The default Template Building Block provides the default content for new Template Building Blocks.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.ComponentTemplateProcess">
            <summary>
            Gets or sets the Process Definition that defines the Workflow process which is triggered when Component Templates are edited.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PageTemplateProcess">
            <summary>
            Gets or sets the Process Definition that defines the Workflow process which is triggered when Page Templates are edited.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.ComponentSnapshotTemplate">
            <summary>
            Gets or sets the Component Template that is used to render the snapshot for a Component that is in Workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PageSnapshotTemplate">
            <summary>
            Gets or sets the Page Template that is used to render the snapshot for a Page that is in Workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.ShareProcessAssociations">
            <summary>
            Gets or sets a value indicating whether to share Process Associations of Schemas and Structure Groups from a Parent Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintNode.#ctor(Tridion.ContentManager.Data.ContentManagement.BluePrintNodeData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintNode.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>
            Sets the <see cref="T:Tridion.ContentManager.Data.AllowedActions"/> of the <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintNode.Item"/> for this BluePrint.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintNode.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintNode.Item">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> that this <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> represents.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> object.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintNode.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintNode.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BasedOnSchema">
            <summary>
            Represents a Schema to search for.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BasedOnSchema.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BasedOnSchema"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BasedOnSchema.#ctor(Tridion.ContentManager.Data.ContentManagement.BasedOnSchemaData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BasedOnSchema"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BasedOnSchema.AssertValidLinks">
            <summary>
            Collects all the Link objects and validates them.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Schema">
            <summary>
            Gets or sets the <see cref="T:Tridion.ContentManager.Data.ContentManagement.SchemaData"/> to search for.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Field">
            <summary>
            Gets or sets the (local) name of the Schema Field to search in.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Schema"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.FieldValue"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Schema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.FieldValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.FieldValue">
            <summary>
            Gets or sets the content to search for within a given Schema Field value.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Schema"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Field"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Schema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.Field"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BasedOnSchema.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter">
            <summary>
            A filter that can be used to get the list of valid parent publication.
            </summary>
            <remarks>
            The BluePrint parents list will always contain only those parent repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.BluePrintParentsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.ForRepository">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.ForRepository"/> condition to get the list of valid BluePrint parent Publications of that Publication.
            </summary>
            <remarks>
            The returned list will contain Publications which are possible to be used as new parents and fliter out the existing parent Publications.
            To get the list of valid BluePrint parent Publications of a new Publication set the value to <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.CurrentParents">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.CurrentParents"/> condition to skip specific parents in the result.
            </summary>
            <remarks>
            If set, all repositories in this collection must belong to the same BluePrint tree and the result will be limited to only parents which also belong to this BluePrint tree.
            Additionaly, these parents will be also filtered out from the final list.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.InstanceData">
            <summary>
            An item used to specify the instance data of a schema.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.InstanceData.#ctor(Tridion.ContentManager.ContentManagement.Schema,Tridion.ContentManager.ContentManagement.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.InstanceData"/> class.
            </summary>
            <param name="schema">The associated schema for this Instance Data.</param>
            <param name="containerItem">The container of the item for which this instance data is going to be used.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.InstanceData.#ctor(Tridion.ContentManager.Data.ContentManagement.InstanceData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.InstanceData"/> class.
            </summary>
            <param name="data">The Data Object to use.</param>
            <param name="session">The Session in which the objects should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.InstanceData.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.InstanceData.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.InstanceData.ToString">
            <summary>
            Returns a string representation for the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.Schema">
            <summary>
            Gets the associated schema for this Instance Data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.ContainerItem">
            <summary>
            Gets the container of the item for which this instance data is going to be used.
            </summary>
            <value>
            The possible values are of type <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> or <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.Content">
            <summary>
            Gets or sets the XML content.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.Metadata">
            <summary>
            Gets or sets the (custom) metadata as XML.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.InstanceData.Session">
            <summary>
            Gets the Session.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter">
            <summary>
            Represents a Filter for a list of Organizational Items which are the ancestors of a specified Repository Local Object.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestors(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> class. 
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in the subject that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in the subject that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> class. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemAncestorsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> class. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemAncestorsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.IncludePublishLocationColumns">
            <summary>
            Gets or sets a value indicating whether PublishLocation Info columns are included in the returned list. 
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property determines the inclusion of the <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.PublishLocationInfo"/> or the following XML attribute
            <c>PublishLocationPath</c> and <c>PublishLocationUrl</c> while getting the XML list.
            When set to <c>true</c>, preloads <c>PublishLocationPath</c>, <c>PublishLocationUrl</c> and <c>PublishPath</c> of the Data Object
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ApplicationDataEventArgs">
            <summary>
            Abstract base class for event data for events related to application data.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.CrudEventArgs">
            <summary>
            Abstract base class for event data for events related to CRUD (Create/Read/Update/Delete) operations.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.TcmEventArgs">
            <summary>
            Abstract base class for Tridion Content Manager event data. 
            </summary>
            <remarks>
            <para>
            Each type of event has an associated <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived class which may contain event-related data.
            Typically, if an operation has parameters, each parameter will have an associated property in the event data.
            The event data properties are often read/write; initially, they represent the value of the associated parameter, 
            but they can be modified by the event handler and the modified value will be used by the CM Kernel 
            (if the modification is done in the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Initiated"/> phase by a synchronous event handler).
            </para>
            <para>
            Next to the event-specific properties, the base class provides access to two generic mechanisms:
            <list type="bullet">
              <item><see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables"/> which can be used to share information between event handlers.</item>
              <item>An <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.EventStack"/> which allows event handlers to determine if an event was triggered by another event.</item>
            </list>
            </para>
            </remarks>
            <seealso cref="N:Tridion.ContentManager.Extensibility.Events"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmEventArgs.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmEventArgs.DeepCopy">
            <summary>
            Creates a deep copy of the event data which can be used for asynchronous events.
            </summary>
            <returns>A new <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived instance which is a deep copy of this one.</returns>
            <remarks>
            Asynchronous events are executed on a different thread and should also be completely decoupled from the synchronous event chain.
            That is: asynchronous event handlers should not have the ability to change the event data used for the synchronous events. 
            Since the asynchronous event handlers may be executed in parallel, the event data used for the asynchronous events is a deep copy.
            The default implementation performs a shallow copy, which is OK as long as the class only contains value type properties.
            Subclasses that add reference type properties must override this method to ensure the deep copy semantics.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values (excluding <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables"/>).</returns>
            <remarks>
            Since <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> itself doesn't have any properties except <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables"/>, it returns <c>true</c> as soon as the types are the same.
            Subclasses that add properties must override this method and compare the property values.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code, which is based on the type or all property values (excluding <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables"/>).</returns>
            <remarks>
            Since <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> itself doesn't have any properties, the hash code is only based on the type.
            Subclasses that add properties must override this method and generate a hash code based on the property values.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values (excluding <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables"/>).</returns>
            <remarks>
            Since <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> itself doesn't have any properties, the string representation only contains the type name.
            Subclasses that add properties must override this method and generate a string representation containing all property values.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmEventArgs.ContextVariables">
            <summary>
            Gets access to Context Variables which can be used to share information between event handlers.
            </summary>
            <value>
            A collection of key-value pairs which don't have any meaning for the Content Manager system.
            Key-value pairs can be added, removed and changed using <see cref="T:System.Collections.Generic.IDictionary`2"/> members.
            </value>
            <remarks>
            <para>
            Event handlers are free to put in any key or value. 
            Keys should be sufficiently unique to prevent conflicts between different event handlers (extensions).
            </para>
            <para>
            Be careful with using reference type values; the value may be used across threads and it won't be explicitly disposed.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmEventArgs.EventStack">
            <summary>
            Gets access to the "event stack" which allows event handlers to determine if an event was triggered by another event.
            </summary>
            <value>
            An enumeration of <see cref="T:Tridion.ContentManager.Extensibility.EventStackItem"/> objects with the first item representing the current operation and
            the last item representing the originating operation.
            </value>
            <remarks>
            If an operation is performed inside an existing operation the <see cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.EventStack"/> can be used to access the
            event data associated with the existing operation. For example, if an event handler is automatically classifying <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>s as they
            are saved, the stack will contain the following items for the <see cref="T:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs"/>:
            <list type="number">
            <item><see cref="T:Tridion.ContentManager.ContentManagement.Component"/>, <see cref="T:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs"/></item>
            <item><see cref="T:Tridion.ContentManager.ContentManagement.Component"/>, <see cref="T:Tridion.ContentManager.Extensibility.Events.SaveEventArgs"/></item>
            </list>
            The subscribers to the <see cref="T:Tridion.ContentManager.Extensibility.Events.SaveEventArgs"/> will already have received events for <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Initiated"/>,
            while <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/> will be delivered after the classification operation has been completed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmEventArgs.Session">
            <summary>
            Gets the Session used to "inflate" TOM.NET objects.
            </summary>
            <remarks>
            Subclasses that have properties referring to TOM.NET object should not store these TOM.NET objects in their state.
            They should only store the Id, Id And Title (Link) or maybe even full Data Objects.
            This is because asynchronous events will use a copy of the event data (see <see cref="M:Tridion.ContentManager.Extensibility.TcmEventArgs.DeepCopy"/>), but will also use a different Session.
            However, this Session is not know at the time <see cref="M:Tridion.ContentManager.Extensibility.TcmEventArgs.DeepCopy"/> is called; it will be provided later using this property's setter.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CrudEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.CrudEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs">
            <summary>
            Represents event data for events related to deleting application data of an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.DeleteAllApplicationData"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs"/> instance.
            </summary>
            <param name="applicationId">The application identifier. May be <c>null</c> to indicate that all application-specific data is being deleted.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs.ApplicationId">
            <summary>
            Gets the application identifier for the application-specific data being deleted.
            </summary>
            <value>
            Can be <c>null</c> if the event is triggered by <see cref="M:Tridion.ContentManager.IdentifiableObject.DeleteAllApplicationData"/>. 
            </value>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs">
            <summary>
            Represents event data for events related to getting the Instance Data of a <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Schema.GetInstanceData(Tridion.ContentManager.ContentManagement.IContainer,Tridion.ContentManager.LoadFlags)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.#ctor(Tridion.ContentManager.ContentManagement.InstanceData,Tridion.ContentManager.LoadFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs"/> class. 
            </summary>
            <param name="instanceData">The instance data XML of the Schema.</param>
            <param name="loadFlags">The flags that specify how the Instance Data should be loaded.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.InstanceData">
            <summary>
            Gets the instance data of the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs.LoadFlags">
            <summary>
            Gets or sets the flags that specify how the Instance Data should be loaded.
            </summary>
            <remarks>
            If you do not specify <see cref="F:Tridion.ContentManager.LoadFlags.Expanded"/>, only the mandatory embedded schema fields
            will be expanded. Specifying <see cref="F:Tridion.ContentManager.LoadFlags.Expanded"/> will also expand embedded schema fields
            regardless if it is optional or not.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.PurgeOldVersionsEventArgs">
            <summary>
            Event args for PurgeOldVersionedItems process
            </summary>
            <seealso cref="M:Tridion.ContentManager.SystemManager.PurgeOldVersions(Tridion.ContentManager.PurgeOldVersionsInstruction)"/>
            <remarks>
            Provides <see cref="P:Tridion.ContentManager.Extensibility.Events.PurgeOldVersionsEventArgs.ResolvedVersionedItems"/> property, which contains versions which were selected for purging.
            This collection can be changed during the <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Initiated"/> phase.
            During the <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed"/> phase it contains list of versions, which were purged.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.PurgeOldVersionsEventArgs.#ctor(System.Collections.Generic.IList{Tridion.ContentManager.ContentManagement.VersionedItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.PurgeOldVersionsEventArgs"/> class.
            </summary>
            <param name="resolvedVersionedItems">List of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> selected for purging.</param>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.PurgeOldVersionsEventArgs.ResolvedVersionedItems">
            <summary>
            Gets or sets the Collection of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> on which purge process will run
            </summary>
            <value>
            Collection of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs">
            <summary>
            Represents event data for events related to saving application-specific data.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ApplicationData})"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ApplicationData})">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs"/> instance.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs.ApplicationDataCollection">
            <summary>
            Gets or sets the collection of application-specific data to be saved. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs">
            <summary>
            Represents event data for events related to loading application data of an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadAllApplicationData"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs"/> instance.
            </summary>
            <param name="applicationId">The application identifier. May be <c>null</c> to indicate that all application-specific data is being loaded.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.ApplicationId">
            <summary>
            Gets the application identifier for the application-specific data being loaded.
            </summary>
            <value>
            Can be <c>null</c> if the event is triggered by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadAllApplicationData"/>. 
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs.LoadedApplicationDataCollection">
            <summary>
            Gets or sets the <see cref="T:Tridion.ContentManager.ApplicationData"/> object which have been loaded.
            </summary>
            <value>
            The value is <c>null</c> in the <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Initiated"/> phase.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CustomizablePropertiesValidator">
            <summary>
            Contains and validates properties whose validation logic is user defined.
            Business objects that inherit from <see cref="T:Tridion.ContentManager.IdentifiableObject"/> use this class to indicate
            which properties are subject to user-defined validation logic.
            The user-defined types are: Title, FileExtension, FileName, FilePath, Directory. Only one property can be
            validated as Title and any number of properties can be validated against the rest of the types.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CustomizablePropertiesValidator.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CustomizablePropertiesValidator"/> class.
            </summary>
            <param name="itemType">Type of the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.CustomizablePropertiesValidator.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Tridion.ContentManager.CustomizablePropertiesValidator"/> class from being created and to support Xml serialization
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CustomizablePropertiesValidator.ToXml">
            <summary>
            Get an XML representation of the object as a Stream
            </summary>
            <returns>A Stream containing the (UTF-8 encoded) XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CustomizablePropertiesValidator.Validate">
            <summary>
            Validates the properties against user configurable XSD schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.Title">
            <summary>
            Gets or sets a value that will be validated against the Title type.
            </summary>
            <value>The title of the item</value>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.FileNames">
            <summary>
            Gets or sets values that will be validated as FileNames.
            </summary>
            <value>A collection of values that are going to be validated as FileNames.</value>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.Directories">
            <summary>
            Gets or sets values that will be validated as Directories.
            </summary>
            <value>A collection of values that are going to be validated as Directories.</value>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.FileExtensions">
            <summary>
            Gets or sets values that will be validated as FileExtensions.
            </summary>
            <value>A collection of values that are going to be validated as FileExtensions.</value>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.FilePaths">
            <summary>
            Gets or sets values that will be validated as FilePaths.
            </summary>
            <value>A collection of values that are going to be validated as FilePaths.</value>
        </member>
        <member name="P:Tridion.ContentManager.CustomizablePropertiesValidator.ItemType">
            <summary>
            Gets or sets the actual type of the Identifiable Object that is requesting the validation.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="T:Tridion.ContentManager.FilePathEntry">
            <summary>
            Represents the value of a property that is supposed to be validated against a user-defined FilePath type
            and the name of that property.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FilePathEntry.PropertyName">
            <summary>
            Gets or sets the name of the property that is being validated.
            If validation fails, this is the name of the property that will be included in the related <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FilePathEntry.FilePath">
            <summary>
            Gets or sets the value of the property that is being validated.
            The value must be a valid FilePath, according to the user-defined XSD.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.FileExtensionEntry">
            <summary>
            Represents the value of a property that is supposed to be validated against a user-defined FileExtension type
            and the name of that property.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FileExtensionEntry.PropertyName">
            <summary>
            Gets or sets the name of the property that is being validated.
            If validation fails, this is the name of the property that will be included in the related <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FileExtensionEntry.FileExtension">
            <summary>
            Gets or sets the value of the property that is being validated.
            The value must be a valid FileExtension, according to the user-defined XSD.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.FileNameEntry">
            <summary>
            Represents the value of a property that is supposed to be validated against a user-defined FileName type
            and the name of that property.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FileNameEntry.PropertyName">
            <summary>
            Gets or sets the name of the property that is being validated.
            If validation fails, this is the name of the property that will be included in the related <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.FileNameEntry.FileName">
            <summary>
            Gets or sets the value of the property that is being validated.
            The value must be a valid FileName, according to the user-defined XSD.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.DirectoryEntry">
            <summary>
            Represents the value of a property that is supposed to be validated against a user-defined Directory type
            and the name of that property.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.DirectoryEntry.PropertyName">
            <summary>
            Gets or sets the name of the property that is being validated.
            If validation fails, this is the name of the property that will be included in the related <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.DirectoryEntry.Directory">
            <summary>
            Gets or sets the value of the property that is being validated.
            The value must be a valid Directory, according to the user-defined XSD.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer">
            <summary>
            Represents a renderer within a configuration file.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> class.
            </summary>
            <param name="type">The class name responsible for the rendering.</param>
            <param name="assembly">The name of the assembly.</param>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer.Type">
            <summary>
            Gets and sets the type of the class responsible for the rendering.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer.Assembly">
            <summary>
            Gets and sets the assembly of that contains the Renderer
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers">
            <summary>
            Represents a collection of renderers within a configuration file.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/>.
            </summary>
            <returns>A new <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/>.
            </summary>
            <param name="renderer">Get this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/>.</param>
            <returns>An Object that acts as the key for the specified <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.Add(Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/> to a collection of <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/>.
            </summary>
            <param name="renderer">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to a collection of <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/>.
            </summary>
            <param name="renderer">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.Remove(Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer)">
            <summary>
            Removes a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/> from the collection of <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/>.
            </summary>
            <param name="renderer">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> at the specified index location.
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to remove.</param>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers"/> collection.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderers.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> at the specified index location. 
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> to get.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.Renderer"/> at the specified index.</returns>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration">
            <summary>
            Represents the rendering section within a configuration file.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.GetRenderBinaryPath">
            <summary>
            Returns the path where binaries are stored during rendering for preview.
            </summary>
            <returns>The path where binaries will be stored during rendering for preview.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.Cache">
            <summary>
            Gets or sets the cache settings
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.Mappings">
            <summary>
            Gets or sets the rendering mappings.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.RenderDcpInContextOfPage">
            <summary>
            Gets or sets a value indicating whether the legacy DynamicComponentPresentation is rendered in context of a Page.
            </summary>
            <remarks>
            This setting is used during publishing.
            If the legacy DynamicComponentPresentations is rendered in the context of a Page use this one 
            and don't render it later without the context of a Page.
            There are implementations that only publish pages with DynamicComponentPresentations and 
            don't publish the DynamicComponentPresentations separately (will fail if the legacy ComponentTemplate uses the Page object).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.PreviewPath">
            <summary>
            Gets or sets the path where binaries are stored during rendering for preview.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.Renderers">
            <summary>
            Gets the renderers for the specified item type and template type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.SectionName">
            <summary>
            Gets the section name to get the rendering configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping">
            <summary>
            Represents a mapping between an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>, <see cref="T:Tridion.ContentManager.CommunicationManagement.Template"/>and its renderer(s) within a configuration file.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping.#ctor(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.CommunicationManagement.Template)">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> class.
            </summary>
            <param name="item">Get the item type from the <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.</param>
            <param name="template">Type of the template.</param>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping.ItemType">
            <summary>
            Gets and sets the item type of the render mapping.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping.TemplateType">
            <summary>
            Gets and sets the template type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping.Renderers">
            <summary>
            Gets the renderers for the specified item type and template type.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings">
            <summary>
            Represents a collection of mappings between an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> and <see cref="T:Tridion.ContentManager.CommunicationManagement.Template"/> within a configuration file.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/>.
            </summary>
            <returns>A new <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/>.
            </summary>
            <param name="renderMapping">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to get.</param>
            <returns>An Object that acts as the key for the specified ResourceElement.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.Add(Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to the resolve mappings collection.
            </summary>
            <param name="renderMapping">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to a collection of <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings"/>.
            </summary>
            <param name="resource">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.Remove(Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping)">
            <summary>
            Removes a <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> from the collection.
            </summary>
            <param name="renderMapping">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> at the specified index location.
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to remove.</param>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.CollectionType">
            <summary>
            Gets the type of the render mappings collection.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMappings.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> at the specified index location. 
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> to get.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderMapping"/> at the specified index.</returns>
        </member>
        <member name="T:Tridion.ContentManager.PurgeOldVersionsInstruction">
            <summary>
            Represents instruction needed for purging ol versions
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.PurgeOldVersionsInstruction.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.PurgeOldVersionsInstruction"/> class.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.PurgeOldVersionsInstruction.#ctor(Tridion.ContentManager.Data.PurgeOldVersionsInstructionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.PurgeOldVersionsInstruction"/> class.
            </summary>
            <param name="state">The state to pre-load this instance with.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.VersionsToKeep">
            <summary>
            Gets or sets the number of versions which we must keep.
            </summary>
            <value>
            The versions count to keep.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.KeepVersionsModifiedAfter">
            <summary>
            Gets or sets date and keep versions which are going after this date.
            </summary>
            <value>
            Keep versions which are going after this date
            </value>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.KeepVersionsWithinDaysBeforeLastCheckIn">
            <summary>
            Gets or sets days within last modification to keep versions. 
            </summary>
            <value>
            Days within last modification to keep versions. 
            </value>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.Recursive">
            <summary>
            Gets or sets mode of search in organizational items. If set to <c>true</c> the search will occur in nested organizational items.
            </summary>
            <value>
              <c>true</c> if recursive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.Containers">
            <summary>
            Gets or sets publications and organizational items in which we must process purging process
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.PurgeOldVersionsInstruction.MaxResolvedVersionedItemsCount">
            <summary>
             Gets or sets the max number of versioned items which we can select for purging during one iteration.
            </summary>
            <value>
            The max number of versioned items which we can select for purging.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.Security.GroupMembersFilter">
            <summary>
            A Filter that can be used to constrain a list of trustees in a <c>Group</c>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembersFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupMembersFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembersFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupMembersFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembersFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupMembersFilter"/> class based on a copy of an other filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembersFilter.#ctor(Tridion.ContentManager.Data.Security.GroupMembersFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupMembersFilter"/> class based on the given filter data. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembersFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.Security.GroupMembersFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.GroupMembersFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.SecurityDescriptor">
            <summary>
            The SecurityDescriptor is a grouping of all the Rights and Permissions (allow and denies) for the trustees.
            A SecurityDescriptor is specific to a user and a context (<c>IdentifiableObject</c>).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.SecurityDescriptor.#ctor(Tridion.ContentManager.Data.Security.SecurityDescriptorData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.SecurityDescriptor"/> class based on a Data Object.
            </summary>
            <param name="dataObject">The Data Object.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.SecurityDescriptor.HasAccess(Tridion.ContentManager.Security.Rights)">
            <summary>
            Validates if the <c>SecurityDescriptor</c> has the specified Right.
            </summary>
            <param name="rights">The Rights to check.</param>
            <returns><c>true</c> if the user has the specified Rights in the <c>SecurityDescriptor</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.SecurityDescriptor.HasAccess(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Validates if the <c>SecurityDescriptor</c> has the specified Permission.
            </summary>
            <param name="permissions">The Permissions to check.</param>
            <returns><c>true</c> if the user has the specified Permissions in the <c>SecurityDescriptor</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.SecurityDescriptor.HasAccess(Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Validates if the <c>SecurityDescriptor</c> has the specified Rights and Permissions.
            </summary>
            <param name="permissions">The Permissions to check.</param>
            <param name="rights">The Rights to check.</param>
            <returns><c>true</c> if the user has the specified Rights and Permissions in the <c>SecurityDescriptor</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.SecurityDescriptor.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.SecurityDescriptor.Rights">
            <summary>
            Gets the Rights of an Identifiable object for a trustee.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.SecurityDescriptor.Permissions">
            <summary>
            Gets the Permissions of an Identifiable object for a trustee.
            </summary>
            <remarks>
            For root Organizational Items the value of the <see cref="P:Tridion.ContentManager.Security.SecurityDescriptor.Permissions"/> is always <see cref="F:Tridion.ContentManager.Security.Permissions.None"/>.
            Use the <see cref="P:Tridion.ContentManager.Security.SecurityDescriptor.Rights"/> to check if the user can read, write, localize or delete the item.
            Reading the item requires Publication access.
            Writing, deleting, localizing and un-localizing of root Organizational items requires the following rights.
            <list type="table">
                <item><term>Folder</term><description>Publication and Folder management</description></item>
                <item><term>Structure Group</term><description>Publication and Structure Group management</description></item>
                <item><term>Category</term><description>Category management</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.SecurityDescriptor.CurrentState">
            <summary>
            Gets the Current State as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter">
            <summary>
            Represents a Filter for list of the user's WorkItems.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.WorkflowManagerFilter">
            <summary>
            Abstract base class for filters on workflow related lists
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManagerFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowManagerFilter"/> class.
            </summary>
            <param name="businessObjectType">The Type of the business object (TOM.NET object).</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManagerFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowManagerFilter"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManagerFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowManagerFilter"/> class based on a copy of the given Filter.
            </summary>
            <param name="filter">The filter.</param>
            <param name="session">The session.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManagerFilter.#ctor(Tridion.ContentManager.Data.Workflow.WorkflowManagerFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowManagerFilter"/> class based on a copy of the given data object.
            </summary>
            <param name="filterData">The data object of the filter.</param>
            <param name="session">The session.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManagerFilter.GetManagerType">
            <summary>
            Gets the Type of class that contains the list method of this filter.
            </summary>
            <returns>
            Type of the class containing the list method.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.UserWorkItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.UserWorkItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.UserWorkItemsFilter.#ctor(Tridion.ContentManager.Data.Workflow.UserWorkItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.UserWorkItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ContextRepository">
            <summary>
            Gets or sets a condition on the context Repository. 
            </summary>
            <value>
            When <c>null</c> is specified the condition is not applied.
            </value>
            <remarks>
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ContextRepository"/> value, so only items in that <c>Repository</c> will be included in the result.
            This condition maps to the <c>PublicationURI</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState"/> condition that will constrain Work Items to those that are in Activity State being set.
            </summary>
            <value>A value from the <see cref="T:Tridion.ContentManager.Workflow.ActivityState"/> enumeration or <c>null</c> if the condition is not specified.</value>
            <remarks>
            When specified, the results are constrained to Activity Instances either assigned to or performed by the current user. 
            If set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> then returns Work Items assigned to current user.
            If set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/> then returns Work Items that are in-progress by the current user.
            If set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/> then returns Work Items suspended during execution 
            and the current user is the last performer of those Work Items.  
            Returns empty list if <see cref="T:Tridion.ContentManager.Workflow.ActivityState"/> set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Finished"/> 
            because the Work Item is not available anymore once the activity is finished.
            </remarks>  
        </member>
        <member name="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.Subject">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.Subject"/> condition to constrain the list by specific workflow item.
            </summary>
            <remarks>
            When specified, the result will include only Work Items representing specific workflow item.
            If the value is <c>null</c>, the condition is not applied.
            This condition maps to the <c>ItemURI</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ApplicationData">
            <summary>
            Represents application-specific data which can be stored system-wide (global) or associated with any <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.SystemManager.LoadGlobalApplicationData(System.String)"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.SaveGlobalApplicationData(Tridion.ContentManager.ApplicationData)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)"/>
        </member>
        <member name="F:Tridion.ContentManager.ApplicationData._maxApplicationIdLength">
            <summary>
            The maximum length in characters of the <see cref="P:Tridion.ContentManager.ApplicationData.ApplicationId"/> property.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ApplicationData._maxTypeIdLength">
            <summary>
            The maximum length in characters of the <see cref="P:Tridion.ContentManager.ApplicationData.TypeId"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ApplicationData"/> class. 
            </summary>
            <param name="applicationId">
            The Application Identifier. This Identifier must be unique across all applications. Consider using a GUID or URI.
            </param>
            <remarks>
            The <paramref name="applicationId"/> might be case-sensitive or case-insensitive depending upon system and database configuration. Hence, it is wise to consider this value as case-sensitive, and not create two different Ids differing only in their case.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.#ctor(Tridion.ContentManager.Data.ApplicationData)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.ApplicationData"/> instance based on a Data Object.
            </summary>
            <param name="dataObject">The Data Object.</param>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns><c>true</c> if the given object is an <see cref="T:Tridion.ContentManager.ApplicationData"/> instance and it has the same properties as this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code, which is based on all the properties.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.System#ICloneable#Clone">
            <summary>
            Creates a deep copy of this object.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.op_Equality(Tridion.ContentManager.ApplicationData,Tridion.ContentManager.ApplicationData)">
            <summary>
            Equality comparison operator.
            </summary>
            <param name="lhs">The left-hand-side of the comparison.</param>
            <param name="rhs">The right-hand-side of the comparison.</param>
            <returns><c>true</c> if the two <see cref="T:Tridion.ContentManager.ApplicationData"/> instances have identical properties.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ApplicationData.op_Inequality(Tridion.ContentManager.ApplicationData,Tridion.ContentManager.ApplicationData)">
            <summary>
            Inequality comparison operator.
            </summary>
            <param name="lhs">The left-hand-side of the comparison.</param>
            <param name="rhs">The right-hand-side of the comparison.</param>
            <returns><c>false</c> if the two <see cref="T:Tridion.ContentManager.ApplicationData"/> instances have identical properties.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.ApplicationId">
            <summary>
            Gets the Application Identifier.
            </summary>
            <remarks>
            This identifier must be unique across all applications. Consider using a GUID or URI.
            <para>This value might be case-sensitive or case-insensitive depending upon system and database configuration. Hence, it is wise to consider this value as case-sensitive, and not create two different Ids differing only in their case.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.TypeId">
            <summary>
            Gets or sets the type identifier which can be used to deserialize the binary <see cref="P:Tridion.ContentManager.ApplicationData.Data"/> into a structured data type.
            </summary>
            <remarks>
            The type identifier can be any string. It doesn't have meaning to the Content Manager system; it's merely intended to help applications
            store and retrieve application-specific data using structured types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.Data">
            <summary>
            Gets or sets the binary data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.OwningRepositoryId">
            <summary>
            Gets the Id of the repository which owns this application data. 
            </summary>
            <remarks>
            The owning publication of an application data is either the context publication in which it is being read, or the owning publication of the subject item to which it is attached.
            <para>The value of this property will be <c>tcm:0-0-0</c> for <see cref="T:Tridion.ContentManager.ApplicationData"/> attached to all Non Repository Local Objects and Global Application Data.</para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ApplicationData.IsInherited"/>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.IsInherited">
            <summary>
            Gets the status informing whether this application data is inherited from parent item.
            </summary>
            <remarks>
            The value of this property will be <c>false</c> for <see cref="T:Tridion.ContentManager.ApplicationData"/> attached to all Non Repository Local Objects and Global Application Data.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ApplicationData.OwningRepositoryId"/>
        </member>
        <member name="P:Tridion.ContentManager.ApplicationData.CurrentState">
            <summary>
            Gets the Current State as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.Condition">
            <summary>
            Abstract base class for Conditions used in a Target Group definition.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.Condition"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.#ctor(Tridion.ContentManager.Data.AudienceManagement.ConditionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.Condition"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.AudienceManagement.Condition.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.Validate">
            <summary>
            Validates custom properties
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.Condition.Negate">
            <summary>
            Gets or sets whether the condition should be negated.
            </summary>
            <remarks>
            If a condition is negated, it means that it matches if the condition is NOT met.
            For example, a negated TargetGroupCondition matched on people that are NOT in the Target Group.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.Condition.Session">
            <summary>
            Gets or sets the Session in which the object was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.Condition.CurrentState">
            <summary>
            Gets or sets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition">
            <summary>
            Represents a condition on a Customer Characteristic (a named value in the user profile).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition"/> class for a new CustomerCharacteristicCondition.
            </summary>
            <param name="name">
            The name of the Customer Characteristic.
            </param>
            <param name="value">
            The value to compare the Customer Characteristic's value against.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Validate">
            <summary>
            Validates custom properties
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Name">
            <summary>
            Gets or sets the name of the Customer Characteristic.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Value">
            <summary>
            Gets or sets the value to compare the Customer Characteristic's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator"/>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator">
            <summary>
            Gets or sets the operator used for comparing the Customer Characteristic's value against the <see cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Value"/> specified in the condition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.CurrentState">
            <summary>
            Gets or sets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TargetGroup">
            <summary>
            Represents a Target Group: used to target an audience based on certain conditions
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject">
            <summary>
            Abstract base class for repository-local objects: objects that reside in a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.LocationInfoSection">
            <summary>The XML element name of the Location Info section</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.BlueprintInfoSection">
            <summary>The XML element name of the Blueprint Info section</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.RepositoryLocalObject._regex">
            <summary>
            The regex pattern will search for several names groups in the XPath string from R5 ResolveKeywords XML.
            First it will match the tcm:Content or tcm:Metadata string and put that match in a named group "isMetaDataField"
            Second it will match the XPath query, without the leading tcm:Content or tcm:Metadata, and it will cut off the trailing xlink title attribute and closing ']' and put that match in a named group "xPath"
            Third it will match the Fieldname and put that match in a named group "fieldName"
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new repository-local object.
            </summary>
            <param name="session">The Session in which the RepositoryLocalObject should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> in which the RepositoryLocalObject should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing repository-local object.
            </summary>
            <param name="id">The identifier (TCM URI) of the RepositoryLocalObject.</param>
            <param name="session">The Session in which the RepositoryLocalObject should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.HasLocalCopies">
            <summary>
            Determines if this item has local copies in child Publications
            </summary>
            <returns><c>True</c> if the item has local copies in child Publications, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetUsedKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords used by this object.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>. 
            The <c>ItemType</c> condition is forced to Keyword.</param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetUsedKeywords">
            <summary>
            Get a list of Keywords used by this object.
            </summary>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetUsedKeywords(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get a list of Keywords used by this object.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords. The <c>ItemType</c> condition is forced to Keyword.</param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListUsedKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords used by this object as XML.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>. 
            The <c>ItemType</c> condition is forced to Keyword.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListUsedKeywords">
            <summary>
            Get a list of Keywords used by this object as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListUsedKeywords(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get a list of Keywords used by this object as XML.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords. The <c>ItemType</c> condition is forced to Keyword.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetBluePrintChain(Tridion.ContentManager.ContentManagement.BluePrintChainFilter)">
            <summary>
            Retrieves a list of items related to this item according to the BluePrinting rules.
            </summary>
            <param name="filter">A filter object that determines the direction of the item chain (i.e. up to the top-level parent item, or down to the bottom-level child item).</param>
            <returns>A list of items related to this item according to the BluePrinting rules.</returns>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">when this method is called on a shared item</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetBluePrintChain">
            <summary>
            Retrieves a list of items related to this item according to the BluePrinting rules.
            </summary>
            <returns>A list of items related to this item according to the BluePrinting rules.</returns>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">when this method is called on a shared item</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListBluePrintChain">
            <summary>
            Retrieves a list of items related to this item according to the BluePrinting rules.
            </summary>
            <returns>A list of items related to this item according to the BluePrinting rules.</returns>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">when this method is called on a shared item</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListBluePrintChain(Tridion.ContentManager.ContentManagement.BluePrintChainFilter)">
            <summary>
            Retrieves a list of items related to this item according to the BluePrinting rules.
            </summary>
            <param name="filter">A filter object that determines the direction of the item chain (i.e. up to the top-level parent item, or down to the bottom-level child item).</param>
            <returns>A list of items related to this item according to the BluePrinting rules.</returns>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">when this method is called on a shared item</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Localize">
            <summary>
            Localizes the item in the context Publication. This means that a local copy of the item is created in the context Publication.
            </summary>
            <remarks>
            Through Blueprinting, an item can be shared in multiple Publications. 
            However, a shared item can only be changed in its owning Publication. 
            In order to change the item in another (child) Publication, it must first be localized in that Publication. 
            Localizing creates a separate version of the item in the child Publication (a so-called local copy). 
            Note that some item types have restrictions on what can be changed on a local copy. 
            For example, for Schemas, only the Labels (i.e. Descriptions) can be changed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnLocalize">
            <summary>
            Un-localizes the item in the context Publication. This means that the local copy is deleted and the item becomes a shared item again.
            </summary>
            <remarks>
            If there's no longer a need for a separate version of the item in a child publication, it can be un-localized. 
            That way, it becomes a shared item again and therefore needn't be maintained separately.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Copy(Tridion.ContentManager.ContentManagement.OrganizationalItem,System.Boolean)">
            <summary>
            Copies the item into the same or new Organizational Item.
            </summary>
            <param name="destination">The <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> where the item's copy should be created.</param>
            <param name="makeUnique">Specifies whether a unique title should be generated if an item with the same title already exists in the destination.</param>
            <returns>A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> representing the item's copy.</returns>
            <remarks>
            <para>
            When copying a keyword, the whole taxonomy branch is copied into the same or different category. 
            Copying a keyword into another keyword can not be done directly.
            It can be achieved by first copying it to the same category and then modifying the <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/> property on the copied instance.
            Copying of category items is currently not supported.
            </para>
            <para>When copying a <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/>, the copy event will be delivered only for item itself and not for child items.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)">
            <summary>
            Moves the item to the specified Organizational Item.
            </summary>
            <param name="destination">The target Organizational Item where the item will be moved to.</param>
            <remarks>
            <para>Moving Keywords between different Categories is not allowed.</para>
            <para>Changing the location of a Keyword in a Taxonomy cannot be achieved by using the Move method. Use
            its <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/> property instead.</para>
            <para>Moving Categories is not supported.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Classify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Classifies the item by adding the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            <para>
                This function is intended to add one or more Keywords to all the Keyword fields of this item (content and/or metadata).
                Note that classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </para>
            <para>
                Depending on the way this object was loaded, different extra information can be present in the return value.
                Currently the only option supported is <see cref="F:Tridion.ContentManager.LoadFlags.WebDavUrls"/> which sets the WebDavUrl properties
                of the Category and the Keywords contained in the result.
            </para>
            </remarks>
            <param name="keywords">A collection of Keywords to classify the item. The collection can not be empty.</param>
            <returns>A collection of <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> objects that contains information about all fields, where the requested keywords matched and were applied.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Un-classifies the item by removing the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            <para>
                This function is intended to remove one or more Keywords from all the Keyword fields of this item (content and/or metadata).
                Note that classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </para>
            <para>
                Depending on the way this object was loaded, different extra information can be present in the return value.
                Currently the only option supported is <see cref="F:Tridion.ContentManager.LoadFlags.WebDavUrls"/> which sets the WebDavUrl properties
                of the Category and the Keywords contained in the result.
            </para>
            </remarks>
            <param name="keywords">A collection of Keywords to un-classify (remove from) the item. The collection can not be empty.</param>
            <returns>A collection of <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> objects that contains information about all fields, where the requested keywords matched and were removed.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ReClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword},System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Reclassifies the item by removing the specified Keyword classification(s) and replacing them with others specified (if valid according to Schema definition).
            </summary>
            <remarks>
            <para>
                This function is intended to replace one or more Keywords in all the Keyword fields of this item (content and/or metadata).
                Note that classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </para>
            <para>
                Depending on the way this object was loaded, different extra information can be present in the return value.
                Currently the only option supported is <see cref="F:Tridion.ContentManager.LoadFlags.WebDavUrls"/> which sets the WebDavUrl properties
                of the Category and the Keywords contained in the result.
            </para>
            </remarks>
            <param name="keywordsToRemove">A collection of Keywords to remove from the item. The collection can not be empty.</param>
            <param name="keywordsToAdd">A collection of Keywords to add to the item. The collection can not be empty.</param>
            <returns>A collection of <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> objects that contains information about all fields, where the requested keywords matched and were removed or added.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetAncestors">
            <summary>
            Gets a list of Organizational Items which are the ancestor of this Repository Local Object.
            </summary>
            <returns>A list of Organizational Items which are the ancestor of this Repository Local Object.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestors"/>
            <remarks>
            <list type="Bullet">
                <item>Keyword returns only its Category. It doesn't return its ancestors in a Taxonomy.</item>
                <item><see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> doesn't have an Organizational Item so the list of ancestors is empty.</item>
                <item>The order of the ancestors starts with the parent of the subject followed by its parent all the way to root Organizational Item of the Publication.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetAncestors(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)">
            <summary>
            Gets a list of Organizational Items which are the ancestor of this Repository Local Object.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>A list of Organizational Items which are the ancestor of this Repository Local Object.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestors(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)"/>
            <remarks>
            <list type="Bullet">
                <item>Keyword returns only its Category. It doesn't return its ancestors in a Taxonomy.</item>
                <item><see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> doesn't have an Organizational Item so the list of ancestors is empty.</item>
                <item>The order of the ancestors starts with the parent of the subject followed by its parent all the way to root Organizational Item of the Publication.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestors">
            <summary>
            Gets a list of Organizational Items which are the ancestor of this Repository Local Object as XML.
            </summary>
            <returns>A list of Organizational Items which are the ancestor of this Repository Local Object as XML.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetAncestors"/>
            <remarks>
            <list type="Bullet">
                <item>Keyword returns only its Category. It doesn't return its ancestors in a Taxonomy.</item>
                <item><see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> doesn't have an Organizational Item so the list of ancestors is empty.</item>
                <item>The order of the ancestors starts with the parent of the subject followed by its parent all the way to root Organizational Item of the Publication.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestors(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)">
            <summary>
            Gets a list of Organizational Items which are the ancestor of this Repository Local Object as XML.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>A list of Organizational Items which are the ancestor this Repository Local Object as XML.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetAncestors(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)"/>
            <remarks>
            <list type="Bullet">
                <item>Keyword returns only its Category. It doesn't return its ancestors in a Taxonomy.</item>
                <item><see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> doesn't have an Organizational Item so the list of ancestors is empty.</item>
                <item>The order of the ancestors starts with the parent of the subject followed by its parent all the way to root Organizational Item of the Publication.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnDeleted(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, after going to the DAL.
            </summary>
            <remarks>Updates the search index.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
                <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
                <item><description>the linked item does not exist</description></item>
                <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetFallbackItem">
            <summary>
            Gets parent blueprint item. Throws <see cref="T:Tridion.ContentManager.InvalidActionException"/> if item doesn't have a blueprint parent.
            </summary>        
            <returns>A <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> object representing blueprint parent item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnClassifying(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Validates that this item can be classified. Called by RepositoryLocalObject.Classify().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnClassified(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Post-processing for RepositoryLocalObject.Classify() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnUnClassifying(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Validates that this item can be unclassified. Called by RepositoryLocalObject.UnClassify().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnUnClassified(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Post-processing for RepositoryLocalObject.UnClassify() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnReClassifying(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Validates that this item can be reclassified. Called by RepositoryLocalObject.ReClassify().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnReClassified(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Post-processing for RepositoryLocalObject.ReClassify() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetParentId">
            <summary>
            Get the identifier (TCM URI) of the "parent" item: the organizational item that contains this object.
            </summary>
            <returns>a TcmUri object representing the parent item's identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertSystemRepository(Tridion.ContentManager.TcmUri)">
            <summary>
            Throws an exception if the organizational item that contains this object is System Repository
            </summary>
            <param name="uri">The parent item's identifier</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of used items as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of used items in the XML.</param>
            <returns>A list of used items in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> for a description of supported condition.
            </param>
            <returns><c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.</returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> 
            if you are only interested in finding out if there are using items 
            and not which items are using this item.
            When the filter property IncludeLocalCopies is true, it will also return true if there are local copies of this item.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ValidateSystemConstraints">
            <summary>
            Validates system constraints before this object is saved.
            </summary>
            <remarks>
            The word system here is used to imply that these constraints are hard-coded and not possible to be altered by the user.
            For constraints that the user can alter by means of XSD, see <see cref="M:Tridion.ContentManager.IdentifiableObject.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.FillPathInfo(Tridion.ContentManager.Data.PathInfo)">
            <summary>
            Sets additional properties on a <see cref="T:Tridion.ContentManager.Data.PathInfo"/> instance.
            </summary>
            <param name="pathInfo">A PathInfo object on which to set path information to construct a WebDAV URL.</param>
            <remarks>This method can be overridden in a derived class to set additional properties on the <see cref="T:Tridion.ContentManager.Data.PathInfo"/> object. By default,
            the <see cref="P:Tridion.ContentManager.Data.PathInfo.FullPath"/> and <see cref="P:Tridion.ContentManager.Data.PathInfo.ItemType"/> properties are set.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetContainerType">
            <summary>
            Gets the type of the container that can hold this object.
            </summary>
            <returns>The Type of the OrganizationalItem that can hold this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetSecurityPermissions(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for this <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.This method validate <see cref="T:Tridion.ContentManager.Security.Permissions"/> represented by <paramref name="demandingPermissions"/> and returns appliable <see cref="T:Tridion.ContentManager.Security.Permissions"/>.
            </summary>
            <param name="demandingPermissions"><see cref="T:Tridion.ContentManager.Security.Permissions"/> that are depended by a particular operation, for example, Localize, Unlocalize and so on .</param>
            <returns><see cref="T:Tridion.ContentManager.Security.Permissions"/> that must be available to perform a particular operation</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnLocalized(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Post-processing for Localize() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
             Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
             Called by RepositoryLocalObject.UnLocalize().
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnUnLocalized(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
            Post-processing for UnLocalize() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnCopying(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by Copy method, before going to the BL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnCopied(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by Copy method, after going to the BL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AddUniqueProperties(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AddNonLocalizableProperties(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds names of the properties that must not be modified in the localized item to the list.
            </summary>
            <param name="propertyNames">List of names of properties that must not be modified.</param>
            <remarks>The list is used in the AssertNonLocalalizableProperties() method.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertValidRootContentElements(System.Xml.Schema.XmlSchemaSet,System.String)">
            <summary>
            Verify whether the Root Element in Xml Content is Valid according to the <paramref name="xmlSchemaSet"/>
            </summary>
            <param name="xmlSchemaSet"><see cref="T:System.Xml.Schema.XmlSchemaSet"/> used to verify the XmlContent</param>
            <param name="rootTargetNamespace">string representing Target Namespace of the Root Elements.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ValidateXml">
            <summary>
            Validates all the custom Xml Properties.
            </summary>
            <remarks>
            ValidateXml validates following : 
            <para>
                <list type="Bullet">
                        <item>
                                Validate the XML against XML Schema Definition Language (XSD) schemas.
                                Schemas that are used for Validation are retrieved from <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> of Component. 
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)"/>
                        </item>
                        <item>
                                Validates all the xLink reference in Xml. If there is any Component Link inside Xml, then it 
                                also checks whether it is valid component for this Component. For example, it checks Linktype,
                                AllowMultimediaLinks,AllowedTargetSchemas values in Schema to verify valid component link.
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXLinks(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})"/>
                        </item>
                        <item>
                                For every Keyword , it adds xlink:href by using PSVI. 
                                <see cref="T:System.Xml.Schema.IXmlSchemaInfo"/>
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.PostProcessPSVI(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)"/>
                        </item>
                </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.PropagateChangesToLocalCopies(System.Collections.Generic.IList{System.String})">
            <summary>
            Propagates changes in this item to its blueprint local copies.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.SetNonLocalizablePropertiesToPropagate(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets non-localizable properties on the specified <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> of a local copy to reflect changes in this (parent) item.
            </summary>
            <param name="localCopyData">Data object of a local copy.</param>
            <param name="propertiesToSet">Names of properties to set.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnMoving(Tridion.ContentManager.Extensibility.Events.MoveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OnMoved(Tridion.ContentManager.Extensibility.Events.MoveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetConflicts(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets a collection of objects that conflict with the specified <paramref name="values"/>.
            </summary>
            <param name="values">A collection of property/value pairs to check for uniqueness.</param>
            <returns>An enumerable of <see cref="T:Tridion.ContentManager.Data.UniquenessConflictData"/> objects
            that conflict with the specified <paramref name="values"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.InvalidateCategoriesXsd">
            <summary>
            Invalidate the Categories XSD from Repository
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertNoUniquenessConflicts(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String})">
            <summary>
            Checks that specified values are unique in parent organizational item.
            Throws <see cref="T:Tridion.ContentManager.InvalidActionException"/> if the values are not unique.
            </summary>
            <param name="propertiesToCheck">Properties in this dictionary are checked for uniqueness.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertPropertiesNotChanged(System.Collections.Generic.IList{System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Asserts that the properties specified in the properties list are not modified.
            </summary>
            <param name="propertyNames">List of names of properties that must not be modified.</param>
            <param name="oldData">A <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> to compare the CurrentState to.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertValidContainer">
            <summary>
            Asserts that the actual OrganizationalItem is a valid container for the current item.
            </summary>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">
                Throws if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> can not manage this RepositoryLocalObject.
            </exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertValidContainer(Tridion.ContentManager.ContentManagement.IContainer)">
            <summary>
            Asserts that the specified container is a valid container for the current item.
            </summary>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">
                Throws if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> can not manage this RepositoryLocalObject.
            </exception>
            <param name="container">The destination which will be checked</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetPublishInfo">
            <summary>
            Gets publish information for the item.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.Publishing.PublishInfoData"/> object that contains publish information, otherwise <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertValidDestinationForCopyOrMove(Tridion.ContentManager.ContentManagement.IContainer)">
            <summary>
            Asserts that the destination can contain the Repository Local-Object being copied or moved.
            </summary>
            <param name="destination">The destination which will be checked</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.AssertIsNotPublishedInAnyContext">
            <summary>
            Asserts that the item is not published in any context.
            </summary>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The action is not allowed because the item was published.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ParseR5ResolvedKeywordsXml(System.String)">
            <summary>
            Creates the <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> based on R5 XML when Classifying, ReClassifying or UnClassifying.
            </summary>
            <param name="xmlRepresentation">The R5 XML representation of the ResolvedKeywords.</param>
            <returns>The <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> object that is constructed from the <paramref name="xmlRepresentation"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestorsStream(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)">
            <summary>
            Gets a list of Organizational Items which are the ancestor of this Repository Local Object as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter"/> that constraints the list of Organizational Items in the XML.</param>
            <returns>A list of Organizational Items which are the ancestor of this Repository Local Object in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListAncestorsData(Tridion.ContentManager.ContentManagement.OrganizationalItemAncestorsFilter)">
            <summary>
            Gets list of Organizational Items which are the ancestor of this Repository Local Object constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData"/> objects.</param>
            <returns>A list of Organizational Items which are the ancestor of this Repository Local Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.PostProcessClassificationResults(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.ClassificationDetail})">
            <summary>
            Processes the results of a classify (or unclassify/reclassify) operation.
            </summary>
            <param name="classificationResults">The classification results.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.SetBinaryContent(Tridion.ContentManager.ContentManagement.BinaryContent)">
            <summary>
            Sets binary content for the item that supports it.
            </summary>
            <param name="binaryContent">Binary content object to process.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ContextRepository">
            <summary>
            Get the context Repository: the Repository in which the object has been retrieved.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OwningRepository"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OwningRepository">
            <summary>
            Get the "owning" Repository: the Repository in which the item physically resides.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ContextRepository"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem">
            <summary>
            Get the Organizational Item that contains this object.
            </summary>
            <value>An Organizanal Item object or <c>null</c> if this object is a root Organizational Item.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Path">
            <summary>
            Get the full path to the item (excluding the item's own title).
            </summary>
            <value>A string containing the full path, which is formed by concatenating the organizational item titles, starting at the Publication (separated by backslash characters).</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.WebDavUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.WebDavUrl">
            <summary>
            Get the WebDAV URL of the item.
            </summary>
            <value>A string containing the WebDAV URL or an empty string if WebDAV is not enabled or the item cannot be exposed through WebDAV.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Path"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.IsShared">
            <summary>
            Determine if the item is shared in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.IsLocalized">
            <summary>
            Determine if the item is localized in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Creator">
            <summary>
            Get the user who created this object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.MetadataSchema">
            <summary>
            Get or set the Schema for the (custom) metadata.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/>) or <c>null</c> if the object has no custom metadata.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata">
            <summary>
            Get or set the (custom) metadata as XML.
            </summary>
            <value>
            The root element of the metadata XML or <c>null</c> if there is no custom metadata.
            </value>
            <remarks>
            This property provides low-level access to the metadata XML.
            It is also possible to access the metadata through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single metadata field value with the ItemFields API:
            <code>
            RepositoryLocalObject myObject = (RepositoryLocalObject)mySession.GetObject("tcm:1-3-64");
            ItemFields metadataFields = new ItemFields(myObject.Metadata, myObject.MetadataSchema);
            TextField myTextField = (TextField)metadataFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.MetadataSchema"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.IsPublishedInContext">
            <summary>
            Gets a value indicating whether the object is published in the context Publication.
            </summary>
            <remarks>
            More extensive Publish Info can be retrieved from the PublishEngine.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroup"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(Tridion.ContentManager.Data.AudienceManagement.TargetGroupData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroup"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroup"/> class for a new Target Group.
            </summary>
            <param name="session">
            The Session in which the Target Group should be created.
            </param>
            <param name="parentId">
            The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Target Group should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroup"/> class for an existing Target Group.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Target Group.
            </param>
            <param name="session">
            The Session in which the Target Group should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroup"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the TargetGroup.
            </param>
            <param name="session">
            The Session in which the TargetGroup should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
             Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
             Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnClassifying(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Validates that this item can be classified. Called by RepositoryLocalObject.Classify().
            Classification is not supported for TargetGroup.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnUnClassifying(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Validates that this item can be unclassified. Called by RepositoryLocalObject.UnClassify().
            Classification is not supported for TargetGroup.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnReClassifying(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Validates that this item can be reclassified. Called by RepositoryLocalObject.ReClassify().
            Classification is not supported for TargetGroup.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.ValidateEnumProperties">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/> when saving via the legacy BL.
            </summary>
            <remarks>
            This method validates enumeration properties for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is saved.
            It is used only when saving through legacy BL. After migrating the saving operations, this validation should be moved to the appropriate <see cref="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/> methods.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.GetContainerType">
            <summary>
            Gets the type of the container that can hold this TargetGroup.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this TargetGroup.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.AudienceManagement.TargetGroup.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.AudienceManagement.TargetGroup.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.AudienceManagement.TargetGroup.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Description">
            <summary>
            Gets or sets the description of the Target Group
            </summary>
            <remarks>
            The Description has no special meaning to the system. It can be used to explain
            the purpose of the Target Group to users.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Target Group cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Metadata">
            <summary>
            Gets or sets the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Target Group cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Conditions">
            <summary>
            Gets access to the conditions that define the Target Group
            </summary>
            <value>A list of Condition-derived objects. This is a connected collection: changes to the collection are reflected in the state of the Target Group.</value>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TargetGroupCondition">
            <summary>
            Represents a condition on "membership" of a Target Group.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.#ctor(Tridion.ContentManager.AudienceManagement.TargetGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroupCondition"/> class. 
            </summary>
            <param name="targetGroup">
            The Target Group to check "membership" against.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.Validate">
            <summary>
            Validates custom properties
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.TargetGroup">
            <summary>
            Gets or sets the Target Group to check "membership" against.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.CurrentState">
            <summary>
            Gets or sets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition">
            <summary>
            Represents a condition on the value of a Tracking Key.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.#ctor(Tridion.ContentManager.ContentManagement.Keyword)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition"/> class for a new TrackingKeyCondition.
            </summary>
            <param name="keyword">
            The Keyword on which the Tracking Key is based.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Validate">
            <summary>
            Validates custom properties
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Keyword">
            <summary>
            Gets or sets the Keyword on which the Tracking Key is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Value">
            <summary>
            Gets or sets the value to compare the Tracking Key's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator"/>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator">
            <summary>
            Gets or sets the operator used for comparing the Tracking Key's value against the <see cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Value"/> specified in the condition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.CurrentState">
            <summary>
            Gets or sets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter">
            <summary>
            A Filter that can be used to constrain a list of Publications.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter">
            <summary>
            A Filter that can be used to constrain a list of Repositories.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoriesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoriesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoriesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.RepositoriesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoriesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoriesFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoriesFilter.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.Data.ContentManagement.LocationInfo.WebDavUrl"/> or XML attribute <c>URL</c> is set in the returned list. 
            </summary>
            <value>The value is <c>null</c> means <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to true, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoriesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PublicationsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.PublicationTypeName">
            <summary>
            Only get publications with the specified type. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>When specified, the results are constrained by the specified publication type. 
            For example if the value is set to "Web", only publications with such type will be included in the result.
            This condition maps to the <c>PublicationType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter">
            <summary>
            A Filter that can be used to constrain a list of Publication Targets.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PublicationTargetsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/> class.  based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.PublicationTargetsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget">
            <summary>
            Abstract base class for classes that represent a target for publishing: Target Type and Publication Target.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.#ctor(System.Type,System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget"/> class used internally for registering the type.
            </summary>
            <param name="filterType">The Type of the <c>filter</c> parameter in the list method</param>
            <param name="filterDataType">The Type of the data class corresponding to the specified filter type.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget"/> class. 
            </summary>
            <param name="session">The Session in which the Publishing Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget"/> class based on the given identifier.
            </summary>
            <param name="id">The identifier (TCM URI) of the Publishing Target.</param>
            <param name="session">The Session in which the Publishing Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Publishing Target.</param>
            <param name="session">The Session in which the Publishing Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PublishingTargetData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublishingTarget"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.CommunicationManagement.PublishingTarget.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.CommunicationManagement.PublishingTarget.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.SetAllowedActions">
            <summary>
            Determines allowed actions for this object and set the <see cref="P:Tridion.ContentManager.IdentifiableObject.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
            <remarks></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
            <remarks></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublishingTarget.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublishingTarget.Description">
            <summary>
            Gets or sets the description of the Publishing Target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublishingTarget.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublishingTarget.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Configuration.GeneralConfiguration">
            <summary>
            Specifies the general settings of Content Manager Kernel
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.GeneralConfiguration.RepositorySettings">
            <summary>
            Gets or sets the repository related configuration settings
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.GeneralConfiguration.LicenseSettings">
            <summary>
            Gets or sets the license related settings
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.GeneralConfiguration.SessionSettings">
            <summary>
            Gets or sets the session related settings.
            </summary>
            <value>The session settings.</value>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.GeneralConfiguration.SectionName">
            <summary>
            Use this section name to get the rendering configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Configuration.LicenseSettings">
            <summary>
            Specifies license related settings
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Configuration.LicenseSettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Configuration.LicenseSettings"/> class.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.LicenseSettings.LicenseFilePath">
            <summary>
            Gets or sets license file path
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Configuration.RepositorySettings">
            <summary>
            Specifies Repository related settings
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Configuration.RepositorySettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tridion.ContentManager.Configuration.RepositorySettings"/> class.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Configuration.RepositorySettings.CategoryEnumerationLimit">
            <summary>
            Gets or sets the limit of number of keywords in Categories XSD.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ClassificationDetail">
            <summary>
            An item used to specify the classification operation result.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassificationDetail.#ctor(Tridion.ContentManager.Data.ContentManagement.ClassificationDetailData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.ClassificationDetail"/> class, pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassificationDetail.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassificationDetail.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassificationDetail.ToString">
            <summary>
            Returns a string representation for the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>A Data Object reflecting the current state.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Session">
            <summary>
            Gets the Session in which the object was created.
            </summary>
            <value>The session.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.XPath">
            <summary>
            Gets the XPath expression that resolves the position in <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/> or <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> where the <see cref="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Keywords"/> are applied for the Classification action.
            </summary>
            <value>The XPath expression.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Keywords">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Keywords"/> that are used for Classification.
            </summary>
            <value>This value cannot be null. It will be an empty list if none of the supplied Keywords for the Classification action was used to Classify the item.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.FieldName">
            <summary>
            Gets the name of the field in <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/> or <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> where the <see cref="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.XPath"/> expression refers to.
            </summary>
            <value>The name of the Category field.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.IsMetadataField">
            <summary>
            Gets a value indicating whether the Classfication is performed on <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/> or <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>.
            </summary>
            <value>
            <c>true</c> if the Classification is performed on <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Category">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Category"/> of the <see cref="P:Tridion.ContentManager.ContentManagement.ClassificationDetail.Keywords"/>.
            </summary>
            <value>The category.</value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter">
            <summary>
            A Filter that can be used to constrain a list of repository-local objects (e.g. get items for the given set of item ids, all checked-out items).
            </summary>
            <remarks>
            As per current implementation if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/> is set then it returns those items constrained by the filter.
            Otherwise it returns items that are checked out, either by the current user if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> is not set, or
            by the user specified in <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> condition, constrained by the rest of the filter condition.
            <para>
            There is a legacy issue related to the fact that SchemaPurpose, ComponentType and TemplateType conditions map together to the same, one legacy filter condition called SubType.
            Use these 3 conditions separately from each other so do not restrict by SchemaPurposes, ComponentTypes and TemplateTypeIds conditions together.
            Also always restrict by ItemType in additon to each of these conditions. Otherwise, the results can contain unexpected items types. 
            When setting the SchemaPurposes condition, also set the ItemTypes to <see cref="F:Tridion.ContentManager.ItemType.Schema"/>.
            When setting the ComponentTypes condition, also set the ItemTypes to <see cref="F:Tridion.ContentManager.ItemType.Component"/>.
            When setting the TemplateTypeIds condition, also set the ItemTypes to one or more templates (for example <see cref="F:Tridion.ContentManager.ItemType.ComponentTemplate"/> and <see cref="F:Tridion.ContentManager.ItemType.PageTemplate"/>).
            </para>
            <para>
            If the <see cref="P:Tridion.ContentManager.StronglyTypedFilter.IncludeAllowedActionsColumns"/> condition is set and the requested items are in workflow, 
            the allowed actions of the associated activity instance will also be returned (allowed to start, finish, suspend and restart).
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetListRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetListCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> class based on a copy of the given Filter. 
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectsFilterData"/> object type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.SetDefaultValues">
            <summary>
            Sets default values on the <c>CurrentState</c> properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ValidateEnumProperties(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectsFilterData)">
            <summary>
            Called by the constructor or setters of enumeration properties.
            </summary>
            <param name="dataObject">A data object to validate (passed explicitly because it can also be not the current object state)</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter">
            <summary>
            Gets or sets a value indicating the bit mask to apply to the items' <see cref="T:Tridion.ContentManager.ContentManagement.LockType"/>. Must be used in combination with <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult"/>.
            </summary>
            <value>Value or combination of values from <c>LockType</c> enumeration. If <c>null</c>, the constraint is not applied.</value>
            <remarks>
            VersionedItems can have a combination of <seealso cref="T:Tridion.ContentManager.ContentManagement.LockType"/> for example InWorkflow and CheckedOut.
            The <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter"/> will do a bit mask on the <see cref="T:Tridion.ContentManager.ContentManagement.LockType"/> of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> and will compare the result with the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult"/>.
            </remarks>
            <example>
            To search for all CheckedOut items that are not in Workflow set the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter"/> to CheckedOut and InWorkflow and the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult"/> to CheckedOut.   
            </example>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult">
            <summary>
            Gets or sets a value indication that only items should be returned with the given <c>LockType</c> (after the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter"/> bit mask has been applied).
            </summary>
            <value>Value or combination of values from <c>LockType</c> enumeration. If <c>null</c>, the constraint is not applied.</value>
            <remarks>
            VersionedItems can have a combination of <seealso cref="T:Tridion.ContentManager.ContentManagement.LockType"/> for example InWorkflow and CheckedOut.
            The <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter"/> will do a bit mask on the <see cref="T:Tridion.ContentManager.ContentManagement.LockType"/> of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> and will compare the result with the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult"/>.
            </remarks>
            <example>
            To search for all CheckedOut items that are not in Workflow set the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockFilter"/> to CheckedOut and InWorkflow and the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockResult"/> to CheckedOut.   
            </example>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser">
            <summary>
            Gets or sets a condition on the User who locked/checked-out the item.
            </summary>
            <value>
            The <c>User</c> object to select all items checked-out by this user. User must be specified.
            </value>
            <remarks>
            This property maps to the <c>LockUser</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.SchemaPurposes">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.SchemaPurposes"/> condition to constrain the
            items returned by the list to this value.
            </summary>
            <remarks>Only return items with the given <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/>.
            When setting this condition, do not set ComponentTypes and TemplateTypeIds conditions.
            Also always restrict by ItemType in additon: set the ItemTypes to <see cref="F:Tridion.ContentManager.ItemType.Schema"/>. Otherwise, the results can contain unexpected items types. 
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ComponentTypes">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ComponentTypes"/> condition to constrain the
            items returned by the list to this value.
            </summary>
            <remarks>Only return items with the given <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType"/>.
            Setting this value sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.TemplateTypeIds"/> to <c>null</c>.
            When setting this condition, do not set SchemaPurposes and TemplateTypeIds conditions.
            Also always restrict by ItemType in additon: set the ItemTypes to <see cref="F:Tridion.ContentManager.ItemType.Component"/>. Otherwise, the results can contain unexpected items types. 
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.TemplateTypeIds">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.TemplateTypeIds"/> condition to limit the list to items with given template type IDs.
            </summary>
            <value>A collection of template types IDs or <c>null</c> if the condition is not specified.</value>
            <remarks>
            The available template types and their ID numbers are defined in the "templateTypes" section of the Content Manager configuration.
            Setting this value sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ComponentTypes"/> to <c>null</c>.
            When setting this condition, do not set SchemaPurposes and ComponentTypes conditions.
            Also always restrict by ItemType in additon: set the ItemTypes to one or more templates (for example <see cref="F:Tridion.ContentManager.ItemType.ComponentTemplate"/> and <see cref="F:Tridion.ContentManager.ItemType.PageTemplate"/>). Otherwise, the results can contain unexpected items types. 
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.IncludeLockUserColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> or XML attribute <c>CheckOutUser</c> is set in the returned list. 
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property does not have any effect when <c>ItemIds</c> condition is set. 
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.IncludeLocationInfoColumns">
            <summary>
            Gets or sets a value indicating whether Location Info columns is included in the returned list. 
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property is only valid in combination with <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/> property.
            This property determines the pre-loading of the location information properties or the following XML attribute
            <c>OrgItemId</c>, <c>OrgItemTitle</c>, <c>Path</c> and <c>URL</c> while getting the XML list.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:Tridion.ContentManager.ItemType"/> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:Tridion.ContentManager.ItemType"/> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
            <remarks>
            <para>This property maps to the condition named <c>ItemType</c> in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</para>
            <para>
            NOTE: Unlike other collection properties in the TOM.NET API, this is a read/write property.
            That means that the set has to be created by the client and assigned to this property; it's not possible to add values to the property.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/> condition to limit the result to given IDs.
            </summary>
            <value>A collection of <see cref="T:Tridion.ContentManager.TcmUri"/> and/or WebDavUrls or <c>null</c> if the condition is not specified.</value>
            <remarks>
            <para>
            If the specified TcmUri are versionless, the result will contain the latest versions of the requested items.
            It is possible to request specific versions of items (even multiple versions of the same item), if the TcmUri contains version part.
            To get currently checked-out/locked version, the version 0 must be explicitly requested.
            </para>
            <para>
            This property does not have any effect when calling <see cref="M:Tridion.ContentManager.SystemManager.GetListCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/> 
            and <see cref="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>. When calling
            <see cref="M:Tridion.ContentManager.SystemManager.GetListRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/> or
            <see cref="M:Tridion.ContentManager.SystemManager.GetRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/> setting this property to <c>null</c> will 
            result in similar behavior as calling <see cref="M:Tridion.ContentManager.SystemManager.GetListCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/> or
            <see cref="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>.
            </para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.UseDynamicVersion"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.UseDynamicVersion">
            <summary>
            Gets or sets condition to include the version zero changes in the list.
            </summary>
            <value>A boolean value to indicate whether to use latest dynamic version or not.</value>
            <remarks>
            This property is used to enable the user to see the dynamic version (v0) of an item provided some conditions are satisfied. 
            <para>
            When UseDynamicVersion is set to True, the result will contain dynamic version if the following conditions also hold true:
            checked out version of item exists and user has rights to the checked out version (ie. the user is a locking user of the item)
            or 
            checked out version of item exists, user is a system administrator and TcmUris with v0 are specified in the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/>.
            </para>
            <para>
            When UseDynamicVersion is set to False, the result will contain dynamic version if the following conditions hold true:
            checked out version of item exists, user has rights to the checked out version (ie. the user is a locking user) and TcmUris with v0 are specified in the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/>
            or
            checked out version of item exists, user is a system administrator and TcmUris with v0 are specified in the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/>.
            </para>
            Default value is false.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter">
            <summary>
            A Filter that can be used to constrain a list of Target Types.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter.#ctor(Tridion.ContentManager.Data.CommunicationManagement.TargetTypesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.TargetTypesFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.CategoriesFilter">
            <summary>
            Represents the Filter for a list of Categories.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.CategoryRelatedFilter">
            <summary>
            Base abstract class for <see cref="T:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter"/>, <see cref="T:Tridion.ContentManager.ContentManagement.CategoriesFilter"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoryRelatedFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoryRelatedFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoryRelatedFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoryRelatedFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.CategoryRelatedFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.CategoriesFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.CategoriesFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.CategoriesFilter"/> class based on a copy of the given filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.CategoriesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.CategoriesFilter"/> class based on the given filter data object. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Data.ContentManagement.CategoriesFilterData"/> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.CategoriesFilter.SetDefaultValues">
            <summary>
            Sets default values on the properties where values aren't specified.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.CategoriesFilter.IsRoot">
            <summary>
            Gets or sets a condition on the <see cref="P:Tridion.ContentManager.ContentManagement.Category.IsTaxonomyRoot"/> property. 
            </summary>
            <value>
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.ContentManagement.CategoriesFilter.IsRoot"/> value in the filter. 
            For example, if the value is set to <c>true</c>, only the root categories will be included in the result.
            If set to <c>false</c>, only non-root categories will be included in the result.
            When not set, all categories will be included in the result.
            </value>
            <remarks>
            This property maps to the <c>Root</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.CategoriesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter">
            <summary>
            Represents the Filter for a list of Child Categories.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.ChildCategoriesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter">
            <summary>
            Represents the Filter for a list of Child Keywords.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter">
            <summary>
            Base abstract class for <see cref="T:Tridion.ContentManager.ContentManagement.KeywordsFilter"/>, <see cref="T:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter"/> and <see cref="T:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.KeywordRelatedFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.CreateLooselyTypedClone">
            <summary>
            Creates a loosely typed clone of the current filter
            </summary>
            <returns>A Filter object.</returns>
            <remarks>Derived classes should override this method if they have a sort expression.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.KeywordRelatedFilter.SortExpression">
            <summary>
            Gets or sets the sort expression. 
            </summary>
            <value>
            <para>Syntax of the sort expression: &lt;Column name&gt;</para>
            Columns are always sorted ascending. The column can be either <c>Description</c>, <c>Key</c> or <c>Title</c>.
            By default the results are sorted by title.
            </value>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.ChildKeywordsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.IsAbstract">
            <summary>
            Gets or sets a condition on the IsAbstract property.
            </summary>
            <remarks>
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.IsAbstract"/> value in the filter. 
            If the value is set to <c>true</c>, only the abstract keywords will be included in the result.
            If the value is set to <c>false</c>, only the concrete keywords will be included in the result.
            If the value is <c>null</c>, both abstract and concrete keywords will be included.
            This condition maps to the <c>Abstract</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.InCategory">
            <summary>
            Gets or sets a condition to include only keywords that have the specified Category as their Organizational Item.
            </summary>
            <value>
            When specified, the results are constraint by the specified category <see cref="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.InCategory"/>. For example, 
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.InCategory"/> value in the filter. For example, 
            if the value is set to a <seealso cref="T:Tridion.ContentManager.ContentManagement.Category"/>, only items in that Category will be included in the result.
            This condition maps to the <c>FromCategory</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.IncludeChildPublications">
            <summary>
            Gets or sets a condition to include keywords from child publications.
            </summary>
            <value>
            When this value is set to <c>true</c>, keywords from child publications will also be included in the result.
            Otherwise, only keywords from the context publication will be included.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter">
            <summary>
            Represents the Filter for a list of items classified by subject keyword.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.ClassifiedItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.SetDefaultValues">
            <summary>
            Sets default values on the <c>CurrentState</c> properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:Tridion.ContentManager.ItemType"/> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:Tridion.ContentManager.ItemType"/> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
            <remarks>
            <para>This property maps to the condition named <c>ItemType</c> in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</para>
            <para>
            NOTE: Unlike other collection properties in the TOM.NET API, this is a read/write property.
            That means that the set has to be created by the client and assigned to this property; it's not possible to add values to the property.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.ResolveDescendantKeywords">
            <summary>
            Gets or sets a value indicating if descendant keywords are included in the result.
            </summary>
            <remarks> By default descendant keywords are not included into result.
            This condition maps to the <c>Descendant</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.ResultLimit">
            <summary>
            Gets or sets a value limiting the number of items returned in the list.
            </summary>
            <value>
            Positive value or <c>null</c> if the condition is not specified.
            </value>
            <remarks>
            Setting the value to zero will return an empty list.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.BasedOnSchemas">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.BasedOnSchemas"/> condition to return only items that are using the given schemas.
            </summary>
            <value>If the list of schemas is <c>null</c>, the condition is not applied.</value>
            <remarks>Setting the condition to an empty list of schemas will return an empty list.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter">
            <summary>
            Represents the Filter for GetListDeletedReferences.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.DeletedReferencesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.DeletedReferencesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.KeywordsFilter">
            <summary>
            Represents the Filter for a list of Keywords.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.KeywordsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.KeywordsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.KeywordsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.IsRoot">
            <summary>
            Gets or sets a condition on the IsRoot property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <value>
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.IsRoot"/> value in the filter. 
            For example, if the value is set to <c>true</c>, only the root keywords will be included in the result.
            If the value is set to <c>false</c>, only non-root keywords will be included in the result.
            If the value is not set, both root and non-root keywords will be included in the result.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.IsAbstract">
            <summary>
            Gets or sets a condition on the IsAbstract property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <value>
            When specified, the results are constraint by the specified <see cref="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.IsAbstract"/> value in the filter. 
            For example, if the value is set to <c>true</c>, only the abstract keywords will be included in the result.
            If the value is set to <c>false</c>, only non-abstract keywords will be included in the result.
            If the value is not set, both abstract and non-abstract keywords will be included in the result.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.ResultLimit">
            <summary>
            Limit the number of items returned in the list.
            </summary>
            <value>Positive value, or <c>null</c> if the condition is not specified.
            Zero value will be ignored.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.KeywordsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter">
            <summary>
            A Filter that can be used to constrain a list of MultiMediaTypes.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/> class.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.MultimediaTypesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.MultimediaTypesFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter">
            <summary>
            Represents the Filter for a recursive list of organizational items in subject repository.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:Tridion.ContentManager.ItemType"/> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:Tridion.ContentManager.ItemType"/> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
            <remarks>
            <para>This property maps to the condition named <c>ItemType</c> in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</para>
            <para>
            NOTE: Unlike other collection properties in the TOM.NET API, this is a read/write property.
            That means that the set has to be created by the client and assigned to this property; it's not possible to add values to the property.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.IncludeTrustees">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.IncludeTrustees"/> condition to return only
            organizational items that use ALL the specified trustees in their
            permissions.
            </summary>
            <remarks>Collection of Users or Groups. If specified, only returns
            Organizational Items that use ALL the specified trustees in their
            permissions.  If the list of trustees is empty or <c>null</c>, the
            condition is not applied.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.ExcludeTrustees">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.ExcludeTrustees"/> condition to return
            only organizational items that do not use ANY of the specified
            trustees in their permissions.
            </summary>
            <remarks>Collection of Users or Groups. If specified, only returns
            Organizational Items that do not use ANY of the specified trustees
            in their permissions. If the list of trustees is empty or 
            <c>null</c>, the condition is not applied.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.IncludePathColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.Data.ContentManagement.LocationInfo.Path"/>  or XML attribute <c>Path</c> is set in the returned list. 
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter">
            <summary>
            Represents the Filter for a list of orphaned Keywords.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.OrphanKeywordsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.RootCategory">
            <summary>
            Gets or sets a condition on the RootCategory property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            When specified, the result contains only orphan Keywords below the specified <see cref="T:Tridion.ContentManager.ContentManagement.Category"/>. 
            This condition maps to the <c>RootCategory</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrphanKeywordsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.PathToCategoryFilter">
            <summary>
            Represents the Filter for "GetListPathToCategory" list.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.PathToCategoryFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.PathToCategoryFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.CreateLooselyTypedClone">
            <summary>
            Creates a loosely typed clone of the current filter
            </summary>
            <returns>A Filter object.</returns>
            <remarks>Derived classes should override this method if they have a sort expression.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.PathToCategoryFilter.SortExpression">
            <summary>
            Gets or sets the sort expression. 
            </summary>
            <value>
            <para>Syntax of the sort expression: &lt;Column name&gt;</para>
            Columns are always sorted ascending. The column can be either <c>Description</c>, <c>Key</c> or <c>Title</c>.
            By default the results are sorted by title.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SchemaCache">
            <summary>
            Provides low-level Schema Object Model retrieval and caching functionality. 
            </summary>
            <remarks>
            SchemaCache loads the CM system schemas and caches them for the lifetime of the AppDomain.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SchemaCache.GetSystemSchemaReader(System.String)">
            <summary>
            Gets the system schema reader.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <returns>XmlReader</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SchemaCache.AddSystemSchemas(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Adds the system schemas in <paramref name="xmlSchemaSet"/>.
            </summary>
            <param name="xmlSchemaSet">The XML schema set.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SchemaCache.GetXmlSchemaSet(Tridion.ContentManager.Data.ContentManagement.SchemaData,Tridion.ContentManager.Session)">
            <summary>
            Gets the <see cref="T:System.Xml.Schema.XmlSchemaSet"/> refers to by <paramref name="schema"/>.
            </summary>
            <param name="schema">The Data Object for the Schema. This may or may not have the Xsd property loaded.</param>
            <param name="session">The Session to use.</param>
            <returns>An <see cref="T:System.Xml.Schema.XmlSchemaSet"/> representing the Schema Object Model for the given Schema.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SchemaCache.GetCustomizablePropertiesValidatorXmlSchemaSet">
            <summary>
            Gets the XML Schema Set that is used to validate properties whose validation logic can be customized by the user.
            </summary>
            <returns>The XML Schema Set to validate properties whose validation logic is user defined.</returns>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter">
            <summary>
            Represents the Filter for a list of taxonomies.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter"/> class copied from the given filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.TaxonomiesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter"/> class based on the give filter data. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.TaxonomiesFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.UseForNavigation">
            <summary>
            Gets or sets a condition on the <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation"/> property.
            </summary>
            <value>
            If this condition is <c>null</c> (e.g. not applied), all categories
            regardless to the <c>UseForNavigation</c> property are included into result.
            </value>
            <remarks>
            This condition maps to the <c>UseForNavigation</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.ForItems">
            <summary>
            Gets or sets a condition to return taxonomies which can be used to classify the given items.
            </summary>
            <value>A collection of Repository Local Objects or <c>null</c> if the condition is not specified.</value>
            <remarks>It is not possible to classify a schema.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter">
            <summary>
            Represents the Filter for a list of taxonomies in OWL format.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter"/> class copied from the given filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.TaxonomiesOwlFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.TaxonomiesFilter"/> class based on the give filter data. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.TaxonomiesOwlFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.RootCategories">
            <summary>
            Gets or sets a value indicating whether to limit the result to the given Categories which are defined as a root of a taxonomy.
            </summary>
            <value>A collection of Repository Local Objects or <c>null</c> if the condition is not specified.</value>
            <remarks>It is not possible to classify a schema.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.IncludeAllowedActionsColumns">
            <summary>
            This property is not applicable for this filter.
            Attempts to read or write the value will throw <see cref="T:Tridion.TridionNotSupportedException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.TaxonomiesOwlFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.VersionsFilter">
            <summary>
            Represents the Filter for GetListVersions list.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.VersionsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.VersionsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ActivityExpiredEventArgs">
            <summary>
            Represents event data for events related an <see cref="T:Tridion.ContentManager.Workflow.Activity"/> expiring.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ActivityEventArgs">
            <summary>
            Abstract base class for event data for events related to workflow activity operations.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.WorkflowEventArgs">
            <summary>
            Abstract base class for event data for events related to workflow operations.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.WorkflowEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.WorkflowEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ActivityEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ActivityEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ActivityExpiredEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ActivityExpiredEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs">
            <summary>
            Represents event data for events related to assigning of an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs.#ctor(Tridion.ContentManager.Security.Trustee)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs"/> class. 
            </summary>
            <param name="assignee">
            The assignee.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.AssignActivityEventArgs.Assignee">
            <summary>
            Gets or sets the Assignee. The Assignee cannot be set if the Activity Instance is an Automatic Activity.
            </summary>
            <remarks>
            Setting the Assignee is allowed only for Manual Activities. Automatic Activities on the other hand are always assigned to the Workflow Agent,
            otherwise the Workflow execution would not proceed correctly. Setting the Assignee in that case leads to an <see cref="T:Tridion.ContentManager.InvalidActionException"/>.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection">
            <summary>
            Represents a collection of TCM extension configurations <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to a collection of <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection"/>.
            </summary>
            <param name="element">The <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.Add(Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to the resolve mappings collection.
            </summary>
            <param name="extension">The <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.Remove(Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings)">
            <summary>
            Removes a <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> from the collection.
            </summary>
            <param name="extension">The <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> at the specified index location.
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to remove.</param>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.CollectionType">
            <summary>
            Gets the type of the handlers mappings collection.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> at the specified index location. 
            </summary>
            <param name="index">The index location of the <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> to get.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> at the specified index.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> by its assembly name. 
            </summary>
            <param name="name">The <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings"/> assembly name to look for.</param>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings">
            <summary>
            Contains settings for a TCM Extension.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings.AssemblyFileName">
            <summary>
            Assembly file name to load. Allows to load types from assemblies not deployed in the GAC.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionSettings.AssemblyName">
            <summary>
            Assembly name to load from the GAC.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Configuration.EventSystemConfiguration">
            <summary>
            Represents the event system section within the configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.EventSystemConfiguration.MaxThreadCount">
            <summary>
            Gets or sets the maximum amount of threads which can be created in thread pool.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.EventSystemConfiguration.ThreadNamePrefix">
            <summary>
            Gets or sets the name prefix of threads.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.EventSystemConfiguration.ThreadTimeout">
            <summary>
            Gets or sets the timeout for thread after which thread should be terminated.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.EventSystemConfiguration.SectionName">
            <summary>
            Use this section name to get the event system configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Configuration.ExtensionsConfiguration">
            <summary>
            Represents the CM extensions section within the configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.ExtensionsConfiguration.TcmExtensions">
            <summary>
            Gets or sets a collection <see cref="T:Tridion.ContentManager.Extensibility.Configuration.TcmExtensionCollection"/> objects.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Configuration.ExtensionsConfiguration.SectionName">
            <summary>
            Use this section name to get the extensions configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.AsynchronousEventWorkItem">
            <summary>
            Represents a thread pool work item for an asynchronous event.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.AsynchronousEventWorkItem.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.Extensibility.EventSubscription,Tridion.ContentManager.Extensibility.EventPhases)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.AsynchronousEventWorkItem"/> class. 
            </summary>
            <param name="session">The Session used to obtain the application data and event stack.</param>
            <param name="subscription">The event subscription which is to be executed asynchronously.</param>
            <param name="phase">The event phase.</param>
            <remarks>
            When creating an instance of this class, all the <see cref="P:Tridion.ContentManager.Session.ContextData"/> are copied to avoid interference, 
            but the exact behaviour differs and depends on a type of the user-defined objects stored in the session.
            For any type derived from <see cref="T:Tridion.ContentManager.IdentifiableObject"/>, a new object is created and all property values are cloned.
            For a type implementing <see cref="T:System.ICloneable"/> interface, the object is cloned by calling its <see cref="M:System.ICloneable.Clone"/> method.
            For any value type, the object's value is simply copied over.
            For any other reference type, only the object's reference is copied which can be dangerous if the object is not immutable.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventDeliveryPhase">
            <summary>
            Represents a phase of the operation when the event will be delivered.
            </summary>
            <remarks>
                <para>
                    This enumeration is only used when delivering events. Event listeners use 
                    <see cref="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)"/> instead. When the 
                    <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed"/> event is delivered, the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> will automatically deliver the subsequent
                    <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> of that event.
                </para>
                <para>
                    When the <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed"/> event has been delivered, the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> will automatically deliver
                    the subsequent events.
                </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)"/>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(System.Collections.Generic.IEnumerable{Tridion.ContentManager.IdentifiableObject},Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)"/>
            <seealso cref="T:Tridion.ContentManager.Extensibility.EventPhases"/>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Initiated">
            <summary>
            The operation has been initiated, but no data has been changed at this stage.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed">
            <summary>
            The data has been updated but not yet committed.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventPhases">
            <summary>
            Indicates at which phase in the operation the event is being delivered.
            </summary>
            <remarks>
                <para>
                    When subscribing to an event it is possible to combine multiple <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> using a bitwise or operation.
                    The subscriber will then receive the event multiple times as the operation passes through the phases.
                </para>
                <para>
                    Throwing an exception at the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Initiated"/> phase will abort the operation and any remaining event handlers will not receive the event.
                </para>
                <para>
                    Throwing an exception at the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/> phase will abort the operation and any remaining event handlers will not receive the event.
                </para>
                <para>
                    The <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionCommitted"/> event will not be delivered if the operation is aborted before the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/> phase has been reached.
                    If the operation is not in a transaction scope, this event will be delivered immediately after <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/>.
                    Throwing an exception at this phase will not abort the operation, nor will it stop other event handlers from receiving the event.
                </para>
                <para>
                    Caution: Signing up for the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionCommitted"/> event negatively affects the performance of the transaction it is attached to.
                </para>
                <para>
                    The <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionAborted"/> event will not be delivered if the operation is aborted before the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/> phase has been reached.
                    Throwing an exception at this phase will not abort the operation, nor will it stop other event handlers from receiving the event.
                </para>
                <para>
                    Caution: Signing up for the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionAborted"/> event negatively affects the performance of the transaction it is attached to.
                </para>
                <para>
                    The <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionInDoubt"/> event will not be delivered if the operation is aborted before the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Processed"/> phase has been reached.
                    Throwing an exception at this phase will not abort the operation, nor will it stop other event handlers from receiving the event.
                </para>
                <para>
                    Caution: Signing up for the <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionInDoubt"/> event negatively affects the performance of the transaction it is attached to.
                </para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.None">
            <summary>
            Event phase is not relevant
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.Initiated">
            <summary>
            The operation has been initiated, but no data has been changed at this stage.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.Processed">
            <summary>
            The data has been updated but not yet committed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionCommitted">
            <summary>
            The data has been updated and committed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionAborted">
            <summary>
            The operation was rolled back.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionInDoubt">
            <summary>
            The data has been updated and attempted committed, but the status of the transaction is unknown.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventPhases.All">
            <summary>
            All phases in the operation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventStackItem">
            <summary>
            Represents an entry on the event stack.
            </summary>
            <seealso cref="P:Tridion.ContentManager.Extensibility.TcmEventArgs.EventStack"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventStackItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventStackItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventStackItem.EventArgs">
            <summary>
            Gets a <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived object which indicates the type of event and contains event-related data.
            </summary>
            <value>An instance of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> delivered with the event.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventStackItem.Subjects">
            <summary>
            Gets the list of subjects of the operation which triggered the event.
            </summary>
            <value>An <see cref="T:Tridion.ContentManager.IdentifiableObject"/>-derived object for which the event was delivered.</value>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventSubscription">
            <summary>
            Represents a subscription to the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/>. Can be used to <see cref="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSubscription.#ctor(System.Type,System.Type,Tridion.ContentManager.Extensibility.EventPhases,Tridion.ContentManager.Extensibility.EventSubscriptionOrder,System.Boolean,System.Delegate,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> class.
            </summary>
            <param name="subjectType">
            The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the handler is subscribed to.
            </param>
            <param name="eventType">
            The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the handler is subscribed to.
            </param>
            <param name="phases">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> the hander is subscribed to.
            </param>
            <param name="order">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder"/> order the event should be delivered in when there are multiple subscriptions to the same event.
            </param>
            <param name="isAsynchronous">
            Specify if events are delivered asynchronous.
            </param>
            <param name="eventHandler">
            The method handling the events.
            </param>
            <param name="listenerName">
            A <see cref="T:System.String"/> identifying the listener subscribing to the event.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe">
            <summary>
            Removes the subscription stopping events from being delivered to the listener.
            </summary>
            <exception cref="T:Tridion.TridionNotSupportedException">
            If <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.Order"/> is either <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalEarly"/>
            or <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalLate"/> and the calling assembly is not
            signed with the same public key as the executing assembly.
            </exception>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSubscription.DeliverEvent(System.Collections.Generic.IEnumerable{Tridion.ContentManager.IdentifiableObject},Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventPhases)">
            <summary>
            Delivers an event to the subscriber.
            </summary>
            <param name="subjects">The list of subjects of the operation that triggered the event.</param>
            <param name="eventArgs">An <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived object indicating the type of event and containing event-related data.</param>
            <param name="phase">The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases">phase</see> in the operation the event is being delivered for.</param>
            <remarks>
            <para>If <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.IsAsynchronous"/> is <c>true</c> the event will be delivered on a background thread and this method will return immediately.</para>
            <para>The event will only be delivered if it matches the criteria of the subscription:
            <list type="bullet">
              <item><paramref name="phase"/> does not specify multiple <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> and it is included in <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.Phases"/>.</item>
              <item><paramref name="subjects"/> is an instance of <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.SubjectType"/> or a derived type.</item>
              <item><paramref name="eventArgs"/> is an instance of <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.EventType"/> or a derived type.</item>
            </list>
            </para>
            <para>
            Exceptions in the listener will not be propagated if <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.IsAsynchronous"/> is <c>true</c> or <paramref name="phase"/> has one of the following values:
            <list type="bullet">
              <item><see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionCommitted"/></item>
              <item><see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionAborted"/></item>
              <item><see cref="F:Tridion.ContentManager.Extensibility.EventPhases.TransactionInDoubt"/></item>
            </list>
            Instead the exception will be logged and execution will continue.
            </para>
            </remarks>
            <returns>
            <c>true</c> if the event matched the filter criteria of the subscription; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSubscription.Equals(System.Object)">
            <summary>
            Object equality test.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns><c>true</c> if the given object is an <c>EventSubscription</c> instance and it has the same <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> as this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSubscription.GetHashCode">
            <summary>
            Get a hash code for the object.
            </summary>
            <returns>The hash code, which is based on the <see cref="P:Tridion.ContentManager.Extensibility.EventSubscription.EventHandler"/>.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.SubjectType">
            <summary>
            Gets the type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the handler is subscribed to.
            </summary>
            <value>The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the handler is subscribed to.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.EventType">
            <summary>
            Gets the type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the handler is subscribed to.
            </summary>
            <value>The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the handler is subscribed to.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.Phases">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> the hander is subscribed to.
            </summary>
            <value>The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> the hander is subscribed to.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.Order">
            <summary>
            Gets a value specifying the order multiple event subscribers receive the event.
            </summary>
            <value>The <see cref="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder"/> specifying the order multiple event subscribers receive the event.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.IsAsynchronous">
            <summary>
            Gets a value indicating whether events are delivered asynchronous.
            </summary>
            <value><c>true</c> if events are delivered asynchronous; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.ListenerName">
            <summary>
            Gets a <see cref="T:System.String"/> identifying the listener subscribing to the event.
            </summary>
            <value>A <see cref="T:System.String"/> identifying the listener subscribing to the event.</value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.EventSubscription.EventHandler">
            <summary>
            Gets the method handling the events.
            </summary>
            <value>The method handling the events.</value>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder">
            <summary>
            Specifies ordering of multiple subscribers for the same event.
            </summary>
            <remarks>
            <para>If multiple subscriptions specify the same <see cref="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder"/> the order they are subscribed
            in will determine the order they receive the events:
            <list type="table">
            <item>
            <term>SdlTridionInternalEarly</term>
            <description>The last subscribed will receive the event first.</description>
            </item>
            <item>
            <term>Early</term>
            <description>The last subscribed will receive the event first.</description>
            </item>
            <item>
            <term>Normal</term>
            <description>The first subscribed will receive the event first.</description>
            </item>
            <item>
            <term>Late</term>
            <description>The first subscribed will receive the event first.</description>
            </item>
            <item>
            <term>SdlTridionInternalLate</term>
            <description>The first subscribed will receive the event first.</description>
            </item>
            </list>
            </para>
            <para>As event subscriptions are typically performed in the constructor of <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension">extensions</see> changing the order of
            extensions in the configuration file can be used to effect the order subscribers receive events.</para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalEarly">
            <summary>
            Internal SDL Tridion flags indicating the subscriber will receive the event before all other subscriptions.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.Early">
            <summary>
            Place the subscription early in the list of subscribers.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.Normal">
            <summary>
            Place the subscription in the list of subscribers without specifying any ordering preference (recommended).
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.Late">
            <summary>
            Place the subscription late in the list of subscribers.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalLate">
            <summary>
            Internal SDL Tridion flags indicating the subscriber will receive the event after all other subscriptions.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.EventSystem">
            <summary>
            Represents the Event System which is be used to publish events and subscribe to events.
            </summary>
            <remarks>
            <para>
            A typical use case is an <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension">extension</see> subscribing to events in order to monitor 
            and interact with the operations performed by the Content Manager kernel.
            Subscription is done using the <c>Subscribe</c> or <c>SubscribeAsync</c> instance methods.
            Extensions can access an instance of the the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> using the <see cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/> property,
            which they inherit from the <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/> base class.
            </para>
            <para>
            Another use case is publishing (custom) events. This is done using the static <see cref="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)"/> method.
            An instance of a custom <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived class should be provided to this method
            to indicate what the event is about.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> class.
            </summary>
            <param name="listenerIdentifier">A unique identifier for the listener.</param>
            <seealso cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)">
            <summary>
            Delivers an event to all applicable subscribers.
            </summary>
            <param name="subject">The subject of the operation that triggered the event.</param>
            <param name="eventArgs">The <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived data for the event.</param>
            <param name="deliveryPhase">The phase the operation is in when the event is triggered.</param>
            <exception cref="T:Tridion.TridionInvalidOperationException">DeliverEvent was called with <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed"/> without a previous call to <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Initiated"/>.</exception>
            <remarks>
            The event may be delivered synchronously and/or asynchronously, depending on the subscriptions.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.DeliverEvent(System.Collections.Generic.IEnumerable{Tridion.ContentManager.IdentifiableObject},Tridion.ContentManager.Extensibility.TcmEventArgs,Tridion.ContentManager.Extensibility.EventDeliveryPhase)">
            <summary>
            Delivers an event to all applicable subscribers.
            </summary>
            <param name="subjects">The list of subjects of the operation that triggered the event.</param>
            <param name="eventArgs">The <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/>-derived data for the event.</param>
            <param name="deliveryPhase">The phase the operation is in when the event is triggered.</param>
            <exception cref="T:Tridion.TridionInvalidOperationException">DeliverEvent was called with <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Processed"/> without a previous call to <see cref="F:Tridion.ContentManager.Extensibility.EventDeliveryPhase.Initiated"/>.</exception>
            <remarks>
            The event may be delivered synchronously and/or asynchronously, depending on the subscriptions.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.GetSubscriptions(System.Type,System.Type)">
            <summary>
            Gets an ordered list of subscriptions for a specified subject type and event type.
            </summary>
            <param name="subjectType">The <see cref="T:System.Type"/> of the subject item.</param>
            <param name="eventType">The type of the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> instance containing the event data.</param>
            <returns>An enumeration of <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> objects representing subscriptions to the specified event.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.GetSubscriptions(System.Type,System.Type,Tridion.ContentManager.Extensibility.EventDeliveryPhase)">
            <summary>
            Gets an ordered list of subscriptions for a specified subject type, event type and delivery phase.
            </summary>
            <param name="subjectType">The <see cref="T:System.Type"/> of the subject item.</param>
            <param name="eventType">The type of the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> instance containing the event data.</param>
            <param name="deliveryPhase">The delivery phase.</param>
            <returns>An enumeration of <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> objects representing subscriptions to the specified event.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.Subscribe``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases)">
            <summary>
            Subscribes a handler to an event.
            </summary>
            <typeparam name="TSubject">
            The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the event handler will be called for.
            </typeparam>
            <typeparam name="TEvent">
            The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the event handler will be called for.
            </typeparam>
            <param name="eventHandler">
            The event handler that will be called when the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> delivers the event.
            </param>
            <param name="phases">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> in the operation the event handler will be listening to.
            </param>
            <returns>
            An <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> representing the new subscription.
            </returns>
            <remarks>
            <para>
            Each event occurrence can be classified according to the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that is the subject of the event occurrence and
            the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> that both identifies the type of the event and provides access to data associated with the event
            occurrence. For example: If a Folder is localized, the subject will be an instance of <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> and the event data will be
            available through an instance of <see cref="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs"/>.
            </para>
            <para>
            An event occurrence will only be delivered to an <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> if:
            <list type="bullet">
            <item>The subject is an instance of <typeparamref name="TSubject"/> or a derived class.</item>
            <item>The event data is an instance of <typeparamref name="TEvent"/> or a derived class.</item>
            </list>
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.SubscribeAsync``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases)"/>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.Subscribe``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases,Tridion.ContentManager.Extensibility.EventSubscriptionOrder)">
            <summary>
            Subscribes a handler to an event using a given ordering.
            </summary>
            <typeparam name="TSubject">
            The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the event handler will be called for.
            </typeparam>
            <typeparam name="TEvent">
            The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the event handler will be called for.
            </typeparam>
            <param name="eventHandler">
            The event handler that will be called when the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> delivers the event.
            </param>
            <param name="phases">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> in the operation the event handler will be listening to.
            </param>
            <param name="order">
            Affects the order multiple event subscribers receive the event.
            </param>
            <exception cref="T:Tridion.TridionNotSupportedException">
            <paramref name="order"/> has 
            <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalEarly"/> or 
            <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalLate"/> specified, but the calling assembly is not signed with the SDL Tridion key.
            </exception>
            <exception cref="T:Tridion.TridionArgumentOutOfRangeException">
            <paramref name="order"/> is not a member of <see cref="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder"/>.
            </exception>
            <returns>
            An <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> representing the new subscription.
            </returns>
            <remarks>
            <para>
            Each event occurrence can be classified according to the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that is the subject of the event occurrence and
            the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> that both identifies the type of the event and provides access to data associated with the event
            occurrence. For example: If a Folder is localized, the subject will be an instance of <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> and the event data will be
            available through an instance of <see cref="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs"/>.
            </para>
            <para>
            An event occurrence will only be delivered to an <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> if:
            <list type="bullet">
            <item>The subject is an instance of <typeparamref name="TSubject"/> or a derived class.</item>
            <item>The event data is an instance of <typeparamref name="TEvent"/> or a derived class.</item>
            </list>
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.SubscribeAsync``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases,Tridion.ContentManager.Extensibility.EventSubscriptionOrder)"/>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.SubscribeAsync``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases)">
            <summary>
            Subscribes an asynchronous handler to an event.
            </summary>
            <typeparam name="TSubject">
            The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the event handler will be called for.
            </typeparam>
            <typeparam name="TEvent">
            The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the event handler will be called for.
            </typeparam>
            <param name="eventHandler">
            The event handler that will be called when the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> delivers the event.
            </param>
            <param name="phases">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> in the operation the event handler will be listening to.
            </param>
            <returns>
            An <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> representing the new subscription.
            </returns>
            <remarks>
            <para>
            Each event occurrence can be classified according to the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that is the subject of the event occurrence and
            the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> that both identifies the type of the event and provides access to data associated with the event
            occurrence. For example: If a Folder is localized, the subject will be an instance of <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> and the event data will be
            available through an instance of <see cref="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs"/>.
            </para>
            <para>
            An event occurrence will only be delivered to an <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> if:
            <list type="bullet">
            <item>The subject is an instance of <typeparamref name="TSubject"/> or a derived class.</item>
            <item>The event data is an instance of <typeparamref name="TEvent"/> or a derived class.</item>
            </list>
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.Subscribe``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases)"/>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.SubscribeAsync``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases,Tridion.ContentManager.Extensibility.EventSubscriptionOrder)">
            <summary>
            Subscribes an asynchronous handler to an event using a given ordering.
            </summary>
            <typeparam name="TSubject">
            The type of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> the event handler will
            be called for.
            </typeparam>
            <typeparam name="TEvent">
            The type of <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> the event handler will be
            called for.
            </typeparam>
            <param name="eventHandler">
            The event handler that will be called when the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> delivers the event.
            </param>
            <param name="phases">
            The <see cref="T:Tridion.ContentManager.Extensibility.EventPhases"/> in the operation the event handler
            will be listening to.
            </param>
            <param name="order">
            Affects the order multiple event subscribers receive the event.
            </param>
            <exception cref="T:Tridion.TridionNotSupportedException">
            <paramref name="order"/> has 
            <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalEarly"/> or 
            <see cref="F:Tridion.ContentManager.Extensibility.EventSubscriptionOrder.SdlTridionInternalLate"/> specified, but the
            calling assembly is not signed with the SDL Tridion key.
            </exception>
            <exception cref="T:Tridion.TridionArgumentOutOfRangeException"><paramref name="order"/> is not a member of <see cref="T:Tridion.ContentManager.Extensibility.EventSubscriptionOrder"/>.</exception>
            <returns>
            An <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> representing the new subscription.
            </returns>
            <remarks>
            <para>
            Each event occurrence can be classified according to the <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that is the subject of the event occurrence and
            the <see cref="T:Tridion.ContentManager.Extensibility.TcmEventArgs"/> that both identifies the type of the event and provides access to data associated with the event
            occurrence. For example: If a Folder is localized, the subject will be an instance of <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> and the event data will be
            available through an instance of <see cref="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs"/>.
            </para>
            <para>
            An event occurrence will only be delivered to an <see cref="T:Tridion.ContentManager.Extensibility.EventSubscription"/> if:
            <list type="bullet">
            <item>The subject is an instance of <typeparamref name="TSubject"/> or a derived class.</item>
            <item>The event data is an instance of <typeparamref name="TEvent"/> or a derived class.</item>
            </list>
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSystem.Subscribe``2(Tridion.ContentManager.Extensibility.TcmEventHandler{``0,``1},Tridion.ContentManager.Extensibility.EventPhases,Tridion.ContentManager.Extensibility.EventSubscriptionOrder)"/>
            <seealso cref="M:Tridion.ContentManager.Extensibility.EventSubscription.Unsubscribe"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.EventSystem.AssertCallingAssemblyIsTridionAssembly">
            <summary>
            Asserts the assembly that called a method in this class is an SDL Tridion signed assembly.
            </summary>
            <exception cref="T:Tridion.TridionNotSupportedException">If the calling assembly is not signed with the same public key as the executing assembly.</exception>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.AutomaticAssignActivityEventArgs">
            <summary>
            Represents event data for events related to automatic assigning of an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
            <remarks>
            When an Activity is finished, the Workflow execution proceeds with the next Activity, if available.
            At that point, the Assignee for that next Activity is chosen automatically and this event is raised.
            It is possible for the receiver of the event to examine that Assignee or even specify a different one.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.AutomaticAssignActivityEventArgs.#ctor(Tridion.ContentManager.Security.Trustee)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.AutomaticAssignActivityEventArgs"/> class. 
            </summary>
            <param name="assignee">
            The assignee.
            </param>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.BlueprintingEventArgs">
            <summary>
            Abstract base class for event data for events related to Blueprinting.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.BlueprintingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.BlueprintingEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs">
            <summary>
            Represents event data for events related to checking in a <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.VersioningEventArgs">
            <summary>
            Abstract base class for event data for events related to Versioning.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.VersioningEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.VersioningEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs"/> class. 
            </summary>
            <param name="removePermanentLock">Indicates whether a permanent lock should be removed.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CheckInEventArgs.RemovePermanentLock">
            <summary>
            Gets or sets a value indicating whether a permanent lock should be removed.
            </summary>
            <value>
            Initially, the value reflects the <c>permanentLock</c> parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/>.
            It can be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs">
            <summary>
            Represents event data for events related to checking out a <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.#ctor(Tridion.ContentManager.ContentManagement.LockType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs"/> class. 
            </summary>
            <param name="lockType">The type of lock to put on the object being checked out.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.SetPermanentLock">
            <summary>
            Gets or sets a value indicating whether a permanent lock should be set.
            </summary>
            <value>
            Initially, the value reflects a lock type which is derived from the parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>.
            It can be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>
            <seealso cref="P:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.LockType"/>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.LockType">
            <summary>
            Gets the type of lock to put on the object being checked out.
            </summary>
            <value>
            The value reflects a lock type which is derived from the parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>.
            It can not be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs.IsActionPerformed">
            <summary>
            Gets a value indicating whether the check-out action was actually performed.
            </summary>
            <remarks>
            If <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut"/> is called on an item which was already checked out, no actual action is performed.
            This property can be used to determine whether the operation actually performed an action.
            In <see cref="F:Tridion.ContentManager.Extensibility.EventPhases.Initiated"/> phase, the value is always <c>false</c>.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs">
            <summary>
            Abstract base class for event data for events related to classification.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance containing the type name and all property values.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.ClassificationEventArgs.ClassificationResults">
            <summary>
            Gets a collection of classification details representing the result of classification operation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs">
            <summary>
            Represents event data for events related to classifying a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Classify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs"/> class. 
            </summary>
            <param name="keywords">Collection of Keywords being used to classify the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs.Keywords">
            <summary>
            Gets or sets a collection of Keywords being used to classify the item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.CopyEventArgs">
            <summary>
            Represents event data for events related to copying a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Copy(Tridion.ContentManager.ContentManagement.OrganizationalItem,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.#ctor(Tridion.ContentManager.ContentManagement.IContainer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.CopyEventArgs"/> class. 
            </summary>
            <param name="destination">The <see cref="T:Tridion.ContentManager.ContentManagement.IContainer"/> object where the item's copy will be created.</param>
            <param name="makeUnique">Indicates whether a unique title will be generated in case of copying into the same container.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.Destination">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.ContentManagement.IContainer"/> object where the item's copy will be created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.CopiedObject">
            <summary>
            Gets the result of the copy operation.
            </summary>
            <value>
            This value will be null in the Initiated event phase, and will contain the new copied item at later event phases.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.CopyEventArgs.MakeUnique">
            <summary>
            Gets or sets a value indicating whether a unique title should be generated if an item with the same title already exists in the destination.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs">
            <summary>
            Represents event data for events related to deleting an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs">
            <summary>
            Represents event data for events related to deleting an <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.DeleteOrganizationalItemEventArgs.ItemsToDelete">
            <summary>
            Gets a value indicating which Items to delete
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs">
            <summary>
            Represents event data for events that occur during the deletion of a taxonomy node.
            </summary>
            <remarks>
            A taxonomy node is a Keyword. This event arguments type is actually used in the OnDeleting and OnDeleted events
            but only when the call that triggers the event is <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.Delete(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)"/>.
            When the call that triggers the event is <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/> then the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> is used instead.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.#ctor(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs"/> class.
            </summary>
            <param name="deleteTaxonomyNodeMode">The way that descendants of a deleted taxonomy node will be handled.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DeleteTaxonomyNodeMode">
            <summary>
            Gets a value indicating how the descendants of a deleted taxonomy node should be handled.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DescendantsToDelete">
            <summary>
            Gets the descendant Keywords that will be deleted after the Delete operation is complete.
            </summary>
            <remarks>
            The list will not include the Keyword on which the delete operation was initiated.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DescendantsToReparent">
            <summary>
            Gets the Keywords whose parent Keywords will be replaced after the Delete operation is complete.
            </summary>
            <remarks>
            These Keywords are not deleted after the Delete operation is complete. However, one or more of their parent Keywords get changed so the
            parent Keywords collection needs to be updated.
            If the <see cref="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DeleteTaxonomyNodeMode"/> property is <see cref="F:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode.AssignChildrenToGrandparents"/>, the parents of the
            parent Keyword that gets deleted replace that Keyword wherever it is used.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs">
            <summary>
            Represents event data for events related to finishing an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs.#ctor(Tridion.ContentManager.Workflow.ActivityFinish)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs"/> class. 
            </summary>
            <param name="data">
            A <see cref="T:Tridion.ContentManager.Workflow.ActivityFinish"/> which contains detailed information for finishing this activity.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs.ActivityFinish">
            <summary>
            Gets detailed information for finishing an Activity.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs">
            <summary>
            Represents event data for events related to finishing a <see cref="T:Tridion.ContentManager.Workflow.Process"/>.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ProcessEventArgs">
            <summary>
            Abstract base class for event data for events related to workflow process operations.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ProcessEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ProcessEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.#ctor(Tridion.ContentManager.Workflow.ProcessFinishReason,Tridion.ContentManager.Workflow.ApprovalStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs"/> class. 
            </summary>
            <param name="reason">
            The reason to this process being finished.
            </param>
            <param name="approvalStatus">
            The Approval Status.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.ApprovalStatus">
            <summary>
            Gets or sets the approval status.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs.Reason">
            <summary>
            Gets the reason.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.LoadEventArgs">
            <summary>
            Represents event data for events related to loading an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.#ctor(Tridion.ContentManager.LoadFlags,Tridion.ContentManager.LoadState)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.LoadEventArgs"/> class. 
            </summary>
            <param name="loadFlags">The flags that specify how the object's state should be loaded.</param>
            <param name="formerLoadState">The state the object was in before its <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/> method was called.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.LoadFlags">
            <summary>
            Gets or sets the flags that specify how the object's state should be (or has been) loaded.
            </summary>
            <value>
            Initially, the value reflects the load flags as specified by the caller of the <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/> method.
            It can be modified by event handlers.
            </value>
            <seealso cref="P:Tridion.ContentManager.IdentifiableObject.LoadFlags"/>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.LoadEventArgs.FormerLoadState">
            <summary>
            Gets the state the object was in before its <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/> method was called.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs">
            <summary>
            Represents event data for events related to localizing a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Localize"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.MoveEventArgs">
            <summary>
            Represents event data for events related to moving a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> to another <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>.
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.MoveEventArgs.#ctor(Tridion.ContentManager.ContentManagement.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.MoveEventArgs"/> class. 
            </summary>
            <param name="destination">The <see cref="T:Tridion.ContentManager.ContentManagement.IContainer"/> object where the item will be moved in.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.MoveEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.MoveEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.MoveEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.MoveEventArgs.Destination">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.ContentManagement.IContainer"/> object where the item will be moved in.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ReAssignActivityEventArgs">
            <summary>
            Represents event data for events related to manual re-assigning of an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ReAssignActivityEventArgs.#ctor(Tridion.ContentManager.Security.Trustee)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ReAssignActivityEventArgs"/> class. 
            </summary>
            <param name="assignee">
            The assignee.
            </param>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs">
            <summary>
            Represents event data for events related to re-classifying a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ReClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword},System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword},System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs"/> class. 
            </summary>
            <param name="keywordsToRemove">Collection of Keywords to remove from the item.</param>
            <param name="keywordsToAdd">Collection of Keywords to add to the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.KeywordsToRemove">
            <summary>
            Gets or sets a collection of Keywords to remove from the item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs.KeywordsToAdd">
            <summary>
            Gets or sets a collection of Keywords to add to the item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs">
            <summary>
            Represents event data for events related to rolling back a <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs"/> class. 
            </summary>
            <param name="deleteVersions">Specifies whether to delete all versions after the given version or to create a new version which is a copy of the given version.</param>
            <param name="comment">Comment for the specified version. Usually used to list references to items that no longer exists.</param>
            <remarks>Comment won't be overridden in case of <paramref name="deleteVersions"/> is <c>true</c>. Old comment will remain.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.DeleteVersions">
            <summary>
            Gets or sets a value indicating whether to delete all versions after the given version or to create a new version which is a copy of the given version.
            </summary>
            <value>
            Initially, the value reflects the <c>deleteVersions</c> parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)"/>.
            It can be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)"/>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.Comment">
            <summary>
            Gets or sets the comment for the version to roll back to. 
            </summary>
            <value>
            Initially, the value reflects the <c>comment</c> parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)"/>.
            It is <c>null</c> if <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)"/> is called.
            It can be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)"/>
            <remarks>Comment won't be overridden in case of <see cref="P:Tridion.ContentManager.Extensibility.Events.RollbackEventArgs.DeleteVersions"/> is <c>true</c>. Old comment will remain.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.StartActivityEventArgs">
            <summary>
            Represents event data for events related to starting an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.StartActivityEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.StartActivityEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.SuspendActivityEventArgs">
            <summary>
            Represents event data for events related to suspending an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SuspendActivityEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.SuspendActivityEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs">
            <summary>
            Represents event data for events related to un-classifying a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs"/> class. 
            </summary>
            <param name="keywords">Collection of Keywords being used to un-classify the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs.Keywords">
            <summary>
            Gets or sets a collection of Keywords being used to un-classify the item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs">
            <summary>
            Represents event data for events related to undoing a check out of a <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs"/> class. 
            </summary>
            <param name="removePermanentLock">Indicates whether a permanent lock should be removed.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs.RemovePermanentLock">
            <summary>
            Gets or sets a value indicating whether a permanent lock should be removed.
            </summary>
            <value>
            Initially, the value reflects the <c>permanentLock</c> parameter passed to <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>.
            It can be modified by event handlers.
            </value>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs">
            <summary>
            Represents event data for events related to un-localizing a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnLocalize"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.RestartActivityEventArgs">
            <summary>
            Represents event data for events related to restarting an <see cref="T:Tridion.ContentManager.Workflow.Activity"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.RestartActivityEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.RestartActivityEventArgs"/> class. 
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.TcmEventHandler`2">
            <summary>
            Represents a method that handles events raised through the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/>.
            </summary>
            <typeparam name="TSubject">
            The type of subject the method is handling events for.
            </typeparam>
            <typeparam name="TEvent">
            The type of event the method is handling.
            </typeparam>
            <param name="subject">
            The subject of the operation that raised the event.
            </param>
            <param name="e">
            Indicates the type of event and contains the event-related data.
            </param>
            <param name="phase">
            The current <see cref="T:Tridion.ContentManager.Extensibility.EventPhases">phase</see> of the operation raising the event.
            </param>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.ExtensionInitializationException">
            <summary>
            An exception that is thrown if initialization of a configured <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/> fails
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.ExtensionInitializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.ExtensionInitializationException"/> class.
            </summary>
            <param name="extensionConfigurationValue">The value in the configuration file that caused the extension to be loaded.</param>
            <param name="innerException">The exception thrown when attempting to initialize the extension.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.ExtensionInitializationException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.ExtensionInitializationException"/> class with a specified error message.
            </summary>
            <param name="message">A <see cref="T:Tridion.Localization.LocalizableMessage"/> that describes the error. The content of message is intended to be understood by humans.</param>
        </member>
        <member name="T:Tridion.ContentManager.Filter">
            <summary>
            Used to specify filter conditions, sort order and columns for list/query methods.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Filter.#ctor">
            <summary>
            Creates a new instance with an empty set of conditions, additional columns and sort expression. Use default set of base columns.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Filter.#ctor(Tridion.ContentManager.Filter)">
            <summary>
            Creates a new instance which is a copy of a given other Filter.
            </summary>
            <param name="otherFilter">The filter to copy from.</param>
        </member>
        <member name="M:Tridion.ContentManager.Filter.#ctor(Tridion.ContentManager.Data.FilterData)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
        </member>
        <member name="M:Tridion.ContentManager.Filter.SetDefaultValues">
            <summary>
            Sets default values on the properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Filter.EnsureInstance(Tridion.ContentManager.Filter@)">
            <summary>
            Ensures that the given Filter reference is not <c>null</c>.
            </summary>
            <param name="filter">The Filter reference which may be <c>null</c>. If so, it is changed to a new Filter instance.</param>
        </member>
        <member name="M:Tridion.ContentManager.Filter.GetRowFilterXml">
            <summary>
            Gets the row filter XML representation as expected by the legacy BL.
            </summary>
            <returns>A string containing the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Filter.GetListColumnFilter">
            <summary>
            Gets the TDSDefines.ListColumnFilter enumeration value as expected by the BL.
            </summary>
            <returns>
            The TDSDefines.ListColumnFilter enumeration value which is derived from
            both the <see cref="P:Tridion.ContentManager.Filter.BaseColumns"/> and <see cref="P:Tridion.ContentManager.Filter.AdditionalColumns"/>
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Filter.Conditions">
            <summary>
            Gets or sets the conditions (key/value pairs) used to filter the list. 
            </summary>
            <remarks>
            Conditions can be added, removed and queried using the generic IDictionary methods.
            Each method that takes a Filter as parameter defines a set of supported conditions.
            In general, the following data types can be used as value for a condition:
            <list type="bullet">
                <item>Simple data types (string, int, double, bool)</item>
                <item>DateTime</item>
                <item>Enumerations</item>
                <item>Identifiable objects</item>
                <item>Collections (arrays, non-generic collection, generic collections) of any of the above</item>
            </list>
            </remarks>
            <example><code>
            Filter filter = new Filter();
            filter.Conditions["ItemType"] = ItemType.Component;
            if (identifiableObject.HasUsingItems(filter)) ...
            </code></example>
        </member>
        <member name="P:Tridion.ContentManager.Filter.SortExpression">
            <summary>
            Gets or sets the sort expression. 
            </summary>
            <remarks>
            <para>Syntax of the sort expression: &lt;Column name&gt; [ASC|DESC]</para>
            Columns are sorted ascending by default. Multiple columns can be specified, separated by commas. 
            An empty string (the default value) means "default sorting": by title, ascending.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Filter.BaseColumns">
            <summary>
            Gets or sets which base columns (XML attributes) to include in the XML list.
            </summary>
            <value>A default value is <c>ListBaseColumn.Default</c>.</value>
            <remarks>
            The available columns depend on the list method for which the Filter is used.
            This property is only applicable to methods returning R5 style XML lists,
            such as <c>GetSystemWideListXml</c> and <c>GetListXml</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Filter.AdditionalColumns">
            <summary>
            Gets the collection of additional columns (XML attributes) to include in the XML list.
            </summary>
            <remarks>
            These are the names of optional columns (XML attributes) to include in the list.
            Which additional columns are supported depends on the list method for which the Filter is used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Filter.CurrentState">
            <summary>
            Gets the Filter's current state as a data object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.Events.SaveEventArgs">
            <summary>
            Represents event data for events related to saving an <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save(System.Boolean)"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.Events.SaveEventArgs"/> class. 
            </summary>
            <param name="isNewItem">Indicates whether the object is a new item or an existing one.</param>
            <param name="checkInAfterSave">Indicates whether the object should be checked-in immediately after saving.</param>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.Equals(System.Object)">
            <summary>
            Determines whether two instances are equal.
            </summary>
            <param name="obj">The object to compare this object against.</param>
            <returns><c>true</c> if the instances are of the same type and have the same property values.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.GetHashCode">
            <summary>
            Gets a hash code for the object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation containing the type name and all property values.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.IsNewItem">
            <summary>
            Gets a value indicating whether the object we are saving is a new item or an existing item.
            </summary>
            <value>
            The value is <c>true</c> if this is a new item; otherwise, <c>false</c>.
            </value>
            <remarks>
            This value may also be used in post events and post Save methods to determine if the item was
            just created or an existing item was updated.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.Events.SaveEventArgs.CheckInAfterSave">
            <summary>
            Gets or sets a value indicating whether the object will be checked-in immediately after saving.
            </summary>
            <value>
            Initially, the value reflects the <c>checkInAfterSave</c> parameter as specified by the caller of the <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save(System.Boolean)"/> method.
            The value is <c>false</c> if <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Save"/> has been called. It can be modified by event handlers.
            </value>
            <remarks>
            Note that checking in does not release a permanent lock from the item.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save(System.Boolean)"/>
        </member>
        <member name="T:Tridion.ContentManager.LicenseHelper">
            <summary>
            Utility class to read license informations
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.LicenseHelper.StartupLicenseCheck(Tridion.ContentManager.Session)">
            <summary>
            Performs the startup license checks. Called whenever a new session is created.
            </summary>
            <param name="session">the session object to check license for</param>
        </member>
        <member name="M:Tridion.ContentManager.LicenseHelper.AssertCurrentUserLimit(Tridion.ContentManager.Session,System.Boolean)">
            <summary>
            Asserts that the current number of users in the system doesn't exceed the user limit.
            </summary>
            <param name="session">the session for list users call</param>
            <param name="isAddingUserAction">Indicates which error message should be used in case of failed check.</param>
        </member>
        <member name="M:Tridion.ContentManager.LicenseHelper.AssertNamedUserLimit(System.Int32,System.Boolean)">
            <summary>
            Asserts on the named user limit.
            </summary>
            <param name="userCount">Number of users exists in the system.</param>
            <param name="isAddingUserAction">Indicates which error message should be used in case of failed check.</param>
        </member>
        <member name="M:Tridion.ContentManager.LicenseHelper.AssertBluePrintDepthLimit(System.Int32)">
            <summary>
            Asserts the BluePrint Depth limit of CM Kernel Product from license file.
            </summary>
            <returns>BluePrint Depth Limit</returns>
            <exception cref="T:Tridion.Licensing.LicensingException">Throws when Blueprint depth is not set in the license file.</exception>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.Binary">
            <summary>
            Represents a binary on disk.
            </summary>
            <seealso cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified
            <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> and <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/>.
            </summary>
            <param name="location">A <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that represents the path and url of the binary. It can be only <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> or <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/>.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
            <remarks>This is a generic constructor called by the other constructors.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified 
            <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>, <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of 
            type <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType">ComponentType.Multimedia</see>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that contains the path and url for the binary.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
            <remarks>
            The url and path of this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is depended on the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/>.
            When the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/> is Publish the url and path of the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> is used, 
            otherwise the default value "Preview" is used as the path and url.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.IdentifiableObject,System.String,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified 
            <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>, <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of 
            type <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType">ComponentType.Multimedia</see>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that contains the path and url for the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> that contains an identifier for the
            binary. The size limit is 64 characters and only a-z, A-Z, 0-9 and - are allowed.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
            <remarks>
            The url and path of this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is depended on the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/>.
            When the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/> is Publish the url and path of the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> is used, 
            otherwise the default value "Preview" is used as the path and url.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.Publication,Tridion.ContentManager.Publishing.RenderInstruction,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified 
            <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>, <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> and uses a file for the binary content instead of the 
            content of the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of 
            type <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType">ComponentType.Multimedia</see>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> that contains the path and url for the binary.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/>.</param>
            <param name="filePath">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> uses the content of this file as its content instead of the content of the multi media component.</param>
            <param name="variantId">A <see cref="T:System.String"/> that contains an identifier for the
            binary. The size limit is 64 characters and only a-z, A-Z, 0-9 and - are allowed.</param>
            <remarks>
            This constructor is used by the legacy renderers. The rendered output xml contains a reference to the file.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(System.IO.Stream,System.String,Tridion.ContentManager.IdentifiableObject,System.String,Tridion.ContentManager.ContentManagement.Component,System.String,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified
            <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> ID, publish URL and path, filename, MIME type, 
            binary ID and the ID of a related <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="content">A <see cref="T:System.IO.Stream"/> that contains the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <param name="filename">The name of the file used to store the content.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that contains the path and url for the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> that contains an identifier for the
            binary. The size limit is 64 characters and only a-z, A-Z, 0-9 and - are allowed.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the content.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(System.String,Tridion.ContentManager.IdentifiableObject,System.String,Tridion.ContentManager.ContentManagement.Component,System.String,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified
            <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> ID, publish URL and path, filename, MIME type, 
            binary ID and the ID of a related <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="filePath">The file containing the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.IdentifiableObject"/> that contains the path and url for the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> that contains an identifier for the
            binary. The size limit is 64 characters and only a-z, A-Z, 0-9 and - are allowed.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the content.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
            <remarks>
            This constructor is used by the legacy renderers. The rendered output xml contains a reference to the file.
            The filename is retrieved from the filePath.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(System.String,Tridion.ContentManager.CommunicationManagement.Publication,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class using the specified file and location.
            </summary>
            <param name="filePath">The file containing the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> that contains the path and url for the binary.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
            <remarks>
            This constructor is used by the legacy renderer fors the PublishBinary method with a byte array.
            The filename is retrieved from the filePath.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.#ctor(Tridion.ContentManager.Data.Publishing.Rendering.BinaryData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.ParseLocationProperties(System.String,System.String,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Parses the specified location properties of a binary.
            </summary>
            <param name="url">The URL at which the binary is stored, starting with a forward slash.</param>
            <param name="path">The path at which the binary is stored, starting with a backward slash.</param>
            <param name="renderInstruction">The <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> containing the binary storage location and the <see cref="T:Tridion.ContentManager.Publishing.RenderMode"/></param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.ParseMultiMediaComponent(Tridion.ContentManager.ContentManagement.Component)">
            <summary>
            Parses the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> and retrieves its filename and mime type
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of 
            type <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType">ComponentType.Multimedia</see>.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.Binary.AssertValidVariantId(System.String)">
            <summary>
            Throws an exception when the <paramref name="variantId"/> size limit is larger then 64 
            or contains characters other then a-z, A-Z, 0-9 or -.
            </summary>
            <param name="variantId"></param>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.ComponentId">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.TcmUri"/> of the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/>.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.TcmUri"/> that identifies the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.</value>
            <remarks>
            This property accepts a value of <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/> which indicates there is no associated <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            When this value is set, the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> object represents the binary content of this multimedia <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.VariantId">
            <summary>
            Gets the variant identifier that identifies this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.
            </summary>
            <value>A <see cref="T:System.String"/> holding the variant identifier.</value>
            <remarks>
            This is the value used when a binary content is added with variant identifier.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.LocationId">
            <summary>
            Gets the location identifier where this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is stored.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.Url">
            <summary>
            Gets the publish URL of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> that starts with a forward slash 
            and includes the filename.
            </summary>
            <value>A <see cref="T:System.String"/> holding the publish URL of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.Path">
            <summary>
            Gets the publish path of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> that starts with a backslash
            and includes the filename.
            </summary>
            <value>A <see cref="T:System.String"/> holding the publish path of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.Content">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> data as a read-only <see cref="T:System.IO.FileStream"/>.
            </summary>
            <value>A read-only <see cref="T:System.IO.FileStream"/> that wraps the binary on disk.</value>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.MimeType">
            <summary>
            Gets the MIME type of the binary.
            </summary>
            <value>A <see cref="T:System.String"/> holding the MIME type of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.Filename">
            <summary>
            Gets the file name of the binary.
            </summary>
            <value>A <see cref="T:System.String"/> holding the file name of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> excluding its path.</value>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.RelatedComponentId">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.TcmUri"/> of the related <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.TcmUri"/> that identifies the related <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.</value>
            <remarks>
            This property accepts a value of <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/> which indicates there is no related <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            When this value is set, the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> object represents a binary content which is related to this <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            For example the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was generated from this <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.Binary.FilePath">
            <summary>
            Gets the filename including its path.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem">
            <summary>
            Represents a rendered item that provides properties and methods to add and retrieve metadata, 
            global or local instructions and binaries.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.#ctor(Tridion.ContentManager.Publishing.Resolving.ResolvedItem,Tridion.ContentManager.Publishing.RenderInstruction)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> class using the specified
            <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ResolvedItem"/>.
            </summary>
            <param name="resolvedItem">A <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ResolvedItem"/> instance.</param>
            <param name="renderInstruction">A <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.RenderInstruction"/> instance.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.#ctor(Tridion.ContentManager.Data.Publishing.Rendering.RenderedItemData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddMetadata(System.Xml.XmlElement)">
            <summary>
            Adds metadata to the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
            <param name="metadata">An <see cref="T:System.Xml.XmlElement"/> that contains the metadata.</param>
            <remarks>
             The <paramref name="metadata"/> parameter can contain any valid XML structure which can be processed at the Content Delivery side.
             There is no possibility to remove or change the metadataXml once it is added.
             Adding the same metadata multiple times will show up multiple times and the Content Delivery side.
             When a Page with a PageTemplate is rendered this added metadata is available on the Page at the Content Delivery side.
             When a Component with a ComponentTemplate is rendered this added metadata is available on the Page when the ComponentPresentation is embedded,
             in case of a Dynamic ComponentPresenation the added metadata is available on the ComponentPresentation at the Content Delivery Side.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddInstruction(Tridion.ContentManager.Publishing.Rendering.InstructionScope,System.Xml.XmlElement)">
            <summary>
            Adds an instruction to the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> with a specified scope.
            </summary>
            <param name="scope">Specifies the scope of the instruction.</param>
            <param name="instruction">An <see cref="T:System.Xml.XmlElement"/> that specifies a single instruction.</param>
            <remarks>
            The <paramref name="instruction"/> parameter can contain any valid XML structure which can be processed at the Content Delivery side.
            There is no possibility to remove or change the instruction once it is added.
            Adding the same instruction multiple times will show up multiple times and the Content Delivery side.
            Adding the instruction with a global scope is available at instruction level at the Content Delivery side.
            When a <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/> with a <see cref="T:Tridion.ContentManager.CommunicationManagement.PageTemplate"/> is rendered with adding a local instruction this instruction is available on the Page module at the Content Delivery side.
            When a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> with a <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate"/> is rendered with adding a local instruction this instruction available on the Page module when the <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> is embedded,
            in case of a Dynamic ComponentPresenation the added local instruction is available on the ComponentPresentation module at the Content Delivery Side.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.GetInstructions(Tridion.ContentManager.Publishing.Rendering.InstructionScope)">
            <summary>
            Gets the instructions added to the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> by a specified scope.
            </summary>
            <param name="scope">Specifies the scope of the instructions to get.</param>
            <returns>
            An <see cref="T:System.Xml.XmlNodeList"/> that contains all instructions for the specified scope.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.GetAllBinaries(Tridion.ContentManager.Publishing.Rendering.RenderedItem,System.Boolean)">
            <summary>
            Gets all the Binaries <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Binaries"/> from the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. If <paramref name="includeChildRenderedItems"/> set to <c>true</c> 
            then will include the binaries of Child Rendered Item<see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ChildRenderedItems"/>. 
            </summary>
            <param name="item"><see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> which Binaries needs to fetched.</param>
            <param name="includeChildRenderedItems">Set to <c>true</c> if Binaries of ChildRenderedItem needs to fetched other wise <c>false</c>.</param>
            <returns>
            Returns all the binaries including child rendered item binaries if <paramref name="includeChildRenderedItems"/> is set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddRenderedItem(Tridion.ContentManager.Publishing.Rendering.RenderedItem)">
            <summary>
            Add a <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> to the list.
            </summary>
            <param name="renderedItem">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.StructureGroup)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type 
            <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> holding the binary.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> holding the path to which
            the binary will be published.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.ContentManagement.Component)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            context <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> images path.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type 
            <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> holding the binary.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.StructureGroup,System.String)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type 
            <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> holding the binary.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> holding the path to which
            the binary will be published.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.ContentManagement.Component,System.String)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified context <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> images path.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type 
            <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> holding the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(System.IO.Stream,System.String,Tridion.ContentManager.CommunicationManagement.StructureGroup,System.String,Tridion.ContentManager.ContentManagement.Component,System.String)">
            <summary>
            Adds binary data as a <see cref="T:System.IO.Stream"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <paramref name="location"/> with the specified <paramref name="filename"/>. The binary
            can be identified by the specified <paramref name="variantId"/> and is optionally related
            to a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="content">A <see cref="T:System.IO.Stream"/> holding the content of the binary.</param>
            <param name="filename">A <see cref="T:System.String"/> holding the file name of the binary.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> holding the path to which
            the binary will be published.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the <paramref name="content"/></param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(System.IO.Stream,System.String,Tridion.ContentManager.CommunicationManagement.StructureGroup,System.String,System.String)">
            <summary>
            Adds binary data as a <see cref="T:System.IO.Stream"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <paramref name="location"/> with the specified <paramref name="filename"/>. The binary
            can be identified by the specified <paramref name="variantId"/>. 
            </summary>
            <param name="content">A <see cref="T:System.IO.Stream"/> holding the content of the binary.</param>
            <param name="filename">A <see cref="T:System.String"/> holding the file name of the binary.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> holding the path to which the binary will be published.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <param name="mimeType">The MIME type of the <paramref name="content"/></param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(System.IO.Stream,System.String,System.String,Tridion.ContentManager.ContentManagement.Component,System.String)">
            <summary>
            Adds binary data as a <see cref="T:System.IO.Stream"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            context <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> images path with the specified <paramref name="filename"/>. The binary
            can be identified by the specified <paramref name="variantId"/> and is optionally related
            to a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="content">A <see cref="T:System.IO.Stream"/> holding the content of the binary.</param>
            <param name="filename">A <see cref="T:System.String"/> holding the file name of the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the <paramref name="content"/></param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Adds binary data as a <see cref="T:System.IO.Stream"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            context <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> images path with the specified <paramref name="filename"/>. The binary
            can be identified by the specified <paramref name="variantId"/> and is optionally related
            to a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="content">A <see cref="T:System.IO.Stream"/> holding the content of the binary.</param>
            <param name="filename">A <see cref="T:System.String"/> holding the file name of the binary.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <param name="mimeType">The MIME type of the <paramref name="content"/></param>
            <returns>A <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(System.String,Tridion.ContentManager.CommunicationManagement.StructureGroup,System.String,Tridion.ContentManager.ContentManagement.Component,System.String)">
            <summary>
            Adds binary data as a <paramref name="filePath"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <paramref name="location"/> with the specified <paramref name="filePath"/>. The binary
            can be identified by the specified <paramref name="binaryId"/> and is optionally related
            to a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>.
            </summary>
            <param name="filePath">The file containing the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> that contains the path and URL for the binary.</param>
            <param name="binaryId">A <see cref="T:System.String"/> that contains an identifier for the
            binary.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the content.</param>
            <remarks>
            This constructor is used for by legacy renderer. The rendered output XML contains a reference to the file.
            The filename is retrieved from the <paramref name="filePath"/>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.Publication,System.String,System.String)">
            <summary>
            Adds a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="multimediaComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> of 
            type <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType">ComponentType.Multimedia</see>.</param>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> that contains the path and url for the binary.</param>
            <param name="filePath">The <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> uses the content of this file as its content instead of the content of the multi media component.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <remarks>
            This constructor is used for by legacy renderer. The rendered output xml contains a reference to the file.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.CommunicationManagement.Publication,System.String)">
            <summary>
            Adds a file to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> that contains the path and url for the binary.</param>
            <param name="filePath">The file containing the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <remarks>
            This constructor is used for by legacy renderer for the PublishBinary method with a byte array.
            The filename is retrieved from the filePath.
            </remarks>        
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.AddBinary(Tridion.ContentManager.CommunicationManagement.Publication,System.String,System.String,Tridion.ContentManager.ContentManagement.Component,System.String)">
            <summary>
            Adds a file to the 
            collection of binaries of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>. It will be published to the 
            specified <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.
            </summary>
            <param name="location">A <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> that contains the path and url for the binary.</param>
            <param name="filePath">The file containing the content for this <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/>.</param>
            <param name="variantId">A <see cref="T:System.String"/> holding an identifier for the binary.</param>
            <param name="relatedComponent">A <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that is related
            to this binary (e.g. the <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> is a thumbnail that was
            generated from the <see cref="T:Tridion.ContentManager.ContentManagement.Component"/>).</param>
            <param name="mimeType">The MIME type of the content.</param>
            <remarks>
            This constructor is used for by legacy renderer for the PublishBinary method with a byte array.
            The filename is retrieved from the filePath.
            </remarks> 
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.SyncCurrentState">
            <summary>
            Moves data into the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState"/> and sets the private business object variables to <c>null</c>.
            </summary>
            <returns>The synced current state</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderedItem.EnsureInstructionsElements">
            <summary>
            Helper method that ensures that the Instructions element is correctly initialized and the
            private instance variables point to the correct <see cref="T:System.Xml.XmlElement"/> objects.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ResolvedItem">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ResolvedItem"/> of this <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.RenderInstruction">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.RenderInstruction"/> of this <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Metadata">
            <summary>
            Gets the metadata of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
            <value>An <see cref="T:System.Xml.XmlNodeList"/> that contains the metadata elements.</value>
            <remarks>
            Represents a custom metadata added to the Rendered Item by a template during rendering.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Binaries">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Publishing.Rendering.Binary"/> instances that have been added to the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CodePage">
            <summary>
            Gets or sets the code page identifier of the current <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Content">
            <summary>
            Gets the rendered content of this Rendered Item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ChildRenderedItems">
            <summary>
            Gets a list of Rendered Items for the nested items of the item being rendered.
            For example a rendered Page can contain rendered Component Presentations from that Page.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ExecutionTime">
            <summary>
            Gets the time took to render this <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.IsRenderedCompletely">
            <summary>
            Gets a value indicating whether this <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> is finished rendering.
            In case of a dynamic component presentation during publishing in the context of rendering a page it returns <c>false</c>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.GlobalInstructions">
            <summary>
            Gets the XML Element that holds the Global Instructions.
            </summary>
            <remarks>
            This XML Element is directly placed on the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState"/>, please use this when you want to add a Global Instruction.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.LocalInstructions">
            <summary>
            Gets the XML Element that holds the Local Instructions.
            </summary>
            <remarks>
            This XML Element is directly placed on the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState"/>, please use this when you want to add a Local Instruction.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.MetadataDocument">
            <summary>
            Gets the Metadata XML Document.
            </summary>
            <remarks>
            This is a helper property that ensures that the Metadata document in the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState"/> is correctly initialized.
            Please do not use the document on the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState"/> directly, use this property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.Session">
            <summary>
            Gets the session in which the object was created.
            </summary>
            <remarks>
            If the user tries to read this property and a Session has not been set, a new Session is established.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ContextPublication">
            <summary>
            Gets the context publication of the <see cref="P:Tridion.ContentManager.Publishing.Rendering.RenderedItem.ResolvedItem"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.InstructionScope">
            <summary>
            Specifies the scopes that an instruction added to a <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> can have.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.Rendering.InstructionScope.Global">
            <summary>
            Instruction can be processed at package level.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Publishing.Rendering.InstructionScope.Local">
            <summary>
            Instruction can be processed at <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/> level.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Rendering.RenderException">
            <summary>
            The exception that is thrown when a render error occurs.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderException.#ctor(Tridion.Localization.LocalizableMessage,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. 
            If the <paramref name="innerException"/> parameter is not a null reference, the current exception is raised in a <c>catch</c> block 
            that handles the inner exception.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderException.#ctor(Tridion.Localization.LocalizableMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Rendering.RenderException.#ctor(Tridion.Localization.LocalizableMessage,System.Enum)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="errorCode">The error code</param>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.RenderInstruction">
            <summary>
            Represents the instructions needed for rendering.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> class.
            </summary>
            <remarks>
            This constructor has been deprecated. Please use <see cref="M:Tridion.ContentManager.Publishing.RenderInstruction.#ctor(Tridion.ContentManager.Session)"/> instead and pass your current session.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> class.
            </summary>
            <param name="session">The session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.#ctor(Tridion.ContentManager.Data.Publishing.RenderInstructionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="state">The state to pre-load this instance with.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.CreateFromDataObject(Tridion.ContentManager.Data.Publishing.RenderInstructionData,Tridion.ContentManager.Session)">
            <summary>
            Creates an instance of the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> class based on the actual type stored in the extension information of the data object.
            </summary>
            <param name="data">The data object to use as current state</param>
            <param name="session">The session in which the object should be created</param>
            <returns>The newly created instance</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.CreateDataObject">
            <summary>
            Creates a new data object instance for initializing current state.
            The actual type of the data object corresponds to the enclosing business object.
            </summary>
            <returns>A data object instance</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates a <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> from its XML representation. 
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> is deserialized.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts this <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the <see cref="T:Tridion.ContentManager.Publishing.RenderInstruction"/> is serialized.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.Publishing.RenderInstruction.CurrentState"/> property is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.SetExtensionXml">
            <summary>
            Rebuilds the XML representation of the extension information.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.SetDefaultData">
            <summary>
            Sets default values for <c>null</c> properties of the data object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>True</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.RenderInstruction.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.Session">
            <summary>
            Gets the session in which the object was created.
            </summary>
            <remarks>
            If the user tries to read this property and a Session has not been set, a new Session is established.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.PublicationTargetId">
            <summary>
            Gets or sets the tcmuri of the publication target.
            </summary>
            <value>The tcmuri of the publication target.</value>
            <remarks>This value is primarily used to distinguish if we are doing Publish/FastTrack publish vs. Legacy Preview.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.RenderMode">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Publishing.RenderInstruction.RenderMode"/> used when rendering.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.BinaryStoragePath">
            <summary>
            Gets or sets the path where the binaries are stored during rendering.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.RenderInstruction.ExtensionXml">
            <summary>
            Gets additional properties of derived classes.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem">
            <summary>
            Represents a combination of a <see cref="T:Tridion.ContentManager.IdentifiableObject"/> and a <see cref="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Template"/>.
            </summary>
            <remarks>
            This combination is the result of a resolve action and can be used to render this combination.
            The template is optional; it is allowed to be <c>null</c>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.#ctor(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.CommunicationManagement.Template)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> class.
            </summary>
            <param name="item">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/></param>
            <param name="template">Render the item with this <see cref="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Template"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.#ctor(Tridion.ContentManager.IdentifiableObject,Tridion.ContentManager.CommunicationManagement.Template,Tridion.ContentManager.CommunicationManagement.PublicationTarget)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> class.
            </summary>
            <param name="item">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/></param>
            <param name="template">Render the item with this <see cref="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Template"/>.</param>
            <param name="publicationTarget">The publication target for which the item was resolved.</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.#ctor(Tridion.ContentManager.Data.Publishing.ResolvedItemData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> class pre-loaded with a given data object.
            </summary>
            <param name="data">The data object to use as (pre-loaded) current state</param>
            <param name="session">The session in which the object should be created</param>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/>.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Equals(Tridion.ContentManager.Publishing.Resolving.ResolvedItem)">
            <summary>
            Indicates whether the current <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> is equal to another <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/>.
            Version zero is considered the same as a version less Uri.
            </summary>
            <param name="other">An <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> to compare with this <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/>.</param>
            <returns><c>true</c> if the current <see cref="T:Tridion.ContentManager.Publishing.Resolving.ResolvedItem"/> is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>True</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.ToString">
            <summary>
            Returns the item Id and the template Id if exists.
            </summary>
            <returns>A string containing the item Id and the template Id if exists.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Session">
            <summary>
            Gets the session in which the object was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.CurrentState">
            <summary>
            Gets the current state as a data object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Item">
            <summary>
            Gets the resolved <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Template">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.Template"/> to render the item with.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.PublicationTarget">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.PublicationTarget"/> for which the item was resolved.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.ItemPath">
            <summary>
            Gets the resolved item's path. The value is set only after successful resolving.
            </summary>
            <remarks>
            This property will be <c>null</c> for <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>s.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.IsComponentPresentation">
            <summary>
            Gets a value indicating whether the Resolved Item represents a Component Presentation
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Publishing.Resolving.ResolvedItem.IsDynamicComponentPresentation">
            <summary>
            Gets a value indicating whether the Resolved Item represents a Dynamic Component Presentation
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.AccessControlEntry">
            <summary>
            Represent an entry in an Access Control List, which is used to restrict access to containers.
            </summary>
            <remarks>
            An Access Control Entry specifies which Permissions and/or Rights a given <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee"/> has.
            Permissions and Rights can either be Allowed, Denied or Implicit Denied.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Security.AccessControlList"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlEntry.#ctor(Tridion.ContentManager.Security.Trustee)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.AccessControlEntry"/> class.
            </summary>
            <param name="trustee">The Trustee to which the Access Control Entry applies.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlEntry.#ctor(Tridion.ContentManager.Data.Security.AccessControlEntryData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.AccessControlEntry"/> class based on a given Data Object.
            </summary>
            <param name="data">The Data Object to be used as state.</param>
            <param name="session">The Session to be used to create TOM.NET objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <returns>
            True if the specified object is equal to the current object, otherwise false.
            </returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlEntry.GetHashCode">
            <summary>
            Serves as a hash function. 
            </summary>
            <returns>
            A hash code for the current object.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee">
            <summary>
            Gets the Trustee (User or Group) which the Access Control Entry applies to.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedRights">
            <summary>
            Gets or sets the Rights that the <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee"/> is allowed to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Tridion.ContentManager.Security.Rights"/> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedRights"/>. 
            The following combinations are possible:
            <list type="table">
                <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
                <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
                <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedRights"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedRights">
            <summary>
            Gets or sets the Rights that the <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee"/> is denied to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Tridion.ContentManager.Security.Rights"/> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedRights"/>.
            The following combinations are possible:
            <list type="table">
                <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
                <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
                <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedRights"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedPermissions">
            <summary>
            Gets or sets the Permissions that the <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee"/> is allowed to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Tridion.ContentManager.Security.Permissions"/> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedPermissions"/>.
            The following combinations are possible:
            <list type="table">
                <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
                <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
                <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedPermissions"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.DeniedPermissions">
            <summary>
            Gets or sets the Permissions that the <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.Trustee"/> is denied to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Tridion.ContentManager.Security.Permissions"/> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedPermissions"/>.
            The following combinations are possible:
            <list type="table">
                <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
                <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
                <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.AccessControlEntry.AllowedPermissions"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlEntry.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.AccessControlList">
            <summary>
            Represents an Access Control List which is used to restrict access to a container.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Repository.AccessControlList"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.AccessControlList"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlList.#ctor(Tridion.ContentManager.Data.Security.IHasAccessControlListData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.AccessControlList"/> class based on a given securable Data Object. 
            </summary>
            <param name="containerData">The Data Object of the container which provides the Access Control List data.</param>
            <param name="session">The Session to be used to create TOM.NET objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessControlList.SyncCurrentState">
            <summary>
            Ensure that <see cref="P:Tridion.ContentManager.Security.AccessControlList.CurrentState"/> is in sync with the <see cref="F:Tridion.ContentManager.Security.AccessControlList._entries"/> field.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlList.AccessControlEntries">
            <summary>
            Gets access to Access Control Entries which the Access Control List contains.
            </summary>
            <value>
            A collection of <see cref="T:Tridion.ContentManager.Security.AccessControlEntry"/> objects.
            This is a "connected collection", meaning that changes to the collection immediately affect the state of the Access Control List.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessControlList.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.AccessToken">
            <summary>
            Represents the read-only current <see cref="T:Tridion.ContentManager.Security.User"/> of a <see cref="T:Tridion.ContentManager.Session"/>.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.User">
            <summary>
            Represents a User
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Trustee">
            <summary>
            Abstract base class for "Trustees": Users or Groups
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(System.Type,System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="filterType">The Type of the <c>filter</c> parameter in the list method</param>
            <param name="filterDataType">The Type of the data class corresponding to the specified filter type.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Trustee.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Trustee.
            </summary>
            <param name="id">The identifier (TCM URI) of the Trustee.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(Tridion.ContentManager.Data.Security.TrusteeData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetUsedItems(Tridion.ContentManager.Filter)">
            <summary>
            This method is not supported on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.
            </summary>
            <returns>A <see cref="T:Tridion.TridionNotSupportedException"/> exception.</returns>
            <param name="filter">Can be used to filter the result.</param>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is called on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetUsedItems">
            <summary>
            This method is not supported on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.
            </summary>
            <returns>A <see cref="T:Tridion.TridionNotSupportedException"/> exception.</returns>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems"/>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is called on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetUsedItems(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            This method is not supported on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.
            </summary>
            <returns>A <see cref="T:Tridion.TridionNotSupportedException"/> exception.</returns>
            <param name="filter">Can be used to filter the result.</param>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is called on a class that derives from <see cref="T:Tridion.ContentManager.Security.Trustee"/>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.SetAllowedActions">
            <summary>
            Determines allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.SyncCurrentState">
            <summary>
            Ensures the <see cref="P:Tridion.ContentManager.Security.Trustee.CurrentState"/> property is up-to-date
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.Unload">
            <summary>
            Unloads the state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of used items as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of used items in the XML.</param>
            <returns>A list of used items in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetTitlePropertyName">
            <summary>
            The Title property of a Trustee maps to the tcm:Name element in the XML.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Overrides the default implementation so that Title won't be validated. Title can contain the backslash domain separator.
            </summary>
            <param name="item">The object that contains the properties to validate</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.ValidateSystemConstraints">
            <summary>
            Overrides the default implementation so that Title won't be validated for backslashes. Title can contain the backslash domain separator.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.SetIsEditableForScope(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.LinkWithIsEditable{Tridion.ContentManager.Data.ContentManagement.RepositoryData}},System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.RepositoryData})">
            <summary>
            Checks whether user has permissions to edit repositories in a scope and sets IsEditable link properties
            </summary>
            <param name="scope">Scope where need to update IsEditable properties</param>
            <param name="manageableRepositories">
            The repositories on which the Session User has permission management right. 
            If <c>null</c>, the list will be retrieved internally (the parameter is intended for performance optimization).
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.UserCanManageSecurity">
            <summary>
            Checks whether the Session User is allowed to manage rights/permissions.
            </summary>
            <returns><c>true</c> if the Session User has System Administrator privileges or has Permission Management rights on any Repository.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.Description">
            <summary>
            Gets or sets the description (full name) of the Trustee
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.IsPredefined">
            <summary>
            Get whether the trustee is predefined by the system.
            </summary>
            <remarks>
            Predefined Trustees cannot be deleted and may be suppressed from lists.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.GroupMemberships">
            <summary>
            Get access to the Trustee's Group memberships.
            </summary>
            <value>
            A "connected" collection of GroupMembership objects. Changes to the collection are reflected in the state of the Trustee.
            </value>
            <remarks>
            Normally, this property only contains the direct Group memberships and does not include Group memberships obtained from an external (LDAP) directory.
            However, the <see cref="P:Tridion.ContentManager.Session.User"/> property is a special User object for which the Group memberships are "expanded":
            it includes indirect Group memberships and also Group memberships obtained from an external (LDAP) directory.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.IsWhereUsedImplemented">
            <summary>
            Gets a value indicating whether this type implements where used functionality.
            </summary>
            <value><c>false</c> for Trustee.</value>
            <remarks>
            	<para>It is used when throwing <see cref="T:Tridion.ContentManager.ItemIsInUseException"/>. When where used is not implemented we want to set ItemIsInUseNoWhereUsed error code to prevent GUI showing Where Used button.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.RepositoriesWithPermissionManagement">
            <summary>
            Gets all Repositories where current user has the <see cref="F:Tridion.ContentManager.Security.Rights.PermissionManagement"/> right.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new User.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing User.
            </summary>
            <param name="id">The identifier (TCM URI) of the User.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given R5 XML representation
            </summary>
            <param name="xmlRepresentation">The R5 XML representation to use as (pre-loaded) current state.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(Tridion.ContentManager.Data.Security.UserData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsEnabled">
            <summary>
            Get or set whether the User is enabled.
            </summary>
            <remarks>
            A user can only log in if his User account is enabled.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.Language">
            <summary>
            Get or set the language of the User
            </summary>
            <remarks>
            This property determines the language in which localizable text is displayed.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.User.LanguageId"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.Locale">
            <summary>
            Get or set the locale of the User
            </summary>
            <remarks>
            This property determines the formatting of date/time and numeric values.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.User.LocaleId"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.LanguageId">
            <summary>
            Get the language ID (LCID) of the User
            </summary>
            <remarks>
            The language ID determines the language in which localizable text is displayed.
            This is a read-only property for backward compatibility with 5.3.
            New code should use <see cref="P:Tridion.ContentManager.Security.User.Language"/> instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.User.Language"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.LocaleId">
            <summary>
            Get the locale ID (LCID) of the User
            </summary>
            <remarks>
            The locale ID determines the formatting of date/time and numeric values.
            This is a read-only property for backward compatibility with 5.3.
            New code should use <see cref="P:Tridion.ContentManager.Security.User.Locale"/> instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.Privileges">
            <summary>
            Get or set the User's system-wide privileges
            </summary>
            <value>
            A bitmap of privilege value. Currently, only one privilege value has been defined:
            <list type="table">
                <item><term>1</term><description>System Administrator</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsSystemAdministrator">
            <summary>
            Get whether the current user is a system administrator
            </summary>
            <remarks>
            This property is derived from the Privileges property. Note: this property does not reflect the current state , but loaded state.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.User.Privileges"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsPrivilegesEditable">
            <summary>
            Get whether the privileges can be modified.
            </summary>
            <remarks>Only System Administrators can modify a User's privileges  if its not his own or isPredefined.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsEnabledEditable">
            <summary>
            Get whether the enabled state can be modified.
            </summary>
            <remarks>Only System Administrators can modify an enabled state of User if its not his own or isPredefined.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessToken.#ctor(Tridion.ContentManager.Data.Security.UserData,Tridion.ContentManager.Session)">
            <summary>
            Creates an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessToken.Unload">
            <summary>
            Unloads the state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessToken.OnLoading(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessToken.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AccessToken.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessToken.GroupMemberships">
            <summary>
            Gets access to the AccessToken's Group memberships.
            </summary>
            <value>
            A read-only collection of GroupMembership objects.
            </value>
            <remarks>
            Normally, this property only contains the direct Group memberships and does not include Group memberships obtained from an external (LDAP) directory.
            However, the <see cref="P:Tridion.ContentManager.Session.User"/> property is a special User object for which the Group memberships are "expanded":
            it includes indirect Group memberships and also Group memberships obtained from an external (LDAP) directory.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessToken.IsPrivilegesEditable">
            <summary>
            Gets whether the privileges can be modified.
            </summary>
            <remarks>Privileges cannot be modified for an AccessToken.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessToken.IsEnabledEditable">
            <summary>
            Gets whether the enabled state can be modified.
            </summary>
            <remarks>Enabled state cannot be modified for an AccessToken.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.AccessToken.Privileges">
            <summary>
            Gets the session's user (AccessToken) privileges. Privileges can not be modified for an AccessToken.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.GroupsFilter">
            <summary>
            A Filter that can be used to constrain a list of Groups.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.TrusteesFilter">
            <summary>
            Abstract Filter that can be used to constrain a list of Trustees.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.TrusteesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.TrusteesFilter"/> class.
            </summary>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Security.TrusteesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.TrusteesFilter"/> class with the specified <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.TrusteesFilter.#ctor(Tridion.ContentManager.Data.Security.TrusteesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.TrusteesFilter"/> class based on the given filter data object. 
            </summary>
            <param name="data">
            The data object to be used as state of the new Filter instance.
            </param>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Security.TrusteesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.TrusteesFilter.IsPredefined">
            <summary>
            Gets or sets a condition on the <see cref="P:Tridion.ContentManager.Security.TrusteesFilter.IsPredefined"/> property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            When specified, the results are constrained by the specified <see cref="P:Tridion.ContentManager.Security.TrusteesFilter.IsPredefined"/> value in the filter. 
            If the value is set to <c>true</c>, only predefined trustees will be included in the result. 
            If the value is set to <c>false</c>, all trustees except predefined are returned. 
            If the value is not specified, all trustees are returned.
            This condition maps to the <c>IsPredefined</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.TrusteesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupsFilter.#ctor(Tridion.ContentManager.Data.Security.GroupsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupsFilter.SetDefaultValues">
            <summary>
            Sets default values on the CurrentState properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.Security.GroupsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.GroupsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.GroupsFilter.IsPredefined">
            <summary>
            Gets or sets a condition on the <see cref="P:Tridion.ContentManager.Security.TrusteesFilter.IsPredefined"/> property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <value></value>
            <remarks>
            When specified, the results are constrained by the specified <see cref="P:Tridion.ContentManager.Security.GroupsFilter.IsPredefined"/> value in the filter.
            If the value is set to <c>false</c>, all trustees except predefined are returned.
            If the value is not specified, all trustees are returned.
            This condition maps to the <c>IsPredefined</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            Currently setting the value to <c>true</c> is not supported.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.TcmExtension">
            <summary>
            Abstract base class for extensions which are loaded into the Content Manager kernel process.
            </summary>
            <remarks>
            <para>The <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/> allows loading .NET assemblies into the content manager process. To create an extension
            perform the following steps:</para>
            <list type="number">
            <item>Create a class library.</item>
            <item>Reference the assembly <c>Tridion.ContentManager.dll</c></item>
            <item>Add one or more classes inheriting from <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/></item>
            <item>Add a <see cref="T:Tridion.ContentManager.Extensibility.TcmExtensionAttribute"/> to each class, passing a unique name to the constructor.</item>
            <item>In the constructor subscribe to one or more events using the <see cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/> property.</item>
            <item>Add the compiled class library to the configuration file of the process, typically <c>&lt;Program Files&gt;\Tridion\Config\Tridion.ContentManager.config</c></item>
            <item>Restart all processes having the Content Manager kernel loaded.</item>
            </list>
            <para>
            Make sure the extension is added to the configuration of all all machines where the Tridion Content Manager kernel is installed. In a default setup, adding the 
            configuration to <c>&lt;Program Files&gt;\Tridion\Config\Tridion.ContentManager.config</c> will ensure the extension is loaded
            in all processes using the Content Manager kernel on the system, but this can be overwritten in the configuration files of each process.
            </para>
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Extensibility.TcmExtensionAttribute"/>
            <seealso cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmExtension.InitializeExtensions">
            <summary>
            Initializes the extension registry and loads all configured extensions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmExtension.LoadExtensions">
            <summary>
            Loads the extensions.
            </summary>
            <exception cref="T:Tridion.ContentManager.Extensibility.ExtensionInitializationException">Thrown if the initialization of an extension fails.</exception>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmExtension.ExtensionId">
            <summary>
            Gets the string uniquely identifying the extension.
            </summary>
            <value>A string uniquely identifying the extension.</value>
            <seealso cref="T:Tridion.ContentManager.Extensibility.TcmExtensionAttribute"/>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/> instance allowing the extension to subscribe to events.
            </summary>
            <value>The <see cref="P:Tridion.ContentManager.Extensibility.TcmExtension.EventSystem"/> instance associated with the <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/></value>
        </member>
        <member name="T:Tridion.ContentManager.Extensibility.TcmExtensionAttribute">
            <summary>
            Indicates that the attributed class should be instantiated as a <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/>.
            </summary>
            <remarks>
            The class must inherit from <see cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/> and have a default constructor.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Extensibility.TcmExtension"/>
        </member>
        <member name="M:Tridion.ContentManager.Extensibility.TcmExtensionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Extensibility.TcmExtensionAttribute"/> class.
            </summary>
            <param name="extensionId">A unique identifier for the extension.</param>
        </member>
        <member name="P:Tridion.ContentManager.Extensibility.TcmExtensionAttribute.ExtensionId">
            <summary>
            Gets the string uniquely identifying the extension.
            </summary>
            <value>A string uniquely identifying the extension.</value>
        </member>
        <member name="T:Tridion.ContentManager.WhereUsedFilter">
            <summary>
            Base abstract class for <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> and <see cref="T:Tridion.ContentManager.UsedItemsFilter"/>
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.WhereUsedFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.WhereUsedFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.WhereUsedFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.WhereUsedFilter.#ctor(Tridion.ContentManager.Data.WhereUsedFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="P:Tridion.ContentManager.WhereUsedFilter.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:Tridion.ContentManager.ItemType"/> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:Tridion.ContentManager.ItemType"/> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
            <remarks>
            <para>This property maps to the condition named <c>ItemType</c> in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</para>
            <para>
            NOTE: Unlike other collection properties in the TOM.NET API, this is a read/write property.
            That means that the set has to be created by the client and assigned to this property; it's not possible to add values to the property.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.WhereUsedFilter.InRepository">
            <summary>
            Gets or sets a condition on the InRepository property. When <c>null</c> is specified the condition is not applied
            </summary>
            <remarks>When specified, the results are constrained by the specified <see cref="P:Tridion.ContentManager.WhereUsedFilter.InRepository"/> value in the filter. For example, 
            if the value is set to a <see cref="T:Tridion.ContentManager.TcmUri"/> of a <c>Repository</c>, only items in that <c>Repository</c> will be included in the result.
            This condition maps to the <c>InRepository</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.WhereUsedFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ItemsFilter">
            <summary>
            Abstract base class for all classes that are used to constrain a list of Items while calling GetListItems method.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor used internally for registering the type.
            </summary>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/>that returns a list as domain objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.ItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.SetDefaultValues">
            <summary>
            Sets default values on the <c>CurrentState</c> properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.ItemsFilter.ValidateEnumProperties(Tridion.ContentManager.Data.ContentManagement.ItemsFilterData)">
            <summary>
            Called by the constructor or setters of enumeration properties.
            </summary>
            <param name="dataObject">A data object to validate (passed explicitly because it can also be not the current object state)</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:Tridion.ContentManager.ItemType"/> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:Tridion.ContentManager.ItemType"/> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
            <remarks>
            <para>This property maps to the condition named <c>ItemType</c> in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.</para>
            <para>
            NOTE: Unlike other collection properties in the TOM.NET API, this is a read/write property.
            That means that the set has to be created by the client and assigned to this property; it's not possible to add values to the property.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.Recursive">
            <summary>
            Gets or sets whether to include items in sub-organizational items (recursively).
            </summary>
            <remarks> Set <c>true</c> to enumerate current and all child
            organizational items, <c>false</c> otherwise. Default is 
            <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.IncludeRelativeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.WebDavUrl"/>  or XML attribute <c>URL</c> is set in the returned list. 
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeRelativeWebDavUrlColumn is set to true, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.ComponentTypes">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.ItemsFilter.ComponentTypes"/> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.LockFilter">
            <summary>
            Gets or sets a bit mask to apply to the items <see cref="T:Tridion.ContentManager.ContentManagement.LockType"/>. Must be used in combination with <see cref="P:Tridion.ContentManager.ContentManagement.ItemsFilter.LockResult"/>.
            </summary>
            <value>Value or combination of values from <c>LockType</c> enumeration. If <c>null</c>, the constraint is not applied.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.LockResult">
            <summary>
            Gets or sets a condition whether to return only items with the given <c>LockType</c> (after the <see cref="P:Tridion.ContentManager.ContentManagement.ItemsFilter.LockFilter"/> bit mask has been applied).
            </summary>
            <value>Value or combination of values from <c>LockType</c> enumeration. If <c>null</c>, the constraint is not applied.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.SchemaPurposes">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.ItemsFilter.SchemaPurposes"/> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.ItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ListMethodInfo">
            <summary>
            Defines information for a list method invocation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ListMethodInfo.FilterType">
            <summary>
            Gets or sets the Type of the <c>filter</c> parameter in the list method
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ListMethodInfo.XmlListName">
            <summary>
            Gets or sets the name of the method that returns a list as XML.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ListMethodInfo.ListName">
            <summary>
            Gets or sets the name of the method that returns a list as TOM.NET objects.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ListMethodInfo.DataObjectListName">
            <summary>
            Gets or sets the name of the method that returns a list as data objects.
            </summary>
            <value>The name of the data object list.</value>
        </member>
        <member name="T:Tridion.ContentManager.SystemWideListMethodInfo">
            <summary>
            Defines information for a system-wide list method invocation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.SystemWideListMethodInfo.FilterDataType">
            <summary>
            Gets or sets the Type of the data class associated with the filter.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.SystemWideListMethodInfo.ManagerType">
            <summary>
            Gets or sets the Type of the class that contains the list methods.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.SubjectRelatedListMethodInfo">
            <summary>
            Defines information for a subject-related list method invocation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.SubjectRelatedListMethodInfo.SubjectType">
            <summary>
            Gets or sets the type of subject where the list defined.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter">
            <summary>
            A Filter that can be used to constrain a list of items in an <c>OrganizationalItem</c>.
            There is a legacy issue related to the fact that SchemaPurpose, ComponentType and TemplateType conditions map together to the same, one legacy filter condition called SubType.
            This means if any of those conditions is set and later read as one of the others, you may get a value which is out of range of the enumaration. However, this is not normal use case.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/> class based on a copy of an other filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/> class based on the given filter data. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemItemsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.NotBasedOnSchema">
            <summary>
            Gets or sets a condition  to limit the returned list to only include components that are not based on the specified schema.. 
            </summary>
            <value>When <c>null</c> is specified, the condition is not applied.</value>
            <remarks>
            <para>
            Used internally to assert if the folder with mandatory linked schema has components based on other schema.  
            When specified, the only components based on OTHER schema's will be included in the result.
            </para>
            <para>
            This condition maps to the <c>ComponentSchemaLink</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.TemplateTypeIds">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.TemplateTypeIds"/> condition to limit the list to items with given template type IDs.
            </summary>
            <value>A collection of template types IDs or <c>null</c> if the condition is not specified.</value>
            <remarks>
            The available template types and their ID numbers are defined in the "templateTypes" section of the Content Manager configuration.
            This condition maps to the <c>SubType</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.BasedOnSchemas">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.BasedOnSchemas"/> condition to return only items that are using the given schemas.
            </summary>
            <value>If the list of schema's is empty or <c>null</c>, the condition is not applied.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.ShowNewItems">
            <summary>
            Gets or sets a condition on the whether the show new items in the list.
            </summary>
            <value>If <c>null</c>, the constraint is not applied.</value>
            <remarks>  
            <para>
            Specifies whether to include new items (items that have not been checked-in yet). 
            By default newly created items are not included in the result list.
            </para>
            <para>
            This condition maps to the <c>ShowNewItems</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.R5Utilities.GetR5IconValue(Tridion.ContentManager.ItemType)">
            <summary>
            Get the value of the Icon attribute used in R5 XML lists, based on a given item type.
            </summary>
            <param name="itemType">The item type.</param>
            <returns>A string containing the value of the Icon attribute.</returns>
        </member>
        <member name="M:Tridion.ContentManager.R5Utilities.GetR5IconValue(Tridion.ContentManager.ItemType,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            Get the value of the Icon attribute used in R5 XML lists, based on its consituent parts.
            </summary>
            <param name="itemType">The item type.</param>
            <param name="isLocked">Whether the item is locked.</param>
            <param name="isPublished">Whether the item is published.</param>
            <param name="subType">The subtype, if applicable, or <c>null</c> if not applicable.</param>
            <param name="mmFileExtension">The file extension of a MultiMedia Component, or <c>null</c> if not applicable.</param>
            <returns>A string containing the value of the Icon attribute.</returns>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter">
            <summary>
            A Filter that can be used to constrain which items are included in a Repository's child list.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> class based on a copy of an other filter. 
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.#ctor(Tridion.ContentManager.Data.ContentManagement.RepositoryItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter"/> class based on the given filter data. 
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryItemsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.AuthorizationManager">
            <summary>
            Provides authorization-related functionality.
            </summary>
            <remarks>
            An AuthorizationManager instance is attached to a Session.
            All authorization decisions are implicitly done for the attached Session's user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance for a given Session.
            </summary>
            <param name="session">The Session to which the AuthorizationManager should be attached.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.SecureList``1(System.Collections.Generic.IEnumerable{``0},Tridion.ContentManager.Security.Permissions)">
            <summary>
            Removes any item in the list for which the user does not have the specified permissions.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">Perform the check on this list of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/></param>
            <param name="permissions">The <see cref="T:Tridion.ContentManager.Security.Permissions"/> to check.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.SecureList``1(System.Collections.Generic.IEnumerable{``0},Tridion.ContentManager.Security.Rights)">
            <summary>
            Removes any item in the list for which the user does not have the specified rights.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">Perform the check on this list of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/></param>
            <param name="rights">The <see cref="T:Tridion.ContentManager.Security.Rights"/> to check.</param>
            <returns>List of items for which user have specified rights or permission and with updated Security Descriptor .</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.SecureList``1(System.Collections.Generic.IEnumerable{``0},Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Removes any item in the list for which the user does not have the specified rights and permissions.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">Perform the check on this list of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/></param>
            <param name="permissions">The <see cref="T:Tridion.ContentManager.Security.Permissions"/> to check.</param>
            <param name="rights">The <see cref="T:Tridion.ContentManager.Security.Rights"/> to check.</param>
            <returns>List of items for which user have specified rights or permission and with updated Security Descriptor .</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.UpdateSecurityDescriptors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Updates the Security Descriptor of the items.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">Perform the update on this list of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/></param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetSecurableItems``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets the items those implements <see cref="T:Tridion.ContentManager.Security.ISecurable"/> Interface.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">The data objects those implements <see cref="T:Tridion.ContentManager.Security.ISecurable"/> Interface.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.UpdateContentSecurityDescriptors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Updates the Security Descriptors which represent the security on the Organizational Item's content.
            </summary>
            <typeparam name="T">The type of the Data Objects in the list.</typeparam>
            <param name="dataObjects">Perform the update on this list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData"/></param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetRepositoriesWithRights(Tridion.ContentManager.Security.Rights,Tridion.ContentManager.ListBaseColumns)">
            <summary>
            Get a secured list of Repositories: only those on which the current user has given rights.
            </summary>
            <param name="demandedRights">The demanded rights</param>
            <param name="columnFilter">The required "columns" (set of Data Object properties to load)</param>
            <returns>A list of partially loaded Repository Data Objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertAccess(Tridion.ContentManager.Data.IdentifiableObjectData,Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if the user has the demanded rights and permissions on the <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/>, if not a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> is thrown.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the rights and permission.</param>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertAccessOnOrganizationalItemContents(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData,Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if the user has the demanded rights and permissions on the contents of the <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData"/>, if not a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> is thrown.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the rights and permission.</param>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertAccessInTrustedReadOnlyMode(Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if we allow access with the demanded rights and permissions when the <see cref="T:Tridion.ContentManager.Session"/> is in <see cref="P:Tridion.ContentManager.Security.AuthorizationManager.TrustedReadOnlyMode"/>, if not a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> is thrown.
            </summary>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.HasAccess(Tridion.ContentManager.Data.IdentifiableObjectData,Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if the user has the demanded rights and permissions on the <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/>.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the rights and permissions.</param>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
            <returns><c>true</c> if specified user has demanded rights and permissions, <c>false</c> otherwise.</returns>
            <remarks>
            Returns <c>false</c> in case of the <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> has no Security Descriptor.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.HasAccessOnOrganizationalItemContents(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData,Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if the user has the demanded rights and permissions on the contents of the <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData"/>.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the rights and permissions.</param>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
            <returns><c>true</c> if specified user has demanded rights and permissions, <c>false</c> otherwise.</returns>
            <remarks>
            Returns <c>false</c> in case of the <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> has no Security Descriptor.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.HasAccessInTrustedReadOnlyMode(Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Checks if we allow access with the demanded rights and permissions when the <see cref="T:Tridion.ContentManager.Session"/> is in <see cref="P:Tridion.ContentManager.Security.AuthorizationManager.TrustedReadOnlyMode"/>.
            </summary>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
            <returns><c>true</c> if the session is not in TrustedReadOnlyMode or the demanded rights and permissions are read only, <c>false</c> otherwise.</returns>
            <remarks>
            Always returns <c>true</c> in case the configuration setting <see cref="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.AllowWriteOperationsInTemplates"/> is set to <c>true</c>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.HasAnyRights(Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Checks if the user has any rights on a <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/>.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the rights and permissions.</param>
            <returns><c>true</c> if specified user has any rights, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.SetAccessControlList(Tridion.ContentManager.Data.Security.IHasAccessControlListData,Tridion.ContentManager.Security.Rights)">
            <summary>
            Sets the access control list for a data object.
            </summary>
            <param name="securableDataObject">A data object which can hold an access control list.</param>
            <param name="requiredManagementRights">The required Management Rights that are required on this specific type of object.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertReadEditableVersion(Tridion.ContentManager.Data.ContentManagement.VersionedItemData)">
            <summary>
            Assert if the user is allowed to read the Versioned Item.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.ContentManagement.VersionedItemData"/> to check.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.CanReadEditableVersion(Tridion.ContentManager.Data.ContentManagement.VersionedItemData)">
            <summary>
            Checks if the user is allowed to read the Versioned Item.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.ContentManagement.VersionedItemData"/> to check.</param>
            <returns>Returns true if the user has read access otherwise false.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertValidTrusteeScope(Tridion.ContentManager.Data.Security.IHasAccessControlListData)">
            <summary>
            Checks if the Trustees in the AccessControlList have the correct usage Scope, if not a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> is thrown.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the usage Scope of the Trustees on.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertValidTrusteeScope(Tridion.ContentManager.Data.Security.IHasAccessControlListData,Tridion.ContentManager.TcmUri)">
            <summary>
            Checks if the Trustees in the AccessControlList have the correct usage Scope, if not a <see cref="T:Tridion.ContentManager.PermissionDeniedException"/> is thrown.
            </summary>
            <param name="securedDataObject">The <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> to check the usage Scope of the Trustees on.</param>
            <param name="repositoryId">The Tcm Uri of the Repository in which context to retrieve the non scoped Trustees.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.AssertValidPermissions(Tridion.ContentManager.Data.Security.IHasAccessControlListData)">
            <summary>
            Asserts if the current permissions are valid.
            </summary>
            <remarks>
            Wil thrown an <see cref="T:Tridion.ContentManager.InvalidActionException"/> when the Permissions are not set according to business rules:
            <list type="bullet">
              <item><description>If you set Write permissions, you also need Read.</description></item>
              <item><description>If you set Delete permissions, you also need Write.</description></item>
              <item><description>If you set Localize permissions, you also need Write.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.LoadAccessToken">
            <summary>
            Loads the access token for the thread's current Windows identity (no impersonation).
            </summary>
            <returns>A TOM.NET object representing the access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.LoadAccessToken(System.String)">
            <summary>
            Loads the access token for a given user (using impersonation).
            </summary>
            <param name="impersonateUserName">The name of the user to impersonate.</param>
            <returns>A TOM.NET object representing the access token.</returns>
            <remarks>The thread's current Windows identity is used as impersonation user.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.LoadAccessToken(System.String,System.String)">
            <summary>
            Loads the access token for a given user, optionally using impersonation.
            </summary>
            <param name="userName">The name of the user to get the access token for.</param>
            <param name="impersonationUserName">The name of the impersonation user. If null or empty string, don't use impersonation.</param>
            <returns>A TOM.NET object representing the access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.LoadAccessToken(System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet})">
            <summary>
            Loads the access token based on the specified claim set.
            </summary>
            <param name="claimSets">The claim set for the user.</param>
            <returns>A TOM.NET object representing the access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.InitializeUserContext(Tridion.ContentManager.Interop.cm_sys.UserContext,Tridion.ContentManager.Security.AccessToken)">
            <summary>
            Initializes a UserContext with user-specific data obtained from an R6 access token.
            </summary>
            <param name="userContext">The UserContext to initialize.</param>
            <param name="accessToken">The R6 access token used to obtain the user-specific data from.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.CreateUserContext(Tridion.ContentManager.Security.AccessToken)">
            <summary>
            Creates an R5 User Context containing user-related data, based on a given R6 access token.
            </summary>
            <param name="accessToken">The R6 access token.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Interop.cm_sys.UserContext"/> object containing the R5 access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GenerateR6AccessToken(Tridion.ContentManager.Interop.cm_sys.UserContext)">
            <summary>
            Generates R6 access token from the specified R5 access token.
            </summary>
            <param name="userContext">The R5 User Context containing the R5 access token.</param>
            <returns>The R6 access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetImpersonationUserSettings(System.String)">
            <summary>
            Retrieves impersonation user settings object for for a given name.
            </summary>
            <param name="name">The name of the Impersonation User. A impersonation user with this name must exist in the configuration.</param>
            <returns>ImpersonationUserSettings object associated with provided name.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.LoadAccessToken(System.String,System.Collections.Generic.IEnumerable{Tridion.ContentManager.TcmUri},System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet})">
            <summary>
            Loads the access token for the specified user name.
            </summary>
            <param name="userName">The qualified name of the user.</param>
            <param name="mappedGroupUris">The TCM URIs of the externally resolved group memberships.</param>
            <param name="claimSets">The claim set that can provide the full name of the user.</param>
            <returns>A TOM.NET object representing the access token.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.CreateUser(System.String,System.String)">
            <summary>
            Creates a new user.
            </summary>
            <param name="userName">The fully qualified account name of the user.</param>
            <param name="fullName">The full name of the user.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetUserNameFromClaimSets(System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet})">
            <summary>
            Retrieves the user name from the specified claim set.
            </summary>
            <param name="claimSets">The claim set that may provide the username.</param>
            <returns>A user name or <c>null</c> if none was found.</returns>
            <remarks>When the return value is <c>null</c>, it should be handled by the caller. E.g., one can fallback to
            current logged on user.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetFullNameFromClaimSets(System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet})">
            <summary>
            Retrieves the full name of the user from the specified claim set.
            </summary>
            <param name="claimSets">The claim set that may provide the user name.</param>
            <returns>A full name or <c>null</c> if none was found.</returns>
            <remarks>When the return value is <c>null</c>, it should be handled by the caller. E.g., one can fall back to
            current logged on user.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.MapClaimsToGroups(System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet},System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Security.ClaimMappingData})">
            <summary>
            Maps a set of claims to a set of TCM Groups.
            </summary>
            <param name="claimSets">The claims to be mapped.</param>
            <param name="claimMappings">The claim mappings.</param>
            <returns>The TCM URIs of Groups which have been resolved or <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GetListClaimMappingData">
            <summary>
            Gets a system-wide list of all Claim Mappings.
            </summary>
            <returns>A list of Claim Mapping Data Objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.OnlyReadAccessDemanded(Tridion.ContentManager.Security.Permissions,Tridion.ContentManager.Security.Rights)">
            <summary>
            Determine whether the demanded permissions and rights are only about read access.
            </summary>
            <param name="demandedPermissions">The demanded permissions.</param>
            <param name="demandedRights">The demanded rights.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.AuthorizationManager.GenerateR5AccessToken(Tridion.ContentManager.Security.AccessToken)">
            <summary>
            Generates R5 access token XML from an R6 access token.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.AuthorizationManager.TrustedReadOnlyMode">
            <summary>
            Gets or sets whether "Trusted Read-Only Mode" is enabled.
            </summary>
            <remarks>
            Trusted Read-Only Mode is enabled during rendering.
            It allows read-only access everything, regardless of configured permissions.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.AuthorizationManager.WindowsIdentityName">
            <summary>
            Gets the name of the thread's current windows identity.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions">
            <summary>
            A collection of <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> objects.
            </summary>
            <remarks>
            This corresponds to the "regions" element in the XML configuration file. 
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.CreateNewElement">
            <summary>
            Create a new collection item.
            </summary>
            <returns>A new <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get the key for a given item.
            </summary>
            <param name="element">The element for which to get the key.</param>
            <returns>An Object that acts as the key for the specified element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Add(Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings)">
            <summary>
            Add an item to the collection.
            </summary>
            <param name="simpleCacheRegionSettings">The <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Remove(Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings)">
            <summary>
            Remove an item from the collection.
            </summary>
            <param name="simpleCacheRegionSettings">The <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.RemoveAt(System.Int32)">
            <summary>
            Remove an the item at the specified index.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.CollectionType">
            <summary>
            Gets the type of the collection: add/remove/clear map.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Item(System.Int32)">
            <summary>
            Indexer. Get the object at the specified index. 
            </summary>
            <param name="index">The index of the item to get.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object.</returns>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings">
            <summary>
            Configuration settings for a <see cref="T:Tridion.ContentManager.Caching.SimpleCacheRegion"/>
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings.Name">
            <summary>
            Gets or sets the name of the cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings.MaxObjects">
            <summary>
            Gets or sets the maximum number of objects for the cache region.
            </summary>
            <remarks>
            -1 means unlimited.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings">
            <summary>
            Configuration settings for a <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.MaxObjects">
            <summary>
            Gets or sets the maximum number of objects for the entire cache.
            </summary>
            <remarks>
            -1 means unlimited (this is the default value).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.DefaultMaxObjectsPerRegion">
            <summary>
            Gets or sets the default maximum number of objects per region.
            </summary>
            <remarks>
            This setting is used for cache regions which are not explicitly configured.
            -1 means unlimited (this is the default value).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.Regions">
            <summary>
            Gets the settings for individual cache regions
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Caching.SimpleCache">
            <summary>
            A simple AppDomain-local, in-memory cache implementation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ICache">
            <summary>
            Interface used to cache objects and obtain objects from the cache.
            </summary>
            <remarks>
            The cache consists of multiple regions identified by a name.
            Each region is basically a dictionary of key/value pairs.
            The idea behind the multiple regions is that each region can have its own retention policy
            (e.g. whether to cache at all, limit on number of objects, expiration time, etc.).
            Concretely, the TOM.NET uses the following cache regions:
            <list type="bullet">
                <item>A separate region for each item type (named after the item type).</item>
                <item>A region for TridionWebSchema representations (named "TridionWebSchema")</item>
                <item>A region for WebDAV URL - TCM URI mappings (named "WebDavUrlMapping")</item>
                <item>A region for Keyword Title - TCM URI mappings (named "KeywordTitleMapping")</item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Session.Cache"/>
        </member>
        <member name="M:Tridion.ContentManager.ICache.Add(System.String,System.String,System.Object)">
            <summary>
            Add an object to the cache (replace if exists).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <param name="value">The object to cache</param>
        </member>
        <member name="M:Tridion.ContentManager.ICache.Get(System.String,System.String)">
            <summary>
            Obtain an object from the cache (if available).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in the given cache region.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/> class with default settings for MaxObjects and DefaultMaxObjectsPerRegion.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/> class with given MaxObjects and DefaultMaxObjectsPerRegion settings.
            </summary>
            <param name="maxObjects">
            The maximum number of objects for the entire cache.
            </param>
            <param name="defaultMaxObjectsPerRegion">
            The default for the maximum number of object per region.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor(Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/> class based on given configuration settings.
            </summary>
            <param name="settings">
            The settings to be used to configure the cache.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Flush">
            <summary>
            Flush all the cache regions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Add(System.String,System.String,System.Object)">
            <summary>
            Add an object to the cache (replace if exists).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <param name="value">The object to cache</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Get(System.String,System.String)">
            <summary>
            Obtain an object from the cache (if available).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in the cache.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which contains cache statistics.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.DefaultMaxObjectsPerRegion">
            <summary>
            Gets or sets the default maximum number of objects per region.
            </summary>
            <remarks>
            Cache regions are can be created on-demand when objects are added to the cache.
            These on-demand created cache regions are configured with this default value for the maximum number of objects in that region.
            -1 means unlimited.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.MaxObjects">
            <summary>
            Gets or sets the maximum number of objects for the entire cache.
            </summary>
            <remarks>
            -1 means unlimited.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.ObjectCount">
            <summary>
            Gets the current number of objects in the cache.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Hits">
            <summary>
            Gets the number of cache hits.
            </summary>
            <remarks>
            This is an aggregate of the number of hits for each region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Misses">
            <summary>
            Gets the number of cache misses.
            </summary>
            <remarks>
            This is an aggregate of the number of hits for each region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Regions">
            <summary>
            Gets the cache regions.
            </summary>
            <remarks>
            The keys in the dictionary are the region names.
            Regions can be added and removed using the IDictionary methods.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Caching.SimpleCacheRegion">
            <summary>
            Represents a single region in a SimpleCache.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.#ctor(System.Int32,Tridion.ContentManager.Caching.SimpleCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Caching.SimpleCacheRegion"/> class. 
            </summary>
            <param name="maxObjects">
            The maximum number of objects for this region. -1 means unlimited.
            </param>
            <param name="owner">
            The <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/> in which the region is created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Add(System.String,System.Object)">
            <summary>
            Add an object to this cache region (replace if exists).
            </summary>
            <remarks>
            If <see cref="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects"/> is zero, nothing will happen (the region doesn't accept any objects).
            If <see cref="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects"/> is 1 or more, the object will be added but another object (the oldest)
            may be removed if the region and/or cache has reached the maximum number of objects.
            </remarks>
            <param name="key">The key for the object.</param>
            <param name="value">The object to add to the cache.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Get(System.String)">
            <summary>
            Obtain an object from this cache region (if available).
            </summary>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in this cache region.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Flush">
            <summary>
            Flush this cache region (remove all objects).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which contains cache region statistics.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.ObjectCount">
            <summary>
            Gets the current number of objects in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.Hits">
            <summary>
            Gets the number of hits in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.Misses">
            <summary>
            Gets the number of misses in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects">
            <summary>
            Gets or sets the maximum number of objects in this cache region. -1 means unlimited.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation">
            <summary>
            Represents a Component Presentation: essentially a combination of a Component and a Component Template.
            </summary>
            <remarks>
            Component Presentations are typically used on a <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/>, but can also be used stand-alone.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.#ctor(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.ComponentTemplate)">
            <summary>
            Create a new instance based on a given Component and Component Template.
            </summary>
            <param name="component">The Component. May not be <c>null</c>.</param>
            <param name="componentTemplate">The Component Template. May not be <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.#ctor(Tridion.ContentManager.Data.CommunicationManagement.ComponentPresentationData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.AssertValidLinks">
            <summary>
            Asserts if the links on this ComponentPresentation are not <c>null</c> or <![CDATA[Link<T>.NullLink]]>.
            </summary>
            <remarks>throws an InvalidLinkException when Link is <c>null</c> or a <![CDATA[Link<T>.NullLink]]></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.Component">
            <summary>
            Get or set the Component.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.ComponentTemplate">
            <summary>
            Get or set the Component Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.Conditions">
            <summary>
            Get access to the (Target Group) conditions.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroupCondition"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Presentation.</value>
            <remarks>
            If conditions are specified for a Component Presentation, these are published as TCDL code.
            This TCDL code results in Content Delivery code that only renders the Component Presentation
            if the user falls in the given Target Groups.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.Session">
            <summary>
            Get the Session in which the object was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate">
            <summary>
            Represents a Component Template: a template used to render a Component into a Component Presentation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Template">
            <summary>
            Abstract base class for Templates.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.VersionedItem">
            <summary>
            Abstract base class for Versioned Items.
            </summary>
            <remarks>
            Instances of this class represent a specific version of a Versioned Item.
            This version is either explicitly stated in the TCM URI (e.g. tcm:1-2-v3)
            or is implicitly the latest version.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.VersionedItem.EditableVersion">
            <summary>Represents the version number of the editable version (also known as "checked-out version" or "dynamic version").</summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> class. 
            </summary>
            <param name="session">
            The Session in which the Versioned Item should be created.
            </param>
            <param name="parentId">
            The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> in which the Versioned Item should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> class for an existing Versioned Item.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Versioned Item.
            </param>
            <param name="session">
            The Session in which the Versioned Item should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(Tridion.ContentManager.Data.ContentManagement.VersionedItemData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetCheckedOutVersion(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Gets checked-out version of the specified Versioned Item.
            If item is not checked-out to the current user yet, a check-out is attempted. If the check-out fails, an exception is raised.
            </summary>
            <param name="id">The identifier (TCM URI) of the Versioned Item.</param>
            <param name="session">The Session in which the Versioned Item should be created.</param>
            <returns>An object representing the Versioned Item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)">
            <summary>
            Gets a specific version of this Versioned Item.
            </summary>
            <param name="version">
            The version to retrieve. 
            The editable version (also known as "checked-out version" or "dynamic version") can be accessed using constant <see cref="F:Tridion.ContentManager.ContentManagement.VersionedItem.EditableVersion"/>.
            </param>
            <returns>An object representing the requested version.</returns>
            <seealso cref="F:Tridion.ContentManager.ContentManagement.VersionedItem.EditableVersion"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of versions of this item.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. Currently, no conditions are supported.
            </param>
            <returns>A list of VersionedItem objects representing the different versions of the item.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions">
            <summary>
            Get a list of versions of this item.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects representing the different versions of the item.</returns>
            <remarks>
            In order to get a single version, use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.ContentManagement.VersionsFilter)">
            <summary>
            Get a list of versions of this item.
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects representing the different versions of the item.</returns>
            <remarks>
            In order to get a single version, use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.ContentManagement.VersionsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of versions of this item as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify the attributes to include in the list.
            See the description of the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)"/> for the possible conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListVersions).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions">
            <summary>
            Get a list of versions of this item as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListVersions).</returns>
            <remarks>
            In order to get a single version, use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.ContentManagement.VersionsFilter)">
            <summary>
            Get a list of versions of this item as XML.
            </summary>
            <param name="filter">Can be used to filter the result.</param>
            <returns>The root element of the XML list (tcm:ListVersions).</returns>
            <remarks>
            In order to get a single version, use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.ContentManagement.VersionsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetDeletedReferences">
            <summary>
            Gets the references to deleted items.
            </summary>
            <returns>A list of deleted <see cref="T:Tridion.ContentManager.IdentifiableObject"/> objects as an <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
            <remarks>
            For most item types, it's allowed to delete an item if there are old versions of other items 
            referring to it. In this case, these old versions will be updated 
            to include the information about the referenced item that no longer exists. 
            Before performing a rollback on an item, the list of deleted references from the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetRollbackComments">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of deleted items as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            For most item types, it's allowed to delete an item if there are old versions of other items 
            referring to it. In this case, these old versions will be updated 
            to include the information about the referenced item that no longer exists. 
            Before performing a rollback on an item, the list of deleted references from the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListDeletedReferences">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of deleted items as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            For most item types, it's allowed to delete an item if there are old versions of other items 
            referring to it. In this case, these old versions will be updated 
            to include the information about the referenced item that no longer exists. 
            Before performing a rollback on an item, the list of deleted references from the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListDeletedReferences(Tridion.ContentManager.ContentManagement.DeletedReferencesFilter)">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <param name="filter">Currently doesn't used.</param>
            <returns>A list of deleted items as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            For most item types, it's allowed to delete an item if there are old versions of other items 
            referring to it. In this case, these old versions will be updated 
            to include the information about the referenced item that no longer exists. 
            Before performing a rollback on an item, the list of deleted references from the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn">
            <summary>
             Checks-in the item. This means that the editable version is turned into the new current version and the lock on the item is removed.        
            </summary>        
            <remarks>
            Internally calls <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/> method with <c>false</c> as parameter.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)">
            <summary>
            Checks-in the item. This means that the editable version is turned into the new current version and the lock on the item is removed.      
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited. 
            Checking-out an item locks the item so that it cannot be modified by others in the meantime. 
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out. 
            This method can be used to turn the editable version into the new current version and to remove the lock when the user is done editing. 
            Alternatively, the checkInAfterSave parameter on the <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save(System.Boolean)"/> can be used. 
            This method can also be used to remove a permanent lock (by means of the <paramref name="removePermanentLock"/> parameter). 
            A permanent lock is set when the user performs an explicit check-out action in the GUI (see <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>) and removed when the user performs an explicit check-in action in the GUI. 
            </remarks>
            <param name="removePermanentLock">It <c>true</c> the <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/> lock will be removed, otherwise the <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/> lock will stay.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save(System.Boolean)">
            <summary>
            Saves the state of the object to the database optionally checks it in.
            </summary>
            <param name="checkInAfterSave">If <c>true</c>, the object is checked in immediately after saving.</param>
            <remarks>
            If the object is new (i.e. not saved to the database yet), it will get a regular <see cref="T:Tridion.ContentManager.TcmUri"/> after saving.
            Note that checking in does not release a permament lock from the item.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.TryCheckOut">
            <summary>
            Tries to check-out the item. If item is not checked-out to the current user yet, a check-out is attempted.
            A return value indicates whether the operation succeeded.
            </summary>
            <returns><c>true</c> if item is already check-out or check-out was performed successfully; otherwise, <c>false</c>.</returns>
            <remarks>
            Calls internally <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut"/> method of the VersionedItem class, but suppress all errors.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Calls internally <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/> method of the VersionedItem class with false as parameter.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited. 
            Checking-out an item locks the item so that it cannot be modified by others in the meantime. 
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out. 
            This method can be used to perform such a check-out.  This methods can also be used to place a permanent lock (by means of the permanentLock parameter). 
            A permanent lock is set when the user performs an explicit check-out action in the GUI (see CheckOut) and removed when the user performs an explicit check-in action in the GUI. 
            </remarks>
            <param name="permanentLock">The type of the lock to be set on the Item.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut">
            <summary>
            Undoes a check-out. This means that the editable version is discarded and the lock on the item is removed.
            </summary>
            <remarks>
            Calls internally <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/> method of the VersionedItem class with false as parameter.
            </remarks>       
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)">
            <summary>
            Undoes a check-out. This means that the editable version is discarded and the lock on the item is removed.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited. 
            Checking-out an item locks the item so that it cannot be modified by others in the meantime. 
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out. 
            This method can be used to undo the check-out and thus discard all changes made since the check-out. 
            Such an undo check-out is implicitly performed by the GUI when an edit form is closed without saving (permanentLock = False) and can also be explicitly performed by the user (permanentLock = True). 
            </remarks>
            <param name="removePermanentLock">It <c>true</c> the <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/> lock will be removed, otherwise the <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/> lock will stay.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean)">
            <summary>
            Rolls back the changes to the version of this instance of the item.
            </summary>
            <param name="deleteVersions">If set to <c>true</c>, versions newer than the version of this instance will be deleted. Otherwise a new version of this item with the data of this instance will be created.</param>
            <remarks>
            <para>
            Note that if <paramref name="deleteVersions"/> is set to <c>true</c> a delete event will not be fired.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)">
            <summary>
            Rolls back the changes to the version of this instance of the item.
            </summary>
            <param name="deleteVersions">If set to <c>true</c>, versions newer than the version of this instance will be deleted. Otherwise a new version of this item with the data of this instance will be created.</param>
            <param name="comment">Comment for the specified version. Usually used to list references to items that no longer exists.</param>
            <remarks>
            <para>
            Note that if <paramref name="deleteVersions"/> is set to <c>true</c> a delete event will not be fired.
            </para>
            <para>
            Comment won't be overridden if <paramref name="deleteVersions"/> is <c>true</c>. The old comment will remain.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Load(Tridion.ContentManager.LoadFlags,System.Boolean)">
            <summary>
            (Re-)load the state of the object using the given flags.
            </summary>
            <param name="flags">The flags that affect the XML representation of the object.</param>
            <param name="forceReload">If <c>true</c>, any current state is overwritten (discarding any unsaved changes).</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
             Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
             Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>Adds a localized string for the lock type title.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.PropagateChangesToLocalCopies(System.Collections.Generic.IList{System.String})">
            <summary>
            Propagates changes in this item to its blueprint local copies.
            </summary>
            <param name="propertiesToPropagate">
            The properties To Propagate.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Save">
            <summary>
            Save the state of the object to the database.
            </summary>
            <remarks>
            If the object is new (i.e. not saved to the database yet), it will get a regular <see cref="T:Tridion.ContentManager.TcmUri"/> after saving.
            Before actual saving the item to the database, business rules will be checked.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if 
                    <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
                                        <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
                                        <item><description>the linked item does not exist</description></item>
                                        <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
                    </list>
            </exception>
            <example>
            <code>
            //Get a component for editing
            Component component = Session.GetObject("tcm:17-225");
            //CheckOut and change title
            component.CheckOut();
            component.Title = "This is the new title";
            //Save and CheckIn the component
            component.Save();
            component.CheckIn();
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <remarks>
            Starts a workflow when the item implements <seealso cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/> and <see cref="M:Tridion.ContentManager.Workflow.IWorkflowItem.GetProcessDefinition"/> returns a <seealso cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/>.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title or object is not of dynamic version or item is checked out by another user</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
             <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
             <item><description>the linked item does not exist</description></item>
             <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.DeleteFromSearchCollection">
            <summary>
            Deletes the item specified by <see cref="T:Tridion.ContentManager.TcmUri"/> from the search collection.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnCheckingIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">
            The Event data based on the method parameters.
            </param>
            <returns>
            Returns a value indicating whether check in should continue.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnCheckedIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn(System.Boolean)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnClassified(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Post-processing for <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Classify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/> method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnUnClassified(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Post-processing for <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/> method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnReClassified(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Post-processing for <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ReClassify(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword},System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Keyword})"/> method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnUndoingCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <returns>
            Returns a value indicating whether undo check out should continue.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnUndidCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnCheckingOut(Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <returns>
            Returns a value indicating whether check out should continue.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnCheckedOut(Tridion.ContentManager.Extensibility.Events.CheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(System.Boolean)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnRollingBack(Tridion.ContentManager.Extensibility.Events.RollbackEventArgs,Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <param name="latestVersion">The latest version of this item.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.OnRolledBack(Tridion.ContentManager.Extensibility.Events.RollbackEventArgs,Tridion.ContentManager.Workflow.ProcessDefinition,Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)"/>, after going to the DAL.
            </summary>        
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <param name="processDefinition">Process Definition to be used for Workflow (if any).</param>
            <param name="latestVersion">Latest version of this item.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(Tridion.ContentManager.ContentManagement.LockType,System.Boolean)">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited. 
            Checking-out an item locks the item so that it cannot be modified by others in the meantime. 
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out. 
            This method can be used to perform such a check-out.  This methods can also be used to place a permanent lock (by means of the permanentLock parameter). 
            A permanent lock is set when the user performs an explicit check-out action in the GUI (see CheckOut) and removed when the user performs an explicit check-in action in the GUI. 
            </remarks>
            <param name="lockType">The <see cref="P:Tridion.ContentManager.ContentManagement.VersionedItem.LockType"/> to be set on the item.</param>
            <param name="completeTransactionOnFailure">Completes the transaction even when checkout fails.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOut(Tridion.ContentManager.ContentManagement.LockType)">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited. 
            Checking-out an item locks the item so that it cannot be modified by others in the meantime. 
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out. 
            This method can be used to perform such a check-out.  This methods can also be used to place a permanent lock (by means of the permanentLock parameter). 
            A permanent lock is set when the user performs an explicit check-out action in the GUI (see CheckOut) and removed when the user performs an explicit check-in action in the GUI. 
            </remarks>
            <param name="lockType">The <see cref="P:Tridion.ContentManager.ContentManagement.VersionedItem.LockType"/> to be set on the item.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetRollbackCommentsStream">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.IO.Stream"/> of XML data.
            </summary>
            <returns>A list of deleted objects in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListDeletedReferencesStream">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.IO.Stream"/> of XML data.
            </summary>
            <returns>A list of deleted objects in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListDeletedReferencesData">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> objects representing references to deleted items.
            </summary>
            <returns>A list of deleted <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/> objects as <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
            <remarks>
            For most item types, it's allowed to delete an item if there are old versions of other items 
            referring to it. In this case, these old versions will be updated 
            to include the information about the referenced item that no longer exists. 
            Before performing a rollback on an item, the list of deleted references from the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetRollbackProcessDefinition(Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Retrieves Process Definition to be used for rollback.
            </summary>
            <param name="latestVersion">
            The latest Version.
            </param>
            <returns>
            Returns null if the item is not a IWorkflowItem or startWorkflowOnRollback is false, or there is no Process Definition for this item.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CloneApplicationDataFromPreviousVersion">
            <summary>
            Copies application data from the previous version to the current one.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.StartWorkflowProcess(Tridion.ContentManager.Workflow.ProcessDefinition)">
            <summary>
            Starts the workflow process.
            </summary>
            <param name="processDefinition">The process definition.</param>
            <remarks>
                This methid gets the ProcessDefinition and then creates a ProcessInstance for this item and Save it.
                Finally it unloads this VersionedItem so that this VersionedItem gets loaded with the updated properties e.g. LockType and so on.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.SetLockOwner(Tridion.ContentManager.TcmUri)">
            <summary>
            Set the Lock Owner to the current user
            </summary>
            <param name="trusteeUri">The <see cref="T:Tridion.ContentManager.TcmUri"/> of Trustee.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.SetApprovalStatus(Tridion.ContentManager.Workflow.ApprovalStatus)">
            <summary>
            Set Approval Status of the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/>. This operation is only applicable for the <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> that implements <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
            </summary>
            <param name="approvalStatus">The ApprovalStatus.</param>
            <remarks></remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.AssertItemIsNotCheckedOut">
            <summary>
            Asserts that the item is not checked-out to a User.
            </summary>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The item is checked-out.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.IsCheckedOutByUser(Tridion.ContentManager.Security.User)">
            <summary>
            Checks whether item is checked out by specified user.
            </summary>
            <param name="user">User to compare with.</param>
            <returns>True if specified user is the user that has checked out
            versioned item, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.LoadDynamicVersionIfApplicable(Tridion.ContentManager.LoadFlags)">
            <summary>
            Attempts to load the dynamic version of the item if the item is part of a render operation.
            </summary>
            <param name="flags">
            The flags.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckBits(Tridion.ContentManager.ContentManagement.LockType,Tridion.ContentManager.ContentManagement.LockType)">
            <summary>
            Test to see if the pattern contains the specified bit value.
            </summary>
            <param name="bit">Bit value to be searched in the pattern.</param>
            <param name="pattern">Pattern where to search the bit value.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetDeletedReferencesStream(System.String)">
            <summary>
            Gets a list of deleted references as a <see cref="T:System.IO.Stream"/> of XML data.
            </summary>
            <param name="rootElementName">Name of the root element of the XML document.</param>
            <returns>A list of deleted objects in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.IsCheckedOut">
            <summary>
            Gets a value indicating whether the item is checked out.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOutDate">
            <summary>
            Gets a value indicating the date/time at which the item was checked out.
            </summary>
            <value>The date/time at which the item was checked out or <see cref="F:System.DateTime.MinValue"/> if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOutUser">
            <summary>
            Gets a value indicating the user who checked out the item.
            </summary>
            <value>A User object or <c>null</c> if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.LockType">
            <summary>
            Gets a value indicating the type of lock on the item (if any).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Version">
            <summary>
            Gets a value indicating the version number of this (version of this) item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Revision">
            <summary>
            Gets a value indicating the revision number of this (version of this) item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Revisor">
            <summary>
            Gets a value indicating the user who last modified this (version of this) item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Template.
            </summary>
            <param name="session">The Session in which the Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Template.</param>
            <param name="session">The Session in which the Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(Tridion.ContentManager.Data.CommunicationManagement.TemplateData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Template Building Blocks used by this Template.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>. 
            The <see cref="T:Tridion.ContentManager.ItemType"/> condition is forced to <c>TemplateBuildingBlock</c>.
            </param>
            <returns>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks">
            <summary>
            Get a list of Template Building Blocks used by this Template.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get a list of Template Building Blocks used by this Template.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>. 
            The "ItemType" condition is forced to TemplateBuildingBlock.
            </param>
            <returns>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.UsedItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Template Building Blocks used by this Template as XML.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>. 
            The "ItemType" condition is forced to TemplateBuildingBlock.
            </param>
            <returns>The root element of the XML list (tcm:ListUsedItems)</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks">
            <summary>
            Get a list of Template Building Blocks used by this Template as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListUsedItems)</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.UsedItemsFilter)">
            <summary>
            Get a list of Template Building Blocks used by this Template as XML.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.UsedItemsFilter)"/>. 
            The "ItemType" condition is forced to TemplateBuildingBlock.
            </param>
            <returns>The root element of the XML list (tcm:ListUsedItems)</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.UsedItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.Unload">
            <summary>
            Unloads the current, loaded state and cached binaryContent
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.ExpandXsltIncludes(System.Xml.XmlDocument)">
            <summary>
            Expands the &lt;xsl:include href='xxx' /&gt; with its content
            </summary>
            <param name="xslt">The XSLT document to expand the XSLT includes.</param>
            <returns>The expanded element</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by Load(LoadFlags,bool), after going to the DAL.
            </summary>
            <remarks>Default implementation only converts WebDAV URLs is requested. Subclasses can override if more post processing is needed.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title or object is not of dynamic version or item is checked out by another user</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
             <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
             <item><description>the linked item does not exist</description></item>
             <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.ProcessTemplateContent(System.String,System.String)">
            <summary>
            Processes the content and dynamic template of component template, page template andb template building blocks.
            </summary>        
            <param name="content">The content.</param>
            <param name="templateType">Type of the template.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
            <remarks>
            By default, all Links provided by <see cref="M:Tridion.ContentManager.Data.IdentifiableObjectData.CollectLinks(System.Boolean)"/> are included in the batch.
            Subclasses that have XML properties which can have XLink elements should override this method to add those to the batch.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.FillPathInfo(Tridion.ContentManager.Data.PathInfo)">
            <summary>
            Sets additional properties on a <see cref="T:Tridion.ContentManager.Data.PathInfo"/> instance.
            </summary>
            <param name="pathInfo">A PathInfo object on which to set path information to construct a WebDAV URL.</param>
            <remarks>This method can be overridden in a derived class to set additional properties on the <see cref="T:Tridion.ContentManager.Data.PathInfo"/> object. By default,
            the <see cref="P:Tridion.ContentManager.Data.PathInfo.FullPath"/> and <see cref="P:Tridion.ContentManager.Data.PathInfo.ItemType"/> properties are set.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Template.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Template.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetDefaultTemplateId(Tridion.ContentManager.Data.CommunicationManagement.PublicationData)">
            <summary>
            Gets the default TemplateData for a new Template and is default null.
            Derived classes can override this method and can for example get the TemplateData of the default template configured in the Publication.
            The TemplateData is used for the default Content and TemplateType.
            </summary>
            <param name="publicationData">Get the default template from this Publication.</param>
            <returns>The default TcmUri for a new Template.</returns>	
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.ReplaceReferencesUsingContentHandler(System.String,System.String,System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link{Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData}},System.Boolean)">
            <summary>
            The content has references stored without a context repository and need to be replaced by references with a context repository.
            </summary>
            <param name="content">The content</param>
            <param name="templateType">The type of the Template (VBScript, JScript, XSLT ...)</param>
            <param name="useWebDavUrls">True for replace the extracted references with WebDavUrls, false for TcmUri's.</param>
            <param name="extractedReferences">Extracted references as a collection of links.</param>
            <returns>A string with references that have a context repository or a WebDav Url.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType">
            <summary>
            Get or set the Template Type.
            </summary>
            <value>
            The value must be the name of one of the configured Template Types (see Tridion.ContentManager.config).
            The following values can be used out-of-the box as of 5.3:
            <list type="table">
                <item><term>VBScript</term><description>VBScript template (pre 5.3)</description></item>
                <item><term>JScript</term><description>JScript template (pre 5.3)</description></item>
                <item><term>XSLT</term><description>XSLT template (pre 5.3)</description></item>
                <item><term>CompoundTemplate</term><description>Compound Template (5.3)</description></item>
                <item><term>AssemblyTemplate</term><description>.NET Assembly (5.3)</description></item>
                <item><term>CSharpTemplate</term><description>C# Code Fragment (5.3)</description></item>
                <item><term>DreamweaverTemplate</term><description>Dreamweaver template (5.3)</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.Content">
            <summary>
            Get or set the Template's (text) content.
            </summary>
            <value>A string containing the text content or an empty string if the Template doesn't have text content.</value>
            <remarks>
            Depending on the <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType"/>, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.ParameterSchema">
            <summary>
            Get or set the Parameter Schema.
            </summary>
            <value>
            A <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters"/>)
            or <c>null</c> if no Parameter Schema is defined.
            </value>
            <remarks>
            A Template can define the parameters it accepts using a Parameter Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent">
            <summary>
            Get access to the Template's binary content.
            </summary>
            <value>A <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent"/> object representing the binary content and its properties.</value>
            <remarks>
            Depending on the <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType"/>, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.Content"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.IWorkflowItem">
            <summary>
            Interface implemented by items that can be part of a workflow process.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.IWorkflowItem.GetProcessDefinition">
            <summary>
            Gets a Process Definition describing the (default) workflow for the item.
            </summary>
            <returns>
            A Process Definition.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.IWorkflowItem.Id">
            <summary>
            Gets the identifier (TCM URI) of the item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.IWorkflowItem.ApprovalStatus">
            <summary>
            Gets the Approval Status of the item.
            </summary>
            <value>
            An <see cref="P:Tridion.ContentManager.Workflow.IWorkflowItem.ApprovalStatus"/> object representing the Approval Status of the item 
            or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Component Template.
            </summary>
            <param name="session">The Session in which the Component Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Component Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Component Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component Template.</param>
            <param name="session">The Session in which the Component Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(Tridion.ContentManager.Data.CommunicationManagement.ComponentTemplateData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Component Template.</param>
            <param name="session">The Session in which the Component Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetProcessDefinition">
            <summary>
            Returns the ProcessDefinition associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
            </summary>
            <returns>
            A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.GetDefaultTemplateId(Tridion.ContentManager.Data.CommunicationManagement.PublicationData)">
            <summary>
            Gets the default TemplateData for a new Template and is default null.
            Derived classes can override this method and can for example get the TemplateData of the default template configured in the Publication.
            The TemplateData is used for the default Content and TemplateType.
            </summary>
            <param name="publicationData">Get the default template from this Publication.</param>
            <returns>The default TcmUri for a new Template.</returns>	
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by Load(LoadFlags,bool), after going to the DAL.
            </summary>
            <remarks>Default implementation only converts WebDAV URLs is requested. Subclasses can override if more post processing is needed.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OnRollingBack(Tridion.ContentManager.Extensibility.Events.RollbackEventArgs,Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Called by Rollback before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <param name="latestVersion">The latest version of this item.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OnCheckingIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OnUndoingCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>       
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title or object is not of dynamic version or item is checked out by another user</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AddNonLocalizableProperties(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds names of the properties that must not be modified in the localized item to the list.
            </summary>
            <param name="propertyNames">List of names of properties that must not be modified.</param>
            <remarks>The list is used in the AssertNonLocalizableProperties() method.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.SetNonLocalizablePropertiesToPropagate(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets non-localizable properties on the specified <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> of a local copy to reflect changes in this (parent) item.
            </summary>
            <param name="localCopyData">Data object of a local copy.</param>
            <param name="propertiesToSet">Names of properties to set.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsComponentPresentationPublished(Tridion.ContentManager.TcmUri,Tridion.ContentManager.TcmUri)">
            <summary>
            Determines whether there is published <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> for <paramref name="schemaUri"/>  and <paramref name="componentTemplateUri"/>. 
            </summary>
            <param name="componentTemplateUri"><see cref="T:Tridion.ContentManager.TcmUri"/> representing <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate"/>.</param>
            <param name="schemaUri"><see cref="T:Tridion.ContentManager.TcmUri"/> representing <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/>.</param>
            <returns>
            	<c>true</c> if there is a published <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> for <paramref name="schemaUri"/>  and <paramref name="componentTemplateUri"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsComponentPresentationPublished(Tridion.ContentManager.TcmUri)">
            <summary>
            Determines whether there is published <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> for <paramref name="componentTemplateUri"/>. 
            </summary>
            <param name="componentTemplateUri"><see cref="T:Tridion.ContentManager.TcmUri"/> representing <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate"/>.</param>
            <returns>
            	<c>true</c> if there is a published <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> for <paramref name="componentTemplateUri"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AssertInUseRelatedSchemasNotRemoved(Tridion.ContentManager.Data.CommunicationManagement.ComponentTemplateData)">
            <summary>
            Asserts that the currently in use Related Schemas are not going to removed.
            </summary>
            <param name="compareTo">The Data Object of the version of the Component Template to compare to.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AssertIsRepositoryPublishableChangeAllowed(Tridion.ContentManager.Data.CommunicationManagement.ComponentTemplateData)">
            <summary>
            Asserts <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsRepositoryPublishable"/> will not change from <c>True</c> to <c>False</c> if there is a published <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> for the Current <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate"/>
            </summary>
            <param name="compareTo">The Data Object of the version to compare to.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsRepositoryPublishable">
            <summary>
            Get or set whether the Component Template renders "dynamic" Component Presentations.
            </summary>
            <value>If <c>true</c>, the Component Template renders "dynamic" Component Presentations.</value>
            <remarks>
            A "dynamic" Component Presentation is published separately instead of being embedded on a Page.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AllowOnPage"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AllowOnPage">
            <summary>
            Get or set whether the Component Template may be used on a Page.
            </summary>
            <remarks>
            This setting only applies to Component Templates which render "dynamic" Component Presentations.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsRepositoryPublishable"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.DynamicTemplate">
            <summary>
            Get or set the "dynamic" part of the Component Template: an XSLT which is executed on the Content Delivery system.
            </summary>
            <value>A string containing the XSLT or an empty string if not applicable.</value>
            <remarks>
            Only applicable if the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OutputFormat"/> is set to "XML Document".
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.Content"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OutputFormat">
            <summary>
            Get or set the format of the rendered Component Presentation.
            </summary>
            <value>The possible values are currently constrained by the system schema (cm_xml.xsd):
            <list type="bullet">
                <item>HTML</item>
                <item>HTML Fragment</item>
                <item>ASP VBScript</item>
                <item>ASP JScript</item>
                <item>JSP Scripting</item>
                <item>Plain Text</item>
                <item>XML Document</item>
                <item>XML Fragment</item>
                <item>ASCX WebControl</item>
                <item>REL</item>
                <item>Other</item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.Priority">
            <summary>
            Get or set the priority used for resolving Component links.
            </summary>
            <remarks>
            The Priority is used by Content Delivery linking to resolve a Component link:
            if a Component is published on multiple Pages, then a choice has to be made to which Page
            the hyperlink should point.
            This decision is made based on the Priority of the Component Template used
            to render the Component: the hyperlink will point to the Page containing
            a Component Presentation with the highest priority.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.RelatedSchemas">
            <summary>
            Get access to the "related" Schemas.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Template.</value>
            <remarks>
            If a Component Template is related to a Schema, it means that the Component Template
            can render Components based on that Schema.
            Component Template - Schema relationships are used to filter Component Templates
            in the GUI. When the user adds a Component Presentation to a Page, he has to
            select a Component and a Component Template. Once the Component is selected,
            the list of Component Templates is filtered: it shows only the Component Templates
            that are related to the Schema that the Component is based on.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.TrackingCategories">
            <summary>
            Get access to the "tracking" Categories.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Template.</value>
            <remarks>
            When rendering a Component using the Component Template,
            code to increment "tracking keys" can get generated by the system.
            Which "tracking keys" will get incremented is determined by the Keywords
            attached to the Component and the Tracking Categories set on the Component Template:
            each Keyword attached to the Component which is part of one of the Tracking Categories
            will result in an associated "tracking key" increment.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Destination">
            <summary>
            Represents a physical destination for the Publisher.
            </summary>
            <remarks>
            Destinations are a part of the definition of a <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/>.
            A Destination specifies where and how the transport package created by the Publisher should be transported.
            Note that this is typically not the final publishing destination, but the location where
            the Deployer picks the transport package up.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Destination.#ctor(System.String,Tridion.ContentManager.ContentManagement.Schema,System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Destination"/> class. 
            </summary>
            <param name="title">
            The title
            </param>
            <param name="protocol">
            The Protocol Schema specifying which protocol to use for transport.
            </param>
            <param name="protocolFields">
            The root elements of the "protocol fields": the values for the fields defined in the Protocol Schema.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Destination.#ctor(Tridion.ContentManager.Data.CommunicationManagement.TargetDestinationData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.Destination"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.Title">
            <summary>
            Get or set the title (display name) of the Destination.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.Protocol">
            <summary>
            Get or set the Protocol Schema.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol"/>).</value>
            <remarks>
            The Protocol Schema specifies which protocol to use for transport and defines
            "protocol fields": parameters needed for the transport.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields">
            <summary>
            Get or set the "protocol fields": parameters needed for the transport.
            </summary>
            <value>
            The root element of the protocol fields XML structure.
            </value>
            <remarks>
            This property provides low-level access to the protocol fields XML.
            It is possible to access the protocol fields through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single protocol field value with the ItemFields API:
            <code>
            PublicationTarget myPubTarget = (PublicationTarget)mySession.GetObject("tcm:0-1-65537");
            Destination myDestination = myPubTarget.Destinations[0];
            ItemFields protocolFields = new ItemFields(myDestination.ProtocolFields, myDestination.Protocol);
            TextField myTextField = (TextField)protocolFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.Protocol"/>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.IPublishLocation">
            <summary>
            Interface used for retrieving the publish location path and/or URL.
            </summary>
            <remarks>
            This interface is implemented by the classes <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> and <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationPath">
            <summary>
            Get the file system path, including the item's own directory/file name and extension.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationUrl">
            <summary>
            Get the URL.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Page">
            <summary>
            Represents a Page: an artifact in the Publication's target structure.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Page.
            </summary>
            <param name="session">The Session in which the Page should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> in which the Page should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Page.
            </summary>
            <param name="id">The identifier (TCM URI) of the Page.</param>
            <param name="session">The Session in which the Page should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PageData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Page.</param>
            <param name="session">The Session in which the Page should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetProcessDefinition">
            <summary>
            Returns the ProcessDefinition associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
            </summary>
            <returns>
            A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Page.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Page.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.AddUniqueProperties(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="previousVersionDataObject">The <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> from the previous checked in version of this <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The FileName property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 512 characters or it contains other characters than "a to z" (both uppercase and lowercase), "0 to 9", "!", "(", ")", "_", "~", ".", "+" or a space.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">A <seealso cref="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate"/> that is added to the ComponentPresentation has a property IsRepositoryPublishable that is true and property AllowOnPage that is false</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The FileName property is not unique</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate"/> property is not set and the IsPageTemplateInherited is false</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the Metadata property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
            		<item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
            		<item><description>the linked item does not exist</description></item>
            		<item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            	</list>
            </exception>        
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.OnCheckingIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.OnUndoingCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.Unload">
            <summary>
            Unloads the current, loaded state and cached binaryContent
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.ValidateSystemConstraints">
            <summary>
            Validates system constraints.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.CommunicationManagement.Page.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.SetDefaultLocationInfo(Tridion.ContentManager.TcmUri,System.String)">
            <summary>
            Set default values for the LocationInfo section.
            </summary>
            <param name="contextPublicationUri">TcmUri of the context publication of a page.</param>
            <param name="directoryPath">The directory path of this Page.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.GetComponentPresentationsFromCurrentState">
            <summary>
            Gets the ComponentPresentations from the CurrentState
            </summary>
            <returns>A list of ComponentPresentations</returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.FileName">
            <summary>
            Get or set the file name.
            </summary>
            <remarks>
            The file name is the Page's physical name in the target structure.
            The file name is subject to the restrictions of the Windows file system.
            The file name does not include the file extension.
            The file extension is determined by the Page Template: <see cref="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.FileExtension"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate">
            <summary>
            Get or set the Page Template used to render the Page.
            </summary>
            <remarks>
            The Page Template can be set explicitly on the Page or be inherited from the containing 
            Structure Group: <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.IsPageTemplateInherited"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.IsPageTemplateInherited">
            <summary>
            Get or set whether the Page Template is inherited from the containing Structure Group.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.ComponentPresentations">
            <summary>
            Get access to the Component Presentations on the Page.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Page.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishPath">
            <summary>
            Get the publish path of the Page.
            </summary>
            <remarks>
            The publish path is formed by a concatenation of the containing 
            Publication's <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath"/> and the intermediary
            Structure Groups' <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/> (recursively).
            The path does not include the Page's own filename or extension.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath">
            <summary>
            Gets the publish path for the Page, including the filename and extension.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationUrl"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationUrl">
            <summary>
            Gets the publish URL for the Page.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PageTemplate">
            <summary>
            Represents a Page Template: a template used to render a Page.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Page Template.
            </summary>
            <param name="session">The Session in which the Page Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Page Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Page Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Page Template.</param>
            <param name="session">The Session in which the Page Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PageTemplateData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Page Template.</param>
            <param name="session">The Session in which the Page Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.OnCheckingIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.OnUndoingCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetDefaultTemplateId(Tridion.ContentManager.Data.CommunicationManagement.PublicationData)">
            <summary>
            Gets the default TemplateData for a new Template and is default null.
            Derived classes can override this method and can for example get the TemplateData of the default template configured in the Publication.
            The TemplateData is used for the default Content and TemplateType.
            </summary>
            <param name="publicationData">Get the default template from this Publication.</param>
            <returns>The default TcmUri for a new Template.</returns>	
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.GetProcessDefinition">
            <summary>
            Returns the ProcessDefinition associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
            </summary>
            <returns>
            A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.FileExtension">
            <summary>
            Get or set the file extension used for Pages based on this Page Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget">
            <summary>
            Represents a Publication Target: a logical target for publishing.
            </summary>
            <remarks>
            A Publication Target represents one or more physical targets ("Destinations") with the
            same logical purpose. For example: a web farm consisting of multiple physical web servers.
            Publication Targets, in turn, are grouped using Target Types.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(Tridion.ContentManager.Data.CommunicationManagement.PublicationTargetData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> class that is pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> class. 
            </summary>
            <param name="session">
            The Session in which the Publication Target should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> class based on the given identifier. 
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Publication Target.
            </param>
            <param name="session">
            The Session in which the Publication Target should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Publication Target.
            </param>
            <param name="session">
            The Session in which the Publication Target should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>
            The <see cref="T:System.Type"/> of the Data Object.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.GetTypeId">
            <summary>
            Gets the type ID for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Unload">
            <summary>
            Unloads the current and loaded state
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
            <remarks></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">Can be used to filter the items based on conditions.</param>
            <returns>
              <c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.
            </returns>
            <remarks>Publication target can't be used by other items now, so method always return <c>false</c> </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Publications">
            <summary>
            Gets access to the Publications which can be published to this Publication Target.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.TargetTypes">
            <summary>
            Gets access to the Target Types to which this Publication Target is attached.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Destinations">
            <summary>
            Gets access to the publisher Destinations for the Publication Target.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Destination"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.TargetLanguage">
            <summary>
            Gets or sets the target (code) language.
            </summary>
            <value>The possible values are currently constrained by the system schema (cm_xml.xsd):
            <list type="bullet">
                <item>ASP/JavaScript</item>
                <item>ASP/VBScript</item>
                <item>JSP</item>
                <item>None</item>
                <item>TCDL</item>
                <item>REL</item>
            </list>
            </value>
            <remarks>
            The target language determines how Content Delivery code (e.g. linking and profiling) gets generated.
            The Content Manager outputs an intermediary language (TCDL), which gets transformed
            by the Deployer (TCDL Transformer) into a language of choice, dependent on the target language setting.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.DefaultCodePage">
            <summary>
            Gets or sets the default code page for the Publication Target.
            </summary>
            <remarks>
            All rendered Pages and dynamic Component Presentations are encoded using the default code page,
            unless a template explicitly overrides the code page.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.MinApprovalStatus">
            <summary>
            Gets or sets the minimal approval status for publishing to this Publication Target.
            </summary>
            <remarks>
            When rendering items that are in workflow, the version in workflow may be rendered,
            but only if its approval status is equal or "higher" than the minimal approval status
            of the Publication Target. Otherwise, the latest checked-in version gets rendered.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Priority">
            <summary>
            Gets or sets the default queue priority.
            </summary>
            <remarks>
            Publish actions towards this Publication Target get queued with the default priority,
            unless explicitly overridden in the publish action.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.StructureGroup">
            <summary>
            Represents a Structure Group: an Organizational Item used to build the Publication's target structure.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrganizationalItem">
            <summary>
            Abstract base class for "organizational items": items used to organize the items in a Repository
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#cctor">
            <summary>
            Static OrganizationalItem constructor
            </summary>
            <remarks>
            Used for creating and populating a dictionary returned by GetChildTypes() method
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Organizational Item.
            </summary>
            <param name="session">The Session in which the OrganizationalItem should be created.</param>
            <param name="parentId">The TCM URI of the parent item in which the OrganizationalItem should be created.
            For root organization items, this is the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Organizational Item.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1">
            <summary>
            Get a new repository-local object of the given type within this Organizational Item.
            </summary>
            <typeparam name="T">The type of the object to create. Must be a sub-type of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></typeparam>
            <returns>A new repository-local object</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1"/>
            <seealso cref="M:Tridion.ContentManager.Session.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Organizational Item.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockFilter</term><description>Specifies a bitmask to apply to the items' LockType. Must be used in combination with LockResult.</description></item>
                <item><term>LockResult</term><description>Only return items with the given LockType (after the LockFilter bitmask has been applied).</description></item>
                <item><term>BasedOnSchema</term><description>Only return Components based on the given Schema(s). Currently not implemented in combination with Recursive.</description></item>
                <item><term>SubType</term><description>Only return item with the given sub-type: <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/>, <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType"/> or template type ID.</description></item>
                <item><term>Recursive</term><description>Specifies whether to include items in contained organizational items (recursively).</description></item>
                <item><term>ShowNewItems</term><description>Specifies whether to include new items (items that have not been checked-in yet).</description></item>
            </list>
            </param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems">
            <summary>
            Get a list of items contained in this Organizational Item.
            </summary>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)">
            <summary>
            Get a list of items contained in this Organizational Item.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Organizational Item as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems">
            <summary>
            Get a list of items contained in this Organizational Item as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)">
            <summary>
            Get a list of items contained in this Organizational Item as XML.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.CanManage(System.Type)">
            <summary>
            Returns whether this OrganizationalItem can contain the specified <paramref name="repositoryLocalObjectType"/>.
            </summary>
            <param name="repositoryLocalObjectType">Type of the repository local object.</param>
            <returns>
            Returns true if this OrganizationItem can contain the specified type. Returns false if not.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.UpdateInternal(System.String)">
            <summary>
            Updates the state of the object from the specified (delta) R5 XML.
            </summary>
            <param name="deltaXml">An XML <see cref="T:System.String"/> that should be valid according to the R5 XML schema.</param>
            <remarks>This method provides functionality for the BL facade to facility the original UpdateXML functionality.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>Sets the access control list.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet">
            <item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The Root Organizational Item must be an inheritance root.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>This override sets View, Edit and Delete actions.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
             Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
             Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>Adds a localized string for the lock type title.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.CreateDeleteEventArgs">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/> for creating the <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> or a derived class.
            </summary>
            <returns>
            The <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> or a derived class.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.OnPrepareDeleteEvent(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called just before the Delete event is delivered.
            This offers the chance to prepare the event arguments if needed.
            </summary>
            <param name="eventArgs">The arguments of the Delete event.</param>
            <remarks>
            The implementation in <c>IdentifiableObject</c> is empty.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.ToR5DeltaXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Gets a delta XML representation of the object.
            </summary>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <returns>
            A string containing the (UTF-8 encoded) XML representation.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.CurrentState"/> property is up-to-date
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.Unload">
            <summary>
            Unloads the current and loaded state
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.AssertCanPublish">
            <summary>
            Verifies if current user is allowed to publish the item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItemsStream(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)">
            <summary>
            Gets a list of items contained in this Organizational Item as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/> that constraints the list of Publications in the XML.</param>
            <returns>A list of items contained in this Organizational Item in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItemsData(Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects in this Organizational Item constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItemsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.OrganizationalItemData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects in this Organizational Item.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.IsPermissionsInheritanceRoot">
            <summary>
            Gets or sets a value indicating whether the item inherits permissions from the parent item.
            </summary>
            <value><c>true</c> if permissions are specified for item itself; otherwise, <c>false</c>, if item inherits permissions from the parent item.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.IsRootOrganizationalItem">
            <summary>
            Gets a value indicating whether the Organizational Item is a root (i.e. its parent is a Publication).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.AccessControlList">
            <summary>
            Gets the Access Control List which is used to restrict access to the Organizational Item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Security.AccessControlList"/> object representing the Access Control List.
            Access Control Entries can be added/removed using the <see cref="P:Tridion.ContentManager.Security.AccessControlList.AccessControlEntries"/> property.
            </value>
            <remarks>
            In general, an Access Control List can specify both Rights and Permissions, but for an Organizational Item only Permissions are used.
            Notice that saving an Organizational Item with empty ACL is not supported. In such case the original ACL will not be modified during saving.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.OrganizationalItem.IsGetListItemsImplementedInR6">
            <summary>
            Gets a value indicating whether getting list of items for this type objects is implemented in R6.
            </summary>
            <value><c>true</c>, if <c>GetListItems</c> is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.</value>
            <remarks>
            Types that doesn't implement <c>GetListItems</c> in R6 must override this property and set it to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#cctor">
            <summary>
            Static StructureGroup constructor
            </summary>
            <remarks>
            Used for creating and populating a dictionary returned by GetChildTypes() method
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(Tridion.ContentManager.Data.CommunicationManagement.StructureGroupData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given data object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Structure Group.
            </summary>
            <param name="session">The Session in which the Structure Group should be created.</param>
            <param name="parentId">The TCM URI of the parent item in which the Structure Group should be created.
            The parent item can be a <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> or a <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> for the root Structure Group.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Structure Group.
            </summary>
            <param name="id">The identifier (TCM URI) of the Structure Group.</param>
            <param name="session">The Session in which the Structure Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Structure Group.</param>
            <param name="session">The Session in which the Structure Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.AddUniqueProperties(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetSecurityPermissions(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for this <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/>.This method validate <see cref="T:Tridion.ContentManager.Security.Permissions"/> represented by <paramref name="demandingPermissions"/> and returns appliable <see cref="T:Tridion.ContentManager.Security.Permissions"/>.Returns <value>Permission.None </value> as <see cref="T:Tridion.ContentManager.Security.Permissions"/> if it is a Root <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>. Otherwise returns the <paramref name="demandingPermissions"/>
            </summary>
            <param name="demandingPermissions"><see cref="T:Tridion.ContentManager.Security.Permissions"/> that are depended  by a particular operation, for example, Localize, Unlocalize and so on .</param>
            <returns>Required <see cref="T:Tridion.ContentManager.Security.Permissions"/>  to perform a particular operation</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetDataObjectType">
            <summary>
            Get the type of the data object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the data object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetContainerType">
            <summary>
            Gets the type of the container that can hold this StructureGroup.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this StructureGroup.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.GetTypeId">
            <summary>
            Get the <see cref="T:Tridion.ContentManager.ItemType"/> for this BL object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.SetDefaultData">
            <summary>
            Sets default property values for a newly created StructureGroup.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>This override sets Search, Publish, UnPublish, RePublish, Copy, Cut, PermissionManaged and WorkflowManaged actions.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            A root structure group cannot be removed while the publication is a parent in a Blueprinting scenario.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The item cannot be deleted if it is in use by another item.</exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet">
              <item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The Root Organizational Item must be an inheritance root.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory">
            <summary>
            Get or set the directory name.
            </summary>
            <remarks>
            The directory name is the Structure Group's physical name in the target structure.
            The directory name is subject to the restrictions of the Windows file system.
            The directory name of the root Structure Group may be empty.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate">
            <summary>
            Get or set the default Page Template.
            </summary>
            <remarks>
            All items contained in the Structure Group which don't have a (default) Page Template
            set explicitly inherit their setting from the Structure Group.
            The Structure Group itself may inherit its default Page Template setting from its parent
            (Structure Group or Publication).
            <para>If the DefaultPageTemplate is set, the IsDefaultPageTemplateInherited property is automatically set to <c>false</c></para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsDefaultPageTemplateInherited"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsDefaultPageTemplateInherited">
            <summary>
            Get or set whether the default Page Template is inherited from the Structure Group's parent.
            </summary>
            <remarks>
            The Structure Group's parent is the containing Structure Group or the Publication in case
            of the root Structure Group.
            Returns true if the IsDefaultPageTemplateInherited property is null.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishPath">
            <summary>
            Get the publish path of the Structure Group.
            </summary>
            <remarks>
            The publish path is formed by a concatenation of the containing 
            Publication's <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath"/> and the intermediary 
            Structure Groups' <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/> (recursively).
            The path does not include the Structure Groups's own directory name.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsActive">
            <summary>
            Gets or sets a value indicating whether this Structure Group and its items can be published or not.
            </summary>
            <remarks>
                <para>
                    The value of this property depends on all of the ancestor Structure Groups of this Structure Group.
                    If any one of the ancestor Structure Groups specifies a <c>false</c> value (indicating that publishing
                    cannot be performed), then this value overrides the value of the descendant Structure Groups.
                    For this property to be <c>true</c>, every ancestor Structure Group of this Structure Group and also
                    this Structure Group itself have to specify a <c>true</c> value for this property.
                </para>
                <para>
                    Setting this property has no effect in the property of the ancestor Structure Groups. Therefore, if you set this property to
                    <c>true</c> and an ancestor Structure Group specifies <c>false</c>, setting the property will not cause the Structure Group
                    to be publishable. If you want a Structure Group to be publishable, you need to ensure that this Structure Group and all of its
                    ancestor Structure Groups have this property set to <c>true</c>.
                </para>
                <para>
                    When a user needs to prevent a set of pages or structures from being published he can do so in two ways:
                    Modify the permissions configured on the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> (Denying access to all users)
                    or setting this property to <c>false</c>. The second option is preferred since it leaves the security model
                    intact thus preventing additional work when the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> becomes active once more.
                </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PageProcess">
            <summary>
            Gets or sets <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> assosiated with the Structure Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath">
            <summary>
            Get the publish path for the Structure Group, including its directory name.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishPath"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl">
            <summary>
            Get the publish URL for the Structure Group.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.CurrentState">
            <summary>
            Get the current state as a data object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.LoadedState">
            <summary>
            Get the last loaded state as a data object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.TargetType">
            <summary>
            Represents a Target Type: a logical target for publishing.
            </summary>
            <remarks>
            When publishing in the Content Manager Explorer, the user selects Target Types.
            Target Types are a abstraction over Publication Targets: 
            multiple Publication Targets can be grouped under one Target Type.
            The primary purpose of this is to use different Publication Targets for different Publications.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> class. 
            </summary>
            <param name="session">The Session in which the Target Type should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> class based on the given identifier.
            </summary>
            <param name="id">The identifier (TCM URI) of the Target Type.</param>
            <param name="session">The Session in which the Target Type should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Target Type.</param>
            <param name="session">The Session in which the Target Type should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(Tridion.ContentManager.Data.CommunicationManagement.TargetTypeData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> class that is pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>Sets the <see cref="P:Tridion.ContentManager.CommunicationManagement.TargetType.AccessControlList"/> for the Target Type.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.ValidateEnumProperties">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/> when saving via the legacy BL.
            </summary>
            <remarks>
            This method validates enumeration properties for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is saved.
            It is used only when saving through legacy BL. After migrating the saving operations, this validation should be moved to the appropriate <see cref="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/> methods.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.GetTypeId">
            <summary>
            Gets the type ID for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>Adds a localized string for the lock type title.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.CommunicationManagement.TargetType.CurrentState"/> property is up-to-date
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.Unload">
            <summary>
            Unloads the current and loaded state
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.UpdateInternal(System.String)">
            <summary>
            Updates the state of the object from the specified (delta) R5 XML. 
            </summary>
            <param name="deltaXml">An XML <see cref="T:System.String"/> that should be valid according to the R5 XML schema.</param>
            <remarks>This method provides functionality for the BL facade to facility the original UpdateXML functionality.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">Can be used to filter the items based on conditions.</param>
            <returns>
              <c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.
            </returns>
            <remarks>This method doesn't use input parameters in respect that we must find only reference to targetTypes without any filters.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.AccessControlList">
            <summary>
            Gets the Access Control List which is used to restrict access to the Target Type.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Security.AccessControlList"/> object representing the Access Control List.
            Access Control Entries can be added/removed using the <see cref="P:Tridion.ContentManager.Security.AccessControlList.AccessControlEntries"/> property.
            </value>
            <remarks>
            In general, an Access Control List can specify both Rights and Permissions, but for a Target Type only <see cref="F:Tridion.ContentManager.Security.Rights.PublishManagement"/> is used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.IsWhereUsedImplemented">
            <summary>
            Gets a value indicating whether this type implements where used functionality.
            </summary>
            <value><c>false</c> for Target Type.</value>
            <remarks>
            	<para>It is used when throwing <see cref="T:Tridion.ContentManager.ItemIsInUseException"/>. When where used is not implemented we want to set ItemIsInUseNoWhereUsed error code to prevent GUI showing Where Used button.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.IsSaveImplementedInR6">
            <summary>
            Gets whether saving of this type objects is implemented in R6.
            </summary>
            <value><c>true</c>, if save is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.</value>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock">
            <summary>
            Represents a Template Building Block: a re-usable template module.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Template Building Block.
            </summary>
            <param name="session">The Session in which the Template Building Block should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Template Building Block should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Template Building Block.
            </summary>
            <param name="id">The identifier (TCM URI) of the Template Building Block.</param>
            <param name="session">The Session in which the Template Building Block should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(Tridion.ContentManager.Data.CommunicationManagement.TemplateBuildingBlockData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Template Building Block.</param>
            <param name="session">The Session in which the Template Building Block should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.GetDefaultTemplateId(Tridion.ContentManager.Data.CommunicationManagement.PublicationData)">
            <summary>
            Gets the default TemplateData for a new Template and is default null.
            Derived classes can override this method and can for example get the TemplateData of the default template configured in the Publication.
            The TemplateData is used for the default Content and TemplateType.
            </summary>
            <param name="publicationData">Get the default template from this Publication.</param>
            <returns>The default TcmUri for a new Template.</returns>	
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BinaryContent">
            <summary>
            Represents the binary content of a Multimedia Component or a template.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BinaryContent.PropertyMultimediaTypeName">
            <summary>The name of the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.MultimediaType"/> property.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BinaryContent.PropertyFilenameName">
            <summary>The name of the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename"/> property.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BinaryContent.PropertyUploadFromFileName">
            <summary>The name of the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.UploadFromFile"/> property.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.BinaryContent.PropertyUploadFromStreamName">
            <summary>The name of the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.UploadFromStream"/> property.</summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.#ctor(Tridion.ContentManager.Data.ContentManagement.BinaryContentData,Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Initializes BinaryContent with the BinaryContentData and Session.
            </summary>
            <param name="data">The data object that stores binary content data.</param>
            <param name="container">The <see cref="T:Tridion.ContentManager.IdentifiableObject"/> for which the BinaryContent should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetByteArray">
            <summary>
            Get the binary data as a byte array.
            </summary>
            <returns>A byte array containing the binary data.</returns>
            <remarks>
            Using a byte array means that the entire binary data has to be stored in memory.
            Alternatively, <see cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)"/> can be used to stream the data to a desired destination.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)">
            <summary>
            Write the binary data to a given stream.
            </summary>
            <param name="binaryStream">The stream to write the binary data to.</param>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetByteArray"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetCurrentBinaryContent">
            <summary>
            Gets the content of the current binary content as array of bytes.
            </summary>
            <returns>Array with binary content data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetProtocolName">
            <summary>
            Extracts the protocol name from the file path.
            </summary>
            <returns>Protocol name.</returns>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException"> if file name contains no protocol or not supported protocol.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetFileSize">
            <summary>
            Retrieves the file size and store in in the property of BinaryContentData.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.AssertValidMultiMediaProperties(System.Collections.Generic.IList{Tridion.ContentManager.ContentManagement.MultimediaType},System.Boolean)">
            <summary>
            Asserts if the multimedia properties for the multimedia <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> are valid.
            </summary>
            <param name="allowedMultiMediaTypes">The allowed multimedia types that are defined by the <seealso cref="T:Tridion.ContentManager.ContentManagement.Schema"/> of the multimedia <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/>.</param>
            <param name="changedToInternalBinaryContent">if set to <c>true</c> a check will be performed if UploadFromFile or UploadFromStream are set.</param>
            <remarks>When the <paramref name="allowedMultiMediaTypes"/> is an empty list, the check for valid multimedia types will not throw an exception</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.MultimediaType">
            <summary>
            Get or set the Multimedia Type of the binary content.
            </summary>
            <remarks>
            This only applies to the binary content of Multimedia Components;
            for templates with binary content, this property is always <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.IsExternal">
            <summary>
            Get or set whether the binary content is stored internally or externally.
            </summary>
            <remarks>
            If the binary content is stored externally, the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename"/> property
            should contain the URL where the binary content can be retrieved.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename">
            <summary>
            Get or set the filename of the binary content.
            </summary>
            <remarks>
            If the binary content is stored externally, this must be the URL with which the binary content can be retrieved.
            If the binary content is stored internally, this should be the original path/filename.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.IsExternal"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.FileSize">
            <summary>
            Get the size of the binary data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.UploadFromStream">
            <summary>
            Gets or sets the <see cref="T:System.IO.Stream"/> with BinaryContent for this item.
            </summary>
            <remarks>
            Either the UploadFromStream or UploadFromFile property can be set to indicate the BinaryContent. Both are properties of the BinaryContent object. 
            If the content is stored as a local file, the UploadFromFile should be set to its path.
            If the content is not accessible as a file, the UploadFromStream can be set to any standard <see cref="T:System.IO.Stream"/> object, which can provide data for the content.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.UploadFromFile">
            <summary>
            Gets or sets the UploadFromFile with BinaryContent for this item. This must be a file path.
            </summary>
            <remarks>
            Either the UploadFromStream or UploadFromFile property can be set to indicate the BinaryContent. Both are properties of the BinaryContent object. 
            If the content is stored as a local file, the UploadFromFile should be set to its path.
            If the content is not accessible as a file, the UploadFromStream can be set to any standard <see cref="T:System.IO.Stream"/> object, which can provide data for the content.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Category">
            <summary>
            Represents a Category of Keywords.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#cctor">
            <summary>
            Static Category constructor
            </summary>
            <remarks>
            Used for creating and populating a dictionary returned by GetChildTypes() method
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(Tridion.ContentManager.Data.ContentManagement.CategoryData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Category.
            </summary>
            <param name="session">The Session in which the Category should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Category.
            </summary>
            <param name="id">The identifier (TCM URI) of the Category.</param>
            <param name="session">The Session in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Category.</param>
            <param name="session">The Session in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywordByTitle(System.String)">
            <summary>
            Gets a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> within this <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> based on its title.
            </summary>
            <param name="title">The title of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/>.</param>
            <returns>A <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> object.</returns>
            <exception cref="T:Tridion.ContentManager.ItemDoesNotExistException">If no <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> exists in this Category by the specified title.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords in this Category.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>LimitResult</term><description>Limit the number of Keywords returned in the list to this number.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords">
            <summary>
            Gets a list of Keywords in this Category.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.ContentManagement.KeywordsFilter)">
            <summary>
            Get a list of Keywords in this Category.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords.</param>
            <returns>A list of Keyword objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.ContentManagement.KeywordsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords in this Category as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords">
            <summary>
            Get a list of Keywords in this Category as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.ContentManagement.KeywordsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.ContentManagement.KeywordsFilter)">
            <summary>
            Get a list of Keywords in this Category as XML.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords.</param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.ContentManagement.KeywordsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywordsData(Tridion.ContentManager.ContentManagement.KeywordsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.KeywordData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.KeywordsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.KeywordsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.KeywordData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.KeywordData"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of child Categories.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. No conditions are currently supported.
            </param>
            <returns>A list of Category objects.</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories">
            <summary>
            Get a list of child Categories.
            </summary>
            <returns>A list of Category objects.</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.ContentManagement.ChildCategoriesFilter)">
            <summary>
            Get a list of child Categories.
            </summary>
            <param name="filter">Can be used to filter the result of Categories.</param>
            <returns>A list of Category objects.</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.ContentManagement.ChildCategoriesFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of child Categories as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="T:Tridion.ContentManager.ContentManagement.ChildCategoriesFilter"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories">
            <summary>
            Get a list of child Categories as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.ContentManagement.ChildCategoriesFilter)">
            <summary>
            Get a list of child Categories as XML.
            </summary>
            <param name="filter">Can be used to filter the result of Categories.</param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.ContentManagement.ChildCategoriesFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListPathToCategory">
            <summary>
            Get the path from the root of the taxonomy to this Category.
            </summary>
            <returns>The root element of the path structure (tcm:ListPathToCategory).</returns>
            <remarks>
            <para>The path structure is a set of nested tcm:Category elements starting at the root Category.
            For the root Category, the Keywords are included (in a tcm:ListKeywords element).</para>
            <para>The main use case for this method is rendering a taxonomy tree which can be used to select Keywords from the given Category. 
            Assuming that the taxonomy tree will be on-demand loaded, only the top-level Keywords are included.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListPathToCategory(Tridion.ContentManager.ContentManagement.PathToCategoryFilter)">
            <summary>
            Get the path from the root of the taxonomy to this Category.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            If <c>null</c>, no filtering occurs and the default set of attributes is used.
            Currently, no conditions are supported.
            </param>
            <returns>The root element of the path structure (tcm:ListPathToCategory).</returns>
            <remarks>
            <para>The path structure is a set of nested tcm:Category elements starting at the root Category.
            For the root Category, the Keywords are included (in a tcm:ListKeywords element).</para>
            <para>The main use case for this method is rendering a taxonomy tree which can be used to select Keywords from the given Category. 
            Assuming that the taxonomy tree will be on-demand loaded, only the top-level Keywords are included.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Category.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Category.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetSecurityPermissions(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for this <see cref="T:Tridion.ContentManager.IdentifiableObject"/>.This method validate <see cref="T:Tridion.ContentManager.Security.Permissions"/> represented by <paramref name="demandingPermissions"/> and returns appliable <see cref="T:Tridion.ContentManager.Security.Permissions"/>.
            </summary>
            <param name="demandingPermissions"><see cref="T:Tridion.ContentManager.Security.Permissions"/> that are depended by a particular operation, for example, Localize, Unlocalize and so on .</param>
            <returns>Required <see cref="T:Tridion.ContentManager.Security.Permissions"/> to perform a particular operation</returns>
            <remarks>
            Since category is a Root <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>, <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for any operation on <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> is <value>Permission.None</value>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetUsingItemsFilter">
            <summary>
            Determines the filter options that are needed for the <see cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> function
            </summary>
            <returns>an UsingItemsFilter with additional properties set (if appropriate)</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.ContentManagement.Category.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the CurrentState property (typically: collections of TOM.NET objects).
            When this method is called, the CurrentState property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.ContentManagement.Category.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.Unload">
             <summary>
             Unloads the current and loaded state
             </summary>
             <remarks>
             This method should be called after performing a DAL operation that is known to invalidate the loaded state.
             By unloading the state, a re-load is forced if the state is accessed later.
             NOTE: this also discards any unsaved changes.
            
             If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
             </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
            Invalidate the categories xsd before unlocalization of a category.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business rule : - Security check for Delete permissions
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnDeleted(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnCopying(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Copy(Tridion.ContentManager.ContentManagement.OrganizationalItem,System.Boolean)"/>, before going to the BL. Copying of Categories is not yet supported.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnMoving(Tridion.ContentManager.Extensibility.Events.MoveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)"/>, before going to the BL. Moving of Categories is not supported.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnClassifying(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Validates that this item can be classified. Called by RepositoryLocalObject.Classify().
            Classification is not supported for Category.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnUnClassifying(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Validates that this item can be unclassified. Called by RepositoryLocalObject.UnClassify().
            Classification is not supported for Category.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnReClassifying(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Validates that this item can be reclassified. Called by RepositoryLocalObject.ReClassify().
            Classification is not supported for Category.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.Category.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet">
              <item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The Root Organizational Item must be an inheritance root.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">Invalid value is entered for the <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.XmlName"/>. The value must start with a letter or underscore. And remainder part can contain letters, digits, periods, hypens or underscores.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">Unexpected schema purpose of <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.KeywordMetadataSchema"/>.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">It is not allowed to add more than one Category in AllowedParentCategories.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">Unable to add the Allowed parent category. The Allowed parent category caused a cyclic loop.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Description property is not set or an empty string. This exception is also thrown if the length of the Description is exceeding 255 characters.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">It is not possible to update <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.XmlName"/> for existing Category.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">It is not possible to change the UseForNavigation property of a Category when allowed parent Categories have been specified.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.AddNonLocalizableProperties(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds names of the properties that must not be modified in the localized item to the list.
            </summary>
            <param name="propertyNames">List of names of properties that must not be modified.</param>
            <remarks>The list is used in the AssertNonLocalalizableProperties() method.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.AddUniqueProperties(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.SetNonLocalizablePropertiesToPropagate(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets non-localizable properties on the specified <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> of a local copy to reflect changes in this (parent) item.
            </summary>
            <param name="localCopyData">Data object of a local copy.</param>
            <param name="propertiesToSet">Names of properties to set.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywordByTitle(System.Xml.XmlElement)">
            <summary>
            Gets a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> within this <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> based on its title.
            </summary>
            <param name="keywordElement">An <see cref="T:System.Xml.XmlElement"/> containing a Keyword.</param>
            <returns>A <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywordDataByTitle(System.String)">
            <summary>
            Gets a <see cref="T:Tridion.ContentManager.Data.ContentManagement.KeywordData"/> object representing a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> inside this <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> 
            with the specified <paramref name="title"/>.
            </summary>
            <param name="title">The title of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/>.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Data.ContentManagement.KeywordData"/> by its title.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywordByTitleFromList(System.String)">
            <summary>
            Gets a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> within this <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> based on its title.
            </summary>
            <param name="title">The title of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/>.</param>
            <returns>A <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> object.</returns>
            <remarks>
            If no Keyword with the given title exists within the Category, an <see cref="T:Tridion.ContentManager.ItemDoesNotExistException"/> is thrown.
            If a cache is attached to the <see cref="T:Tridion.ContentManager.Session"/>, the Keyword Title-Id mappings are cached in a region called "KeywordTitleMapping".
            The second cache in a region "CategoryKeywordList" is a dictionary of titles and identifiers of Keywords. This cache uses 
            Category's title as a key.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Gets the keywords for this Category.
            </summary>
            <param name="id">The TcmUri identifier of the Category.</param>
            <param name="session">The session.</param>
            <returns></returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.XmlName">
            <summary>
            Get or set the XML (type) name of the Category.
            </summary>
            <remarks>
            Each publication contains a "Categories XSD" in which all Categories and their Keywords
            are defined. In this Categories XSD, each Category is represented as a complex type with this name.
            The XML name is subject to the restrictions specified for type names in XML Schemas:
            <list type="bullet">
            <item>The first character must be a letter or an underscore.</item>
            <item>Following characters may be letters, digits, underscores, dashes or dots.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation">
            <summary>
            Gets or sets a value indicating whether the taxonomy in this Category can be published.
            </summary>
            <remarks>
            Before SDL Tridion 2009 the behavior was get or set whether the taxonomy can be used for navigation.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.IsRoot">
            <summary>
            Get whether the Category is a root Category (i.e. it has no allowed parent Categories other than itself).
            </summary>
            <remarks>
            <para>This property has been deprecated. Use <see cref="P:Tridion.ContentManager.ContentManagement.Category.IsTaxonomyRoot"/> instead.</para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.IsTaxonomyRoot"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.IsTaxonomyRoot">
            <summary>
            Get whether the Category is a root Category (i.e. it has no allowed parent Categories other than itself).
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.UseForIdentification">
            <summary>
            Gets or sets indicating whether the Category can be used for Taxonomy identification.
            </summary>
            <remarks>
            Specifies whether to enforce title uniqueness in the whole Blueprint structure on components that are classified with keywords from this Category.
            For example, Components can be classified by a Keyword if there is no other Component with the same title classified with this Keyword.
            Can be configurable only on root Categories. Throws <see cref="T:Tridion.ContentManager.InvalidPropertyValueException"/> if configured in non-root Categories.
            Title uniqueness check is performed on Component with fields that contains Keyword from Category with UseForIdentification set to true.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories">
            <summary>
            Get access to the allowed parent Categories.
            </summary>
            <value>A collection of Category objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            Keywords from this Category are allowed to have parent Keywords from the allowed parent categories.
            Current implementation allows only one parent category. By default when no parent category is set the category itself is added as allowed parent category. 
            Clear the collection before assigning or changing the parent.
            To remove parent categories clear the collection and add itself to the collection.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.IsTaxonomyRoot"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.Description">
            <summary>
            Get or set the description of the Category.
            </summary>
            <remarks>
            The description can be used for informational purposes.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Category cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.Metadata">
            <summary>
            Gets or sets the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Category cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.KeywordMetadataSchema">
            <summary>
            Gets or sets the metadata Schema for the Keywords in this Category.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Component">
            <summary>
            Represents a Component: a generic holder of content and metadata.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Component.
            </summary>
            <param name="session">The Session in which the Component should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Component.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(Tridion.ContentManager.Data.ContentManagement.ComponentData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.ContentManagement.Component.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            .
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.Unload">
            <summary>
            Unloads the current, loaded state and cached binaryContent
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Component.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Component.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>        
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.AssertSystemRepository(Tridion.ContentManager.TcmUri)">
            <summary>
            Throws an exception if the organizational item that contains this object is System Repository
            </summary>
            <param name="uri">The parent item's identifier</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.FillPathInfo(Tridion.ContentManager.Data.PathInfo)">
            <summary>
            Sets additional properties on a <see cref="T:Tridion.ContentManager.Data.PathInfo"/> instance.
            </summary>
            <param name="pathInfo">A PathInfo object on which to set path information to construct a WebDAV URL.</param>
            <remarks>This method can be overridden in a derived class to set additional properties on the <see cref="T:Tridion.ContentManager.Data.PathInfo"/> object. By default,
            the <see cref="P:Tridion.ContentManager.Data.PathInfo.FullPath"/> and <see cref="P:Tridion.ContentManager.Data.PathInfo.ItemType"/> properties are set.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
             Validates that this component can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
             Called by RepositoryLocalObject.UnLocalize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnClassified(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Post-processing for RepositoryLocalObject.Classify() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnReClassified(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Post-processing for RepositoryLocalObject.ReClassify() method.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and the MultimediaType is not set</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and the MultimediaType is not allowed by AllowedMultimediaTypes of the selected <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and the Filename is set to null or an empty string</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and the Filename has a file extension that is not allowed by FileExtensions of the selected <seealso cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is external and the UploadedFilename or ContentStream are set</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is external and the Filename does not specify a supported protocol</exception>
            <exception cref="T:Tridion.ContentManager.KernelException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and the filesize could not be retrieved</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is not external and the UploadedFilename or ContentStream are not set for a new <see cref="T:Tridion.ContentManager.ContentManagement.Component"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is not external and the UploadedFilename or ContentStream are not set for a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> that was external and changed to not external</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is not external and the file specified by UploadedFilename does not exist</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is Multimedia and BinaryContent is not external and the UploadedFilename and ContentStream are both set</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.ContentManagement.Component.ComponentType"/> is not Multimedia and the <see cref="P:Tridion.ContentManager.ContentManagement.Component.BinaryContent"/> is set</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.ContentManagement.Component.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> has changed</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the Metadata property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
            		<item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
            		<item><description>the linked item does not exist</description></item>
            		<item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            	</list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <remarks>
            Starts a workflow when the item implements <seealso cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/> and <see cref="M:Tridion.ContentManager.ContentManagement.Component.GetProcessDefinition"/> returns a <seealso cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/>.
            Saves the actual UploadedFilename or ContentStream when it is new or has been changed for a <see cref="T:Tridion.ContentManager.ContentManagement.Component"/> after it is saved.
            Validates if Component has unique Title across components classified with the same keywords with Category marked as Structure.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnCheckingIn(Tridion.ContentManager.Extensibility.Events.CheckInEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.CheckIn"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnUndoingCheckOut(Tridion.ContentManager.Extensibility.Events.UndoCheckOutEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.UndoCheckOut(System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnCopied(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by Copy method, after going to the BL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.SetNonLocalizablePropertiesToPropagate(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets non-localizable properties on the specified <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> of a local copy to reflect changes in this (parent) item.
            </summary>
            <param name="localCopyData">Data object of a local copy.</param>
            <param name="propertiesToSet">Names of properties to set.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
            <remarks>
            By default, all Links provided by <see cref="M:Tridion.ContentManager.Data.IdentifiableObjectData.CollectLinks(System.Boolean)"/> are included in the batch.
            Subclasses that have XML properties which can have XLink elements should override this method to add those to the batch.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.ValidateXml">
            <summary>
            Validates the xml content of <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>.
            </summary>
            <remarks>
            ValidateXml validates following : 
            <para>
                <list type="Bullet">
                        <item>
                                Validate the XML against XML Schema Definition Language (XSD) schemas.
                                Schemas that are used for Validation are retrieved from <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> of Component. 
                        </item>
                        <item>
                                Validates all the xLink reference in Xml. If there is any Component Link inside Xml, then it 
                                also checks whether it is valid component for this Component. For example, it checks Linktype,
                                AllowMultimediaLinks,AllowedTargetSchemas values in Schema to verify valid component link.
                        </item>
                        <item>
                                For every Keyword , it adds xlink:href. 
                        </item>
                </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.AssertValidRootContentElements(System.Xml.Schema.XmlSchemaSet,System.String)">
            <summary>
            Verify whether the Root Element in Xml Content is Valid according to the <paramref name="xmlSchemaSet"/>
            </summary>
            <param name="xmlSchemaSet"><see cref="T:System.Xml.Schema.XmlSchemaSet"/> used to verify the XmlContent</param>
            <param name="rootTargetNamespace">string representing Target Namespace of the Root Elements.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.AddNonLocalizableProperties(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds names of the properties that must not be modified in the localized item to the list.
            </summary>
            <param name="nonLocalizableProperties">List of names of the non-localizable properties.</param>
            <remarks>The list is used in the AssertNonLocalalizableProperties method, where the actual check is performed.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.OnRolledBack(Tridion.ContentManager.Extensibility.Events.RollbackEventArgs,Tridion.ContentManager.Workflow.ProcessDefinition,Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.Rollback(System.Boolean,System.String)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <param name="processDefinition">Process Definition to be used for Workflow (if any).</param>
            <param name="latestVersion">Latest version of this item.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.GetProcessDefinition">
            <summary>
            Returns the ProcessDefinition associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
            </summary>
            <returns>
            	A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> associated with the <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.AssertIdentificationUniquenessConflicts(Tridion.ContentManager.TcmUri)">
            <summary>
             Validates if Component has unique Title across components classified with the same keywords with Category marked as <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForIdentification"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.AssertValidMandatorySchema(Tridion.ContentManager.Data.ContentManagement.SchemaData)">
            <summary>
            Verifies that if there is a mendatory schema mentioned in Parent OrganizationalItem(/Folder), this Component is using that schema.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.SetComponentType(Tridion.ContentManager.Data.ContentManagement.SchemaData)">
            <summary>
            Sets the ComponentType of this Component.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.IsBasedOnTridionWebSchema">
            <summary>
            Determine whether the Component is based on a Tridion Web Schema
            </summary>
            <remarks>
            When saving a Schema, its content model is analyzed to determine whether it is simple enough
            to qualify as "Tridion Web Schema".
            Components which are based on a Tridion Web Schema can be edited using a form-based User Interface
            in the Content Manager Explorer.
            Furthermore, their content can be accessed using the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            Note that the metadata can always be accessed using the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.ComponentType">
            <summary>
            Get the type of the Component (Normal or Multimedia).
            </summary>
            <remarks>
            This type is derived from the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> on which the Component is based.
            Components with type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> are often referred to as "Multimedia Components".
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.MetadataSchema">
            <summary>
            Get the Schema for the item's metadata
            </summary>
            <remarks>
            Components are based on a Schema that defines the structure of both the content and metadata.
            Therefore, the MetadataSchema property is the same as the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/>.
            Setting the Schema should be done through the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> property.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.Schema">
            <summary>
            Get or set the Schema for the Component's content and metadata.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component"/>).</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.Content">
            <summary>
            Get or set the Component's XML content.
            </summary>
            <value>
            The root element of the XML content or <c>null</c> for Multimedia Components.
            </value>
            <remarks>
            This property provides low-level access to the XML content.
            If the Component is based on a Tridion Web Schema, it is possible to access the contents
            through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single content field value with the ItemFields API:
            <code>
            Component myComponent = (Component)mySession.GetObject("tcm:1-8");
            ItemFields contentFields = new ItemFields(myComponent.Content, myComponent.Schema);
            TextField myTextField = (TextField)contentFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.BinaryContent">
            <summary>
            Get access to the Component's binary content.
            </summary>
            <remarks>
            Only Multimedia Components (i.e. Component based on a Multimedia Schema) have binary content.
            For "normal" Components, which have XML content instead, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField">
            <summary>
            Represents a Component link field.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemField">
            <summary>
            Abstract base class for an Item Field representing a field in content/metadata.
            </summary>
            <remarks>
            For each field type, a subclass of ItemField is defined.
            These subclasses expose strongly-typed properties to access the value(s) of the field.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemField"/> class. Initializes the field type registry.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema Field Definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition (factory method).
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An ItemField-derived object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.GetFieldElements(System.Xml.XmlElement)">
            <summary>
            Get the XML elements for this field.
            </summary>
            <param name="parentElement">The XML parent element in which to search.</param>
            <returns>An XmlNodeList containing zero or more XML elements.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Name">
            <summary>
            Get the field name (the XML name as defined in the Schema).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Definition">
            <summary>
            Get the definition of the field as specified in the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Session">
            <summary>
            Get the Session in which the object is created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.SchemaFieldElement">
            <summary>
            Get the root element of the Schema Field Definition
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A Component object representing the linked Component or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of Component objects representing the linked Components. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition">
            <summary>
            Represents a Component link field definition (in a Schema).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition">
            <summary>
            Abstract base class for Item Field Definitions (specified in a Schema)
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Definition"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.#cctor">
            <summary>
            Class constructor. Initializes the field type registry.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.ItemFieldDefinitionData)">
            <summary>
            Creates a new instance for a given Data Object.
            </summary>
            <param name="data">The Data Object to use as state.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.ItemFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance for a given Data Object.
            </summary>
            <param name="data">The Data Object to use as state.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition XML representation (factory method).
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An ItemFieldDefinition-derived object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CreateInstance(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Creates an instance based on a given element definition in the Schema Object Model (factory method).
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An ItemFieldDefinition-derived object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetAppInfoElement(System.Xml.XmlElement)">
            <summary>
            Gets the appinfo child from the passed in element, if does not exist creates one and returns.
            </summary>
            <param name="element">The field element which should contain the appinfo element.</param>
            <returns>Returns the appinfo element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.AddAppInfo(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Appends an element to the appinfo node.
            </summary>
            <param name="element">The field element which should contain the appinfo element.</param>
            <param name="infoElement">The element that should be added to the appinfo element.</param>
            <returns>Returns the appinfo element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetRestrictionElement(System.Xml.XmlElement)">
            <summary>
            Gets the restriction child element from the passed in element, if does not exist creates one and returns.
            </summary>
            <param name="element">The field element which should contain the restriction element.</param>
            <returns>Returns the restriction element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.AddRestrictionElement(System.Xml.XmlElement,System.String)">
            <summary>
            Appends an element to the restriction node.
            </summary>
            <param name="element">The field element which should contain the restriction element.</param>
            <param name="localName">The name of the element that should be added to the restriction element.</param>
            <returns>Returns the restriction element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.AddXLinkElement(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds a XLink element to the given element's child using the passed <paramref name="localName"/> and <paramref name="href"/>.
            </summary>
            <param name="element">The element under which the XLink element should be added.</param>
            <param name="localName">The name of the XLink element that should be added.</param>
            <param name="href">The href of the xlink element.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
            <remarks>This does NOT set the Description property; <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.ReadDescription(System.Xml.XmlElement,System.Boolean,Tridion.ContentManager.TcmUri)"/> is used for that.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Validate">
            <summary>
            Validates values of current <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition"/> instance
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
            <remarks>
            Subclasses that maintain state next to the CurrentState property must override this method
            and update the CurrentState property so that it is in sync with the other state.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.ReadDescription(System.Xml.XmlElement,System.Boolean,Tridion.ContentManager.TcmUri)">
            <summary>
            Sets the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Description"/> property, based on the labels defined in the XSD.
            </summary>
            <param name="labelsElement">The XML element representing the tcm:Labels defined in the XSD. May be null if no labels are defined.</param>
            <param name="isMetadataField">Specifies whether the field is a metadata field.</param>
            <param name="contextSchemaUri">If this is an embedded field, the TCM URI of the embedded Schema. Otherwise, <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetFieldType(System.Xml.Schema.XmlSchemaElement)">
            <summary>
            Gets an ItemFieldDefinition subclass based on a given type definition in the Schema Object Model.
            </summary>
            <param name="schemaElement">The element definition from the Schema Object Model.</param>
            <returns>A concrete ItemFieldDefinition subclass.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetField(Tridion.ContentManager.Data.ContentManagement.Fields.ItemFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Get a Item Field Business Object for a given Data Object.
            </summary>
            <param name="data">The Data Object to be used as (pre-loaded) state.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>The Business Object</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.XmlConvertToDouble(System.String,System.String)">
            <summary>
            Convert text to double. Change error codes.
            </summary>
            <param name="propertyname">The propertyname.</param>
            <param name="text">The text to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.XmlConvertToDateTime(System.String,System.String)">
            <summary>
            Convert text to DateTime. Change error codes.
            </summary>
            <param name="propertyname">The propertyname.</param>
            <param name="text">The text to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.XmlConvertToInt(System.String,System.String)">
            <summary>
            Convert text to int. Change error codes.
            </summary>
            <param name="propertyname">The propertyname.</param>
            <param name="text">The text to parse.</param>
            <returns></returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Name">
            <summary>
            Gets or sets the XML name of the field.
            </summary>
            <remarks>
            A field's values are contained in XML elements with this name as (local) name.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Description">
            <summary>
            Gets or sets the description/label of the field.
            </summary>
            <remarks>
            The description is used as labels in the Content Manager Explorer form-based editor.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CustomUrl">
            <summary>
            Gets or sets the custom URL of the field.
            </summary>
            <remarks>
            If a custom URL is defined, the CME hyperlinks the label using this URL as hyperlink.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MinOccurs">
            <summary>
            Gets or sets the minimum occurrence of the field.
            </summary>
            <remarks>
            The minimum occurrence specifies the minimum number of values that the field must have.
            Typical occurrence values are 0 (optional field) and 1 (required field).
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MaxOccurs"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MaxOccurs">
            <summary>
            Gets or sets the maximum occurrence of the field.
            </summary>
            <remarks>
            The maximum occurrence specifies the maximum number of values that field may have.
            Typical occurrence values are 1 (single valued field) and -1 (multi valued field).
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MinOccurs"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.ExtensionXml">
            <summary>
            Gets the extension XML element which can contain any custom data.
            </summary>
            <value>
            The extension XML element (the root element name is (must be) always tcm:ExtensionXml).
            </value>
            <remarks>
            This property is new in the 2011 SP1 version.
            The recommended way of storing the extension data is to create an element inside the tcm:ExtensionXml element and then store all the specific information below that element.
            To access the extension data, first try to select the application's parent element - if it doesn't exist, create one by adding a child element to the ExtensionXml root element.
            The content of this property is shared between all add-on applications, so every application must take that into account and do not accidentally delete or overwrite information not belonging to it.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name. 
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.ComponentLinkFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.Validate">
            <summary>
            Validates values of current <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition"/> instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.AllowMultimediaLinks">
            <summary>
            Gets or sets whether links to Multimedia Components are allowed.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the Component used as default field's value.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.AllowedTargetSchemas">
            <summary>
            Gets access to the allowed Schemas for the linked Components.
            </summary>
            <value>
            A list of Schema objects representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition">
            <summary>
            Represents a Keyword field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.KeywordFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.Validate">
            <summary>
            Validates values of current <see cref="T:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition"/> instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.Category">
            <summary>
            Gets or sets the Category in which the Keywords must reside.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A Keyword object or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A ListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition">
            <summary>
            Represents an embedded schema field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.EmbeddedSchemaFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.Expand(System.Xml.XmlElement)">
            <summary>
            Expands the embedded field definition by filling the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.EmbeddedFields"/> collection.
            </summary>
            <param name="labelsElement">The XML element representing the tcm:Labels defined in the XSD. May be null if no labels are defined.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.Expand(System.Xml.XmlElement,System.Collections.Generic.IList{Tridion.ContentManager.TcmUri})">
            <summary>
            Expands the embedded field definition by filling the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.EmbeddedFields"/> collection.
            </summary>
            <param name="labelsElement">The XML element representing the tcm:Labels defined in the XSD. May be null if no labels are defined.</param>
            <param name="existingUri">List of TcmUri which already exist.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.EmbeddedSchema">
            <summary>
            Gets or sets the Schema that defines the embedded fields.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.EmbeddedFields">
            <summary>
            Gets a List of embedded field definitions.
            </summary>
            <remarks>
            This property is only set if the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> collection is read with embedded fields expanded.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition">
            <summary>
            Represents an external link field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.ExternalLinkFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default URL link or <c>null</c> if no default value is defined.
            </value>
            <remarks>
            Setting this property is currently not supported and will have no effect.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition">
            <summary>
            Represents a Multimedia link field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.MultimediaLinkFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.Validate">
            <summary>
            Validates values of current <see cref="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition"/> instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A Component object (must be of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/>) representing the default value
            or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.AllowedTargetSchemas">
            <summary>
            Gets access to the allowed Schemas for the linked Multimedia Components.
            </summary>
            <value>
            A list of Schema objects (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/>) representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition">
            <summary>
            Represents a number field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.NumberFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMinValueExclusive">
            <summary>
            Gets or sets whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MinValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMaxValueExclusive">
            <summary>
            Gets or sets whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MaxValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MinValue">
            <summary>
            Gets or sets the minimum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMinValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MaxValue">
            <summary>
            Gets or sets the maximum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMaxValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A nullable floating-point value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.TotalDigits">
            <summary>
            Gets or sets the constraint on the total number of digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the total number of digits is not defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.FractionDigits">
            <summary>
            Gets or sets the constraints on the number of fraction digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the number of fraction digits is not defined.
            </value>
            <remarks>
            If only integer values are allowed, this constraint should be set to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A NumberListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed number field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ListDefinition">
            <summary>
            Provides information about how a list of values should be represented to the user.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.#ctor">
            <summary>
            Creates a new general ListDefinition instance
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.ListDefinitionData)">
            <summary>
            Creates an instance with a given Data Object as state.
            </summary>
            <param name="data">A ListDefinitionData-derived Data Object to be used as state.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.WriteToXsd(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            This method adds the list information of the XSD field.
            </summary>
            <param name="appInfo">The <see cref="T:System.Xml.XmlElement"/> where the list information will be added.</param>
            <param name="restrictionInfo">The <see cref="T:System.Xml.XmlElement"/> where the list values will be added.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement)">
            <summary>
            Read the state from a given element definition in the Schema Object Model.
            </summary>
            <param name="schemaElement">The element definition in the Schema Object Model.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Type">
            <summary>
            Gets or sets the list type (drop-down, checkboxes, radio buttons, etc.)
            </summary>
            <remarks>
            If the value is <see cref="F:Tridion.ContentManager.ContentManagement.Fields.ListType.None"/>, no allowed values are presented.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Height">
            <summary>
            Gets or sets the height of the list (if applicable).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.NumberListDefinitionData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition.WriteToXsd(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            This method adds the list information of the XSD field.
            </summary>
            <param name="appInfo">The <see cref="T:System.Xml.XmlElement"/> where the list information will be added.</param>
            <param name="restrictionInfo">The <see cref="T:System.Xml.XmlElement"/> where the list values will be added.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition.Entries">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A list of floating-point values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed date field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.DateListDefinitionData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition.WriteToXsd(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            This method adds the list information of the XSD field.
            </summary>
            <param name="appInfo">The <see cref="T:System.Xml.XmlElement"/> where the list information will be added.</param>
            <param name="restrictionInfo">The <see cref="T:System.Xml.XmlElement"/> where the list values will be added.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition.Entries">
            <summary>
            Gets access to the allowed values.
            </summary>
            <value>
            A list of DateTime values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition">
            <summary>
            Represents a date field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.DateFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMinValueExclusive">
            <summary>
            Gets or sets whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MinValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMaxValueExclusive">
            <summary>
            Gets or sets whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MaxValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MinValue">
            <summary>
            Gets or sets the minimum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMinValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MaxValue">
            <summary>
            Gets or sets the maximum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMaxValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A nullable DateTime value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A DateListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields">
            <summary>
            Represents the set of content/metadata field definitions in a Schema.
            </summary>
            <remarks>
            Two subsets of fields are distinguished: <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields"/> and <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields"/>.
            It depends on the <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/> which of these subsets are present:
            <list type="table">
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component"/></term>
                    <description>Both subsets are present, unless the content is complex (in which case only the MetadataFields subset is present).</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/></term>
                    <description>Only the MetadataFields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/></term>
                    <description>Only the MetadataFields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Embedded"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Creates an instance based on a given Schema.
            </summary>
            <param name="schema">The Schema from which to get the field definitions.</param>
            <remarks>Embedded field definitions are not expanded.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(Tridion.ContentManager.ContentManagement.Schema,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class.
            </summary>
            <param name="schema">The schema.</param>
            <param name="expandEmbeddedFields">Indicates whether embedded field definitions should be expanded.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(Tridion.ContentManager.ContentManagement.Schema,System.Boolean,System.Boolean)">
            <summary>
            Creates an instance based on a given Schema.
            </summary>
            <param name="schema">The Schema from which to get the field definitions.</param>
            <param name="expandEmbeddedFields">Indicates whether embedded field definitions should be expanded.</param>
            <param name="validate">Indicates whether appinfo fields need validate</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.SchemaFieldsData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class from a given Data Object. 
            </summary>
            <param name="data">
            The Data Object to be used as current state.
            </param>
            <param name="session">
            The Session to use.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Schema,System.String,System.String,Tridion.ContentManager.ContentManagement.SchemaPurpose,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class from a given R5 Schema Fields Xml. 
            </summary>
            <param name="schemaFieldsElement">R5 Schema Fields Xml from where fields definition will be deserialized.</param>
            <param name="schema">For delta update pass the the Schema object to get the Old XSD. Can be null if not delta update.</param>
            <param name="rootElementName">The Root Element name of the Schema.</param>
            <param name="nameSpaceUri">The Namespace Uri of the Schema.</param>
            <param name="schemaPurpose">The Purpose of the schema.</param>
            <param name="session">The Session to use.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.ToXsd">
            <summary>
            Gets an XSD representation of the schema field definitions.
            </summary>
            <returns>The XSD root element.</returns>
            <remarks>
            The XSD representation can be used to set a Schema's <see cref="P:Tridion.ContentManager.ContentManagement.Schema.Xsd"/> property.
            If the fields contains complex schema (used with W3C schema) then the function silenty ignores the schema fields  
            (no exception being thrown) and the XSD will become a simple Tridion Web Schema with MetaData fields only.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Schema.Xsd"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.GetObjectsFromDataObjects``2(System.Collections.Generic.IEnumerable{``1},Tridion.ContentManager.Session)">
            <summary>
            Gets a collection of business objects for a given collection of data objects.
            </summary>
            <typeparam name="T">The type of the business object.</typeparam>
            <typeparam name="DT">The type of the data object.</typeparam>
            <param name="dataObjects">The collection of data objects.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An <see cref="T:IList"/> of business objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.FromXsd(Tridion.ContentManager.Data.ContentManagement.SchemaData,System.Boolean,System.Boolean)">
            <summary>
            Constructs SchemaFields from XSD
            </summary>
            <param name="schemaData">The Schema Data Object that provides the XSD.</param>
            <param name="expandEmbeddedFields">Indicates whether embedded field definitions should be expanded.</param>
            <param name="validate">Indicates whether appinfo fields need validate</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.LoadFieldsFromXml(System.Xml.XmlElement)">
            <summary>
            Loads the schema fields definition object from the XML.
            </summary>
            <param name="schemaFieldsElement">The R5 schema fields XML.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.GetAppInfoElement(System.Xml.Schema.XmlSchema,System.String)">
            <summary>
            Gets an XML element with a given local name from the schema's appinfo.
            </summary>
            <param name="xmlSchema">The XML schema object.</param>
            <param name="appInfoName">The local name of the appinfo element to retrieve.</param>
            <returns>The XML element with the given name or <c>null</c> if no such element exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.GetAppInfoElement(System.Xml.Schema.XmlSchemaAnnotated,System.String)">
            <summary>
            Gets an XML element with a given local name from an annotated schema object's appinfo.
            </summary>
            <param name="annotatedSchemaObject">The annotated schema object.</param>
            <param name="appInfoName">The local name of the appinfo element to retrieve.</param>
            <returns>The XML element with the given name or <c>null</c> if no such element exists.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.NamespaceUri">
            <summary>
            Gets or sets the namespace URI for the Schema
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.RootElementName">
            <summary>
            Gets or sets the root element/type name for the content fields
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields">
            <summary>
            Gets access to the (content) field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinition-derived objects. 
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class).
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields">
            <summary>
            Gets access to the metadata field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinition-derived objects. 
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class).
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <remarks>
            This property is used to expose the SchemaFieldsData in the CM Service Interface.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition">
            <summary>
            Represents an XHTML field (a.k.a. Format Area) definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.XhtmlFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.Height">
            <summary>
            Gets or sets the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.FilterXslt">
            <summary>
            Gets or sets the Filter XSLT used by the CME.
            </summary>
            <value>
            The XSLT root element or <c>null</c> if no Filter XSLT is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition">
            <summary>
            Represents a multi-line text field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.MultiLineTextFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.Height">
            <summary>
            Gets or sets the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.KeywordField">
            <summary>
            Represents a Keyword field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A Keyword object representing the linked Keyword or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of Keyword objects representing the linked Keywords. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkField">
            <summary>
            Represents an external link field.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.TextField">
            <summary>
            Abstract base class for fields with text content.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.TextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.TextField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A string value or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of string values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkField">
            <summary>
            Represents a Multimedia link field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateField">
            <summary>
            Represents a date field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A DateTime value or <see cref="F:System.DateTime.MinValue"/> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <see cref="F:System.DateTime.MinValue"/> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of DateTime values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition">
            <summary>
            Represents a single-line text field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.SingleLineTextFieldDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.SyncCurrentState">
            <summary>
            Ensures that the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.CurrentState"/> property reflects the current state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.ReadFromSchemaElement(System.Xml.Schema.XmlSchemaElement,Tridion.ContentManager.Session)">
            <summary>
            Read the state from the given element definition in the Schema Object Model
            </summary>
            <param name="schemaElement">The element definition for the field from the Schema Object Model.</param>
            <param name="session">The Session used to "inflate" referenced objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.GetXsdType">
            <summary>
            Returns the Xsd type of the field.
            </summary>
            <returns>Xsd type of the field.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.WriteToXsdElements(System.Xml.XmlElement,System.Xml.XmlElement,System.Xml.XmlElement,System.Boolean)">
            <summary>
            This method returns the XSD representation of the field.
            </summary>
            <param name="rootElement">The root element of the XSD.</param>
            <param name="xsdElementContainer">The element in which the field's XSD is going to be appended.</param>
            <param name="labelsElement">The label element in which this field's label information is going to be added.</param>
            <param name="isMetadata">A boolean identifying if this field is a Metadata field or not.</param>
            <returns>Returns the XSD representation of the field.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.MinLength">
            <summary>
            Gets or sets the minimum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no minimum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.MaxLength">
            <summary>
            Gets or sets the maximum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no maximum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A SingleLineTextListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed single-line text field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition.#ctor(Tridion.ContentManager.Data.ContentManagement.Fields.SingleLineTextListDefinitionData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition.WriteToXsd(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            This method adds the list information of the XSD field.
            </summary>
            <param name="appInfo">The <see cref="T:System.Xml.XmlElement"/> where the list information will be added.</param>
            <param name="restrictionInfo">The <see cref="T:System.Xml.XmlElement"/> where the list values will be added.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition.Entries">
            <summary>
            Gets access to the allowed values.
            </summary>
            <value>
            A list of strings representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.XhtmlField">
            <summary>
            Represents an XHTML field (a.k.a. Format Area).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField">
            <summary>
            Represents a multi-line text field.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField.TcmiNamespace">
            <summary>The namespace URI of the TCM System Schema for Instances.</summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextField">
            <summary>
            Represents a single-line text field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberField">
            <summary>
            Represents a number field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A floating-point value or <c>0</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>0</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of floating-point values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField">
            <summary>
            Represents an embedded (schema) field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            An ItemFields object representing the embedded fields or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of ItemFields objects representing the embedded field sets. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields">
            <summary>
            Represents XML content/metadata as a set of fields.
            </summary>
            <remarks>
            Can be used to access the content of Components based on a Tridion Web Schema and custom Metadata.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Create an instance containing fields without values.
            </summary>
            <param name="schema">The <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> that defines the fields.</param>
            <remarks>
            If the Schema defines both content and metadata, the ItemFields object will represent the content fields.
            If the content is complex, an empty set is constructed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Create an instance using field values based on given XML data.</summary>
            <param name="rootElement">An <see cref="T:System.Xml.XmlElement"/> representing the root element of the XML data.</param>
            <param name="schema">The <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> that defines the fields.</param>
            <remarks>
            The root element's namespace and local name must correspond with those defined in the Schema.
            If not, a <see cref="T:Tridion.ContentManager.KernelException"/> is thrown.
            If the content is complex, an empty set of fields is constructed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(System.String,System.String,System.Xml.XmlElement,System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Constructor. For internal use only.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Contains(System.String)">
            <summary>
            Determine whether a field with a given name exists.
            </summary>
            <param name="fieldName">The field name (XML name as defined in the Schema) to test for.</param>
            <returns><c>true</c> is a field with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.ToXml">
            <summary>
            Get the XML representation of the set of fields.
            </summary>
            <returns>The root element of the XML representation.</returns>
            <remarks>
            The XML representation can be used to set Component content or custom metadata XML.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Count">
            <summary>
            Get the number of fields.
            </summary>
            <remarks>
            All fields defined in the Schema are counted, whether or not they have a value.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Item(System.String)">
            <summary>
            Get field by name (indexer).
            </summary>
            <param name="fieldName">The field name (XML name as defined in the Schema).</param>
            <returns>An <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemField"/>-derived object representing the field.</returns>
            <remarks>
            If no field with the given name exists, a <see cref="T:System.Collections.Generic.KeyNotFoundException"/> is thrown.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Item(System.Int32)">
            <summary>
            Get field by index (indexer).
            </summary>
            <param name="index">The zero-based index.</param>
            <returns>An <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemField"/>-derived object representing the field.</returns>
            <remarks>
            If the index is less than 0 or larger than the number fields, an <see cref="T:System.ArgumentOutOfRangeException"/> is thrown.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Folder">
            <summary>
            Represents a Folder: an item used to organize the items in a Repository.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#cctor">
            <summary>
            Static Folder constructor
            </summary>
            <remarks>
            Used for creating and populating a dictionary returned by GetChildTypes() method
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(Tridion.ContentManager.Data.ContentManagement.FolderData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Folder.
            </summary>
            <param name="session">The Session in which the Folder should be created.</param>
            <param name="parentId">The TCM URI of the Folder in which the Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Folder.
            </summary>
            <param name="id">The identifier (TCM URI) of the Folder.</param>
            <param name="session">The Session in which the Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Folder.</param>
            <param name="session">The Session in which the Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet">
              <item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The Root Organizational Item must be an inheritance root.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.OnCopying(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by Copy method, before going to the BL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>This override sets View, Edit and Delete actions.</remarks>        
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Folder.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Folder.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.GetSecurityPermissions(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for this <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/>.This method validate <see cref="T:Tridion.ContentManager.Security.Permissions"/> represented by <paramref name="demandingPermissions"/> and returns appliable <see cref="T:Tridion.ContentManager.Security.Permissions"/>.Returns <value>Permission.None </value> as <see cref="T:Tridion.ContentManager.Security.Permissions"/> if it is a Root <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>. Otherwise returns the <paramref name="demandingPermissions"/>
            </summary>
            <param name="demandingPermissions"><see cref="T:Tridion.ContentManager.Security.Permissions"/> that are depended by a particular operation, for example, Localize, Unlocalize and so on .</param>
            <returns><see cref="T:Tridion.ContentManager.Security.Permissions"/> that must be available to perform a particular operation</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Root Folder is not allowed to delete
            If folder contains items in it, those items will be delete first.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
            Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.LinkedSchema">
            <summary>
            Get or set the linked Schema of the Folder.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> object or <c>null</c> if the Folder doesn't have a linked Schema.</value>
            <remarks>
            The linked Schema acts as default Schema for Components created in the Folder.
            It can also acts as mandatory Schema, if <see cref="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory"/> is set to <c>true</c>.
            In the latter case, Components cannot be saved in the Folder unless they are based on this Schema.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory">
            <summary>
            Get or set whether the linked Schema is mandatory.
            </summary>
            <remarks>
            If the linked Schema is not mandatory, it merely acts as a default Schema for new Components created in the Folder.
            If the linked Schema is mandatory, Components cannot be saved in the Folder unless they are based on this Schema.
            It is not possible make the linked Schema mandatory if there are Components in the Folder based on another Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Keyword">
            <summary>
            Represents a Keyword used to classify items.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> class. 
            </summary>
            <remarks>Constructor used internally for registering the type.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(Tridion.ContentManager.Data.ContentManagement.KeywordData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> class. 
            </summary>
            <param name="session">The Session in which the Keyword should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> class. 
            </summary>
            <param name="id">The identifier (TCM URI) of the Keyword.</param>
            <param name="session">The Session in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Keyword.</param>
            <param name="session">The Session in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get the child Keywords of this Keyword.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>Abstract</term><description>Boolean specifying whether to include abstract Keywords.</description></item>
                <item><term>FromCategory</term><description>Only include Keywords from the given Category.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords">
            <summary>
            Get the child Keywords of this Keyword.
            </summary>
            <returns>A list of Keyword objects.</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.ContentManagement.ChildKeywordsFilter)">
            <summary>
            Get the child Keywords of this Keyword.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords.</param>
            <returns>A list of Keyword objects.</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.ContentManagement.ChildKeywordsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get the child Keywords of this Keyword as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="T:Tridion.ContentManager.ContentManagement.ChildKeywordsFilter"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords">
            <summary>
            Get the child Keywords of this Keyword as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.ContentManagement.ChildKeywordsFilter)">
            <summary>
            Get the child Keywords of this Keyword as XML.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords.</param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.ContentManagement.ChildKeywordsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get the items classified using this Keyword.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only include objects of the given <see cref="T:Tridion.ContentManager.ItemType"/>(s).</description></item>
                <item><term>Descendant</term><description>Boolean specifying whether to include descendant Keywords.</description></item>
                <item><term>LimitResult</term><description>Limit the number of objects returned in the list to this number.</description></item>
                <item><term>BasedOnItems</term><description>Gets or sets a condition to return taxonomies which can be used to classify the supplied items.</description></item>
            </list>
            </param>
            <returns>A list of objects.</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or meta data.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems">
            <summary>
            Get the items classified using this Keyword.
            </summary>
            <returns>A list of objects.</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or meta data.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter)">
            <summary>
            Get the items classified using this Keyword.
            </summary>
            <param name="filter">Can be used to filter the result of Keywords.</param>
            <returns>A list of objects.</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or meta data.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get the items classified using this Keyword as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or metadata.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems">
            <summary>
            Get the items classified using this Keyword as XML.
            </summary>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or metadata.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter)">
            <summary>
            Get the items classified using this Keyword as XML.
            </summary>
            <param name="filter">Can be used to filter the result of classified items.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or metadata.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.ContentManagement.ClassifiedItemsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.Delete(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)">
            <summary>
            Deletes this Keyword. Handling of the Keyword's children is specified by <paramref name="deleteTaxonomyNodeMode"/>.
            </summary>
            <param name="deleteTaxonomyNodeMode">Specifies how the deletion of this Keyword will affect its children (if applicable).
            </param>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Localize"/>.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetUsingItemsFilter">
            <summary>
            Determines the filter options that are needed for the HasUsingItems(<see cref="T:Tridion.ContentManager.UsingItemsFilter"/>) function
            </summary>
            <returns>
            an <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> with additional properties set (if appropriate)
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before actually deleting the keyword.
            </summary>
            <param name="eventArgs">The arguments of the event.
            If the call that triggered the event is <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/> then the type of this parameter is in fact
            <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/>. However, if the call that triggered the event is the overload <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.Delete(Tridion.ContentManager.ContentManagement.DeleteTaxonomyNodeMode)"/>
            then the type of this parameter is actually <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs"/>. If the latter is the case,
            additional processing occurs to accommodate for the requested handling of child keywords of the keyword being deleted.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnPrepareDeleteEvent(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            If the <paramref name="eventArgs"/> parameter is of type <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs"/> then
            this method sets the <see cref="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DescendantsToDelete"/> and
            <see cref="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DescendantsToReparent"/> properties with the correct values.
            Otherwise, this method does nothing.
            </summary>
            <param name="eventArgs">The event arguments of the Delete operation.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnDeleted(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.SetNonLocalizablePropertiesToPropagate(Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets non-localizable properties on the specified <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> of a local copy to reflect changes in this (parent) item.
            </summary>
            <param name="localCopyData">Data object of a local copy.</param>
            <param name="propertiesToSet">Names of properties to set.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.AddNonLocalizableProperties(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds names of the properties that must not be modified in the localized item to the list.
            </summary>
            <param name="propertyNames">List of names of properties that must not be modified.</param>
            <remarks>The list is used in the AssertNonLocalizableProperties() method.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.AddUniqueProperties(System.Collections.Generic.IDictionary{Tridion.ContentManager.Data.UniquenessFlag,System.String},Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the Metadata property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The exception is thrown if the length of Key is exceeding 255 characters.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The exception is thrown if the length of Description is exceeding 255 characters.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <exception cref="T:Tridion.ContentManager.InvalidLinkException">The ParentKeywords contains one or more null Link or link to null Uri.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidLinkException">The RelatedKeywords contains one or more null Link or link to null Uri.</exception>
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
             <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
             <item><description>the linked item does not exist</description></item>
             <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.ItemIsInUseException">The IsAbstract property has been changed while the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> is in use.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> of the Keyword in the <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/> collection is not added to <see cref="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories"/> collection in the Category that contains this Keyword.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetTypeId">
            <summary>
            Gets the type ID for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Keyword.
            </summary>
            <returns>
            The Type of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> that can hold this Keyword.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
            Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Invalidate the XSD of category by calling - InvalidateXsd
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.UnLocalize"/>.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.ContentManagement.Keyword.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetKeywordChildren(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.KeywordData},System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.KeywordData})">
            <summary>
            Gets all the child Keyword from the Keywords in the <paramref name="updatelist"/>. This list is based on the Keywords in <paramref name="completelist"/>.
            </summary>
            <param name="completelist">The list of all Keywords.</param>
            <param name="updatelist">The list of Keyword that need to be updated.</param>
            <returns>
            All the child keywords and their children of the keywords in the <paramref name="updatelist"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.AssignChildrenToGrandparents(Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs)">
            <summary>
            Performs reparenting of the children of the Keywords in <see cref="P:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs.DescendantsToReparent"/>, removing this Keyword from every child's parentkeyword list and replacing
            it with this Keyword's parents. In effect, the grandparents adopt the grandchildren of this Keyword. All previous relationships
            of both the grandparents and the grandchildren are not affected by this operation, only the relationships that involve this keyword.
            </summary>
            <param name="deleteTaxonomyEventArgs">The <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.DeleteBranch(Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs)">
            <summary>
            Deletes the Keyword and its children in the branch.
            </summary>
            <param name="deleteTaxonomyEventArgs">The <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteTaxonomyNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.Description">
            <summary>
            Gets or sets a description of the Keyword.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.IsAbstract">
            <summary>
            Gets or sets a value indicating whether the Keyword is abstract.
            </summary>
            <remarks>
            An abstract Keyword cannot be used to classify items with. It is merely there to act
            as a parent for other Keywords.
            This property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.Key">
            <summary>
            Gets or sets a custom key for the Keyword.
            </summary>
            <remarks>
            This key can be used to identify a Keyword in custom code; it has no special meaning to the TCM system.
            Unlike the Keyword's <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/>, this property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords">
            <summary>
            Gets access to the parent Keywords of this Keyword.
            </summary>
            <value>A collection of Keyword objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            Parent Keywords are used to form a Taxonomy of Keywords.
            Typically, a parent Keyword is a broader term/concept.
            The Parent Keywords must be from one of the allowed parent Categories of this Keyword's Category.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.RelatedKeywords">
            <summary>
            Gets access to the Keywords related to this Keyword.
            </summary>
            <value>A collection of Keyword objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.IsRoot">
            <summary>
            Gets a value indicating whether the Keyword is a root Keyword (i.e. it has no parent Keywords).
            </summary>
            <remarks>
            The value of this property does not get updated until any save operation or ToXML operation is executed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.MultimediaType">
            <summary>
            Represents Multimedia type: a type of binary content
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(Tridion.ContentManager.Data.ContentManagement.MultimediaTypeData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> class that is pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/>.</param>
            <param name="session">The <see cref="T:Tridion.ContentManager.Session"/> in which the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> class. 
            </summary>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> class for an existing Multimedia type.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Multimedia type.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.GetTypeResource">
            <summary>
            Gets the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.GetTypeId">
            <summary>
            Gets the type ID for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.ContentManagement.MultimediaType.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.ContentManagement.MultimediaType.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.SetAllowedActions">
            <summary>
            Determines allowed actions for this object and set the <see cref="P:Tridion.ContentManager.IdentifiableObject.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.CollectPropertiesForCustomValidation(Tridion.ContentManager.CustomizablePropertiesValidator)">
            <summary>
            Collects the properties of an Identifiable Object that are subject to XSD validation.
            The validation is user configurable by XSD files.
            </summary>
            <param name="item">An object that will be serialized and validated against an XSD document.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a backslash (\).</exception>        
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.MimeType">
            <summary>
            Gets or sets the MIME type according to IETF RFC 2046.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.FileExtensions">
            <summary>
            Gets or sets the file extensions associated with this Multimedia type.
            </summary>
            <remarks>
            File extensions must be unique across all Multimedia types.
            Unlike all other collection properties on <see cref="T:Tridion.ContentManager.IdentifiableObject"/> one must set this property explicitly to be able to change the collection of file extensions of this <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SearchQuery">
            <summary>
            Represents a search query.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Query">
            <summary>
            Abstract base class for queries.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.SearchQuery"/>
        </member>
        <member name="M:Tridion.ContentManager.Query.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create a new instance
            </summary>
            <param name="session">The Session in which to create the object.</param>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetResults">
            <summary>
            Get the query results as a list of objects.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> instances representing the query results.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetResults(System.Int32,System.Int32)">
            <summary>
            Get the query results as a list of objects.
            </summary>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.IdentifiableObject"/> instances representing the query results.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetListResults">
            <summary>
            Get the query results as an XML list.
            </summary>
            <remarks>
            The structure of the XML list is defined for each concrete Query subclass.
            </remarks>
            <returns>The root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetListResults(System.Int32,System.Int32)">
            <summary>
            Get a subset of the query results as an XML list.
            </summary>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            The structure of the XML list is defined for each concrete Query subclass.
            </remarks>
            <returns>The root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.ToXml">
            <summary>
            Obtain an XML representation of the query
            </summary>
            <remarks>
            The XML representation can be used, for instance, as configuration data for a Virtual Folder.
            </remarks>
            <returns>The root element of the XML representation</returns>
        </member>
        <member name="P:Tridion.ContentManager.Query.Session">
            <summary>
            Get the <see cref="P:Tridion.ContentManager.Query.Session"/> in which the Query is created.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.SearchQuery"/> class. 
            </summary>
            <param name="session">
            The Session in which to create the search query.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.SearchQuery"/> class from a given XML representation. 
            </summary>
            <param name="searchInstruction">
            The XML representation of the query: see SearchInstruction element in cm_xml.xsd
            </param>
            <param name="session">
            The Session in which to create the search query.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.#ctor(Tridion.ContentManager.Data.ContentManagement.SearchQueryData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.ContentManagement.SearchQuery"/> class pre-loaded with a given Data Object. 
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.GetListResults(System.Int32,System.Int32)">
            <summary>
            Get a subset of the query results as an XML list.
            </summary>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.ToXml">
            <summary>
            Obtain an XML representation of the query
            </summary>
            <remarks>
            The XML representation can be used, for instance, as configuration data for a Virtual Folder.
            </remarks>
            <returns>An XML element which represents the root element of the XML representation</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.GetListColumnFilter">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> enumeration value as expected by the BL.
            </summary>
            <returns>
            The <see cref="T:Tridion.ContentManager.Interop.TDSDefines.ListColumnFilter"/> enumeration value which is derived from both the <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BaseColumns"/> and the additional columns.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BaseColumns">
            <summary>
            Gets or sets which base columns (XML attributes) to include in the XML list.
            </summary>
            <value>A default value is <c>ListBaseColumn.Default</c>.</value>
            <remarks>
            The available columns depend on the list method for which the Filter is used.
            This property is only applicable to methods returning R5 style XML lists,
            such as <c>GetSystemWideListXml</c> and <c>GetListXml</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ResultLimit">
            <summary>
            Gets or sets the limit on the number of search results returned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn">
            <summary>
            Gets or sets the search scope.
            </summary>
            <remarks>
            The following search scopes are supported:
            <list type="bullet">
                <item>For searching system wide, leave <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn"/> set to <c>null</c></item>
                <item>For searching within a Repository/Publication, set the value of <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn"/> to that specific <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/></item>
                <item>For searching within an organizational item only (one level), set the value of <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn"/> to that specific <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> and the value of <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchInSubtree"/> to <c>false</c></item>
                <item>For searching within an organizational item and the entire subtree, set the value of <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn"/> to that specific <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> and the value of <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchInSubtree"/> to <c>true</c></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchInSubtree">
            <summary>
            Gets or sets a value indicating whether to search one level deep or within an entire subtree.
            </summary>
            <value>
            Set <c>true</c> to search the entire subtree, otherwise set <c>false</c>.
            Default is <c>true</c>.
            </value>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.FullTextQuery">
            <summary>
            Gets or sets the Full-Text Query.
            </summary>
            <remarks>
            The Full Text Query is combined with the other specified criteria.
            The following characters are used by the query syntax: + - &amp;&amp; || ! ( ) { } [ ] ^ " ~ * ? : \
            In order to use any of these without their syntactical meaning, you need to escape them by a preceding \ 
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title">
            <summary>
            Gets or sets the text to search for in the item's title
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsTitleCaseSensitive"/>
            <remarks>Does not support wild card search. Value of these property always considered as phrase query.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsTitleCaseSensitive">
            <summary>
            Gets or sets whether the title should be sought case sensitive or not 
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Description">
            <summary>
            Gets or sets the text to search for in the item's description
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsDescriptionCaseSensitive"/>
            <remarks>Does not support wild card search. Value of these property always considered as phrase query.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsDescriptionCaseSensitive">
            <summary>
            Gets or sets whether the description should be sought case sensitive or not 
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Author">
            <summary>
            Gets or sets the author to search for
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ItemTypes">
            <summary>
            Gets the Item Types to search for.
            </summary>
            <remarks>
            To skip Item Type filtering and search for Items regardless of their Item Type, this property should be an empty collection.
            Some Item Types are not supported in Search and specifying them will not have an effect.
            Supported Item Types correspond to objects that derive from Repository Local Object.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.UsedKeyword">
            <summary>
            Gets or sets the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> to search for.
            </summary>
            <remarks>
            Only items which are classified with the given Keyword will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.UsedKeywords">
            <summary>
            Gets the Keywords to search for.
            </summary>
            <remarks>
            <para>
            Only items which are classified with the given Keywords will be returned.
            </para>
            <para>
            Current implementation allows only one Keyword.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema">
            <summary>
            Gets or sets the <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> to search for.
            </summary>
            <remarks>
            Only items that are using or based on the given Schema will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchemas">
            <summary>
            Gets the Schemas to search for.
            </summary>
            <remarks>
            Only items that are using or based on the given Schemas will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementName">
            <summary>
            Gets or sets the (local) name of the XML element to search in.
            </summary>
            <remarks>
            <para>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/> and <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementContent"/>.
            </para>
            <para>
            This can only be performed on content or metadata fields.
            </para>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementContent"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementContent">
            <summary>
            Gets or sets the content to search for within a given XML element
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/> and <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementName"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementName"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BlueprintStatus">
            <summary>
            Gets or sets the Blueprint status to search for
            </summary>
            <remarks>
            <see cref="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Shared"/> is only applicable for search in a context of specific publication (the <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.FromRepository"/> must be set). 
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.FromRepository">
            <summary>
            Gets or sets the Repository from which the items should be inherited.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BlueprintStatus"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedAfter">
            <summary>
            Gets or sets a lower limit on the modified date
            </summary>
            <remarks>
            Only items which are last modified after the given date/time will be returned.
            By default sets to current date and time if <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedBefore"/> is set.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedBefore"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedBefore">
            <summary>
            Gets or sets an upper limit on the modified date
            </summary>
            <remarks>
            Only items which are last modified before the given date/time will be returned.
            By default sets to current date and time if <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedAfter"/> is set.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedAfter"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockType">
            <summary>
            Gets or sets the lock type to search for
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockUser"/>
            <remarks>
            The following combinations of <see cref="T:Tridion.ContentManager.ContentManagement.LockType"/> are supported:
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.ContentManagement.LockType.None"/></term><description>Returns all items regardless of lock state.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.ContentManagement.LockType.CheckedOut"/></term><description>Only returns items which are checked out.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.ContentManagement.LockType.CheckedOut"/> and <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/></term><description>Only returns items which are permanently checked out.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.ContentManagement.LockType.CheckedOut"/> and <see cref="F:Tridion.ContentManager.ContentManagement.LockType.Permanent"/> and <see cref="F:Tridion.ContentManager.ContentManagement.LockType.InWorkflow"/></term><description>Only returns items which are in workflow.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockUser">
            <summary>
            Gets or sets the user that must hold the lock.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockType"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockType"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsPublished">
            <summary>
            Gets or sets whether the item must be published or not.
            </summary>
            <remarks>
            When set the search is performed only on publishable items.
            If set to false then returns unpublished items.
            If set to true then returns published items.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Schema">
            <summary>
            Represents a Schema defining the structure of content and/or metadata.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Schema.
            </summary>
            <param name="session">The Session in which the Schema should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Schema should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Schema.
            </summary>
            <param name="id">The identifier (TCM URI) of the Schema.</param>
            <param name="session">The Session in which the Schema should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(Tridion.ContentManager.Data.ContentManagement.SchemaData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Schema.</param>
            <param name="session">The Session in which the Schema should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title or object is not of dynamic version or item is checked out by another user</exception>
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
            <list type="bullet"><item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
             <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
             <item><description>the linked item does not exist</description></item>
             <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
            </list>
            </exception>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetInstanceData(Tridion.ContentManager.ContentManagement.IContainer,Tridion.ContentManager.LoadFlags)">
            <summary>
            Gets the default values of the Schema fields.
            </summary>
            <param name="containerItem">The item for which the Instance Data is going to be retrieved.. The possible values are of type <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> or <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/>.</param>
            <param name="flags">The flags that affect the XML representation of instance data.</param>
            <returns>Returns <see cref="T:Tridion.ContentManager.ContentManagement.InstanceData"/> which represents default values of the Schema fields.</returns>
            <remarks>
            If you do not specify <see cref="F:Tridion.ContentManager.LoadFlags.Expanded"/> as <paramref name="flags"/>, only the mandatory 
            embedded schema fields will be expanded. Specifying <see cref="F:Tridion.ContentManager.LoadFlags.Expanded"/> will also
            expand embedded schema fields regardless if it is optional or not.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnGettingInstanceData(Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.Schema.GetInstanceData(Tridion.ContentManager.ContentManagement.IContainer,Tridion.ContentManager.LoadFlags)"/>, before doing to operation.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnGotInstanceData(Tridion.ContentManager.Extensibility.Events.GetInstanceDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.Schema.GetInstanceData(Tridion.ContentManager.ContentManagement.IContainer,Tridion.ContentManager.LoadFlags)"/>, after doing to operation.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.ExpandXsdIncludes(Tridion.ContentManager.Data.ContentManagement.SchemaData,System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.SchemaData})">
            <summary>
            Expand include statements in the XSD by replacing them with the content of the referenced schema.
            </summary>
            <param name="schemaToExpand">The SchemaData in which to expand the XSD.</param>
            <param name="schemaChain">The schema chain containing all included Schemas, recursively. This is used to obtain the XSD of the referenced Schemas.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.IncludeNamespaceDeclarations(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Include the namespace declarations on a given source element on a given target element
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="sourceElement">The source element.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.IncludeLabels(Tridion.ContentManager.Data.ContentManagement.SchemaData,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)">
            <summary>
            Include the labels from a source (embedded) Schema into a given target Schema
            </summary>
            <param name="targetSchema">The target Schema.</param>
            <param name="sourceLabelsElement">The tcm:Labels element of the source (embedded) Schema.</param>
            <param name="sourceSchemaUri">The TCM URI of the source Schema.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.RemoveSchemaLocationFromImports(System.Xml.XmlElement)">
            <summary>
            Removes schema location elements from imports.
            </summary>
            <remarks>
            This method is used as XSD post-processing after Schema expansion.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.MoveXsdImportsToTop(System.Xml.XmlElement)">
            <summary>
            Ensure that all XSD import statements are at the top of the XSD and duplicates are eliminated.
            </summary>
            <remarks>
            This method is used as XSD post-processing after Schema expansion.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.WriteInstanceDataFields(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition},System.Xml.XmlWriter,Tridion.ContentManager.LoadFlags)">
            <summary>
            Writes the field definitions.
            </summary>
            <param name="fieldList">The field list.</param>
            <param name="writer">The writer.</param>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.RemoveEmptyElements(System.Xml.XmlElement)">
            <summary>
            Walks over the XmlDocument and removes all empty elements from it.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetSchemaChain(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Gets the schema chain: the data for the given Schema and all referenced Schemas, recursively.
            </summary>
            <param name="rootSchemaId">The TCM URI of the root schema</param>
            <param name="session">The Session to use.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.BuildSchemaChain(Tridion.ContentManager.Data.ContentManagement.SchemaData,Tridion.ContentManager.Session)">
            <summary>
            Builds a schema chain
            </summary>
            <param name="rootSchemaData"></param>
            <param name="session">The Session to use.</param>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetUsingItemsFilter">
            <summary>
            Determines the filter options that are needed for the HasUsingItems(UsingItemsFilter) function
            </summary>
            <returns>
            an UsingItemsFilter with additional properties set (if appropriate)
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Normal Schemas cannot be deleted if in use by any version of other items, except for allowed target Schema links. Protocol Schemas cannot be 
            deleted if in use by a Publication Target, this is checked by the <see cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> call in <see cref="M:Tridion.ContentManager.IdentifiableObject.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)"/>.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnClassifying(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Validates that this item can be classified. Called by RepositoryLocalObject.Classify().
            Classification is not supported for Schema.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnUnClassifying(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Validates that this item can be unclassified. Called by RepositoryLocalObject.UnClassify().
            Classification is not supported for Schema.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.OnReClassifying(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Validates that this item can be reclassified. Called by RepositoryLocalObject.ReClassify().
            Classification is not supported for Schema.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.GetContainerType">
            <summary>
            Gets the type of the container that can hold this Schema.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this Schema.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.AssertSystemRepository(Tridion.ContentManager.TcmUri)">
            <summary>
            Throws an exception if the organizational item that contains this object is System Repository
            </summary>
            <param name="uri">The parent item's identifier</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.FillUrlConversionBatch(Tridion.ContentManager.UrlConversion,Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Fill an URL conversion batch with (X)Links to be converted.
            </summary>
            <param name="conversionBatch">The URL conversion batch to which (X)Links should be added.</param>
            <param name="sourceData">The Data Object that acts as the source for conversion.</param>
            <remarks>
            By default, all Links provided by <see cref="M:Tridion.ContentManager.Data.IdentifiableObjectData.CollectLinks(System.Boolean)"/> are included in the batch.
            Subclasses that have XML properties which can have XLink elements should override this method to add those to the batch.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.SyncDerivedProperties">
            <summary>
            Ensures that the derived properties of <see cref="P:Tridion.ContentManager.IdentifiableObject.CurrentState"/> is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.ContentManagement.Schema.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.ContentManagement.Schema.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.ContentManagement.Schema.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.RemoveInternalProperties(Tridion.ContentManager.StronglyTypedFilter)">
            <summary>
            Remove "internal" properties used to determine allowed actions
            </summary>
            <param name="filter">The filter that specifies the requested "external" properties</param>
            <remarks>
            This methods is used when serializing a list of data objects to XML.
            By removing the internal properties (i.e. setting them to <c>null</c>), we prevent them from ending up in the serialized XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.ValidateXml">
            <summary>
            Validates all the custom Xml Properties.
            </summary>
            <remarks>
            <para>
            ValidateXml set <see cref="P:Tridion.ContentManager.ContentManagement.Schema.IsTridionWebSchema"/> <c>true</c> if Schema XSD is valid Tridion Web Schema; otherwise, <c>false</c>.
            </para>
            <para>
            ValidateXml change <see cref="P:Tridion.ContentManager.ContentManagement.Schema.NamespaceUri"/> property to value which is represented in targetNamespace attribute of <see cref="P:Tridion.ContentManager.ContentManagement.Schema.Xsd"/> property
            </para>
            ValidateXml validates following : 
            <para>
                <list type="Bullet">
                        <item>
                                Validate the XML against XML Schema Definition Language (XSD) schemas.
                                Schemas that are used for Validation are retrieved from <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> of Component. 
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXmlAgainstSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlElement,Tridion.ContentManager.TcmUri)"/>
                        </item>
                        <item>
                                Validates all the xLink reference in Xml. If there is any Component Link inside Xml, then it 
                                also checks whether it is valid component for this Component. For example, it checks Linktype,
                                AllowMultimediaLinks,AllowedTargetSchemas values in Schema to verify valid component link.
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.ValidateXLinks(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})"/>
                        </item>
                        <item>
                                For every Keyword , it adds xlink:href by using PSVI. 
                                <see cref="T:System.Xml.Schema.IXmlSchemaInfo"/>
                                <see cref="M:Tridion.ContentManager.IdentifiableObject.PostProcessPSVI(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Repository)"/>
                        </item>
                </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.PreProcessInclusions">
            <summary>
             Convert inclusions (schemaLocation attrs) to XLinks
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.IsSpecialSchemaImport(System.Xml.XmlElement)">
            <summary>
            Checks if element contains special schema import link.
            </summary>
            <param name="element">Element to check.</param>
            <returns><code>true</code> if element is a special case of schema import.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.ProcessNamespaceURI">
            <summary>
            Processes the namespace URI. Validate namespace attributes
            </summary>
            <remarks>
            Method change <see cref="P:Tridion.ContentManager.ContentManagement.Schema.NamespaceUri"/> property
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.MetadataSchema">
            <summary>
            Get or set the Schema for the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Schema cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Metadata">
            <summary>
            Get or set the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Schema cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Description">
            <summary>
            Get or set a description for the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Purpose">
            <summary>
            Get or set the purpose for the Schema.
            </summary>
            <remarks>
            A Schema can be used for a single purpose only.
            At the different places where Schemas can be selected, the set of available Schemas
            is filtered by the Schema's purpose.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.RootElementName">
            <summary>
            Get or set the name of the root element.
            </summary>
            <remarks>
            In a W3C Schema (XSD), it is possible to have multiple global elements, 
            i.e. elements that can act as root element.
            A Schema in Tridion Content Manager must identify a single global element as the root element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Xsd">
            <summary>
            Get or set the Schema content as XSD.
            </summary>
            <value>The root element of the XSD (xsd:schema).</value>
            <remarks>
            This property provides low-level access to the XSD.
            It is also possible to access the Schema content through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> API.
            For Tridion Web Schemas, this is possible for both the content and the metadata.
            For complex Schemas, this is only possible for the metadata.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.IsTridionWebSchema">
            <summary>
            Determine whether the Schema qualifies as "Tridion Web Schema".
            </summary>
            <remarks>
            A "Tridion Web Schema" is a Schema for which the content model is simple enough to be
            represented as a set of fields.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.NamespaceUri">
            <summary>
            Get the namespace URI (target namespace) of the Schema. 
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.AllowedMultimediaTypes">
            <summary>
            Get access to the allowed Multimedia Types.
            </summary>
            <value>A list of MultimediaType objects. This is a connected collection: changes to the collection are reflected in the state of the MultimediaType.</value>
            <remarks>
            This property only applies to Schemas with purpose <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/>.
            It defines what the allowed Multimedia Types are for Multimedia Components based on this Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.ComponentProcess">
            <summary>
            Gets or sets <see cref="P:Tridion.ContentManager.ContentManagement.Schema.ComponentProcess"/> assosiated with the schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.VirtualFolder">
            <summary>
            Represents a Virtual Folder: an Organizational Item that dynamically collects its contents.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(Tridion.ContentManager.Data.ContentManagement.VirtualFolderData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given VirtualFolder Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Virtual Folder.
            </summary>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
            <param name="parentId">The TCM URI of the Folder in which the Virtual Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Virtual Folder.
            </summary>
            <param name="id">The identifier (TCM URI) of the Virtual Folder.</param>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Virtual Folder.</param>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetContainerType">
            <summary>
            Gets the type of the container that can hold this VirtualFolder.
            </summary>
            <returns>
            The Type of the OrganizationalItem that can hold this VirtualFolder.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetDefaultTypeSchema">
            <summary>
            Gets <see cref="T:Tridion.ContentManager.Data.Link`1"/> representing the default TypeSchema.
            </summary>
            <returns><see cref="T:Tridion.ContentManager.Data.Link`1"/>. Here T is <see cref="T:Tridion.ContentManager.Data.ContentManagement.SchemaData"/></returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.ToR5DeltaXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Get a delta XML representation of the object.
            </summary>
            <param name="sections">Specifies which sections to include in the XML representation.</param>
            <returns>
            A string containing the (UTF-8 encoded) XML representation.
            </returns>
            <remarks>Current implementation will remove <see cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration"/> element from delta <c>xml</c>, if it was not modified by user on saved and localized item 
            to prevent failing on business rule in old BL code with full update.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have <see cref="F:Tridion.ContentManager.Security.Permissions.Write"/> and/or the right security rights returned by <see cref="M:Tridion.ContentManager.IdentifiableObject.GetManagementRights"/></exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">The property <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> (the parent of this item) is not a valid container for this item</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The item is localized, and there are properties changed that may not be changed when this item is localized</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The title is not an unique title</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidXmlException">Invalid XML is entered for the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/> property</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidSchemaException">The linked <seealso cref="T:Tridion.ContentManager.ContentManagement.Component"/> is invalid according to the specified schema</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The Title property is not set or an empty string. This exception is also thrown if the length of the Title is exceeding 255 characters or it contains a backslash (\).</exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidUriException">All properties that link to other objects will be validated. This exception will be thrown if
              <list type="bullet">
              <item><description>the <see cref="T:Tridion.ContentManager.TcmUri"/> contains a version</description></item>
              <item><description>the <see cref="T:Tridion.ContentManager.ItemType"/> does not match the link type</description></item>
              <item><description>the linked item does not exist</description></item>
              <item><description>the Context Publication ID of the linked item does not match the current context</description></item>
              </list>
              </exception>
              
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The Root Organizational Item must be an inheritance root.</exception>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.ValidateXml">
            <summary>
            Validates all the custom Xml Properties.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.TypeSchema">
            <summary>
            Get or set the Schema for the configuration data.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType"/>)</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration">
            <summary>
            Get or set the configuration data.
            </summary>
            <value>The root element of the configuration data.</value>
            <remarks>
            This property provides low-level access to the XML configuration data.
            If the TypeSchema is based a Tridion Web Schema, it is possible to access the configuration data
            through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single configuration data field value with the ItemFields API:
            <code>
            VirtualFolder myVirtualFolder = (VirtualFolder)mySession.GetObject("tcm:1-9-8192");
            ItemFields configFields = new ItemFields(myVirtualFolder.Configuration, myVirtualFolder.TypeSchema);
            TextField myTextField = (TextField)configFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.TypeSchema"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.IsGetListItemsImplementedInR6">
            <summary>
            Gets a value indicating whether getting list of items for this type objects is implemented in R6.
            </summary>
            <value>
            	<c>true</c>, if <c>GetListItems</c> is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.
            </value>
            <remarks>
            Types that doesn't implement <c>GetListItems</c> in R6 must override this property and set it to <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.AccessControlList">
            <summary>
            This property is not applicable for Virtual Folder.
            Attempts to use this property will throw <see cref="T:Tridion.TridionNotSupportedException"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.InvalidIncludeException">
            <summary>
            The exception that is thrown when a Template script contains an invalid include statement.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidInclude"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidIncludeException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of InvalidIncludeException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.LoadState">
            <summary>
            Specifies to which extent an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> has been loaded.
            </summary>
            <remarks>
            Identifiable objects support "lazy loading": an instance can be created without having actually loaded all of its state.
            When a property that has not been loaded yet is accessed, the full state will be loaded Just-In-Time.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.LoadState.NotLoaded">
            <summary>The object has not been loaded yet. Only it's Id property can be accessed without causing a full load.</summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadState.PreLoaded">
            <summary>The object has been (partially) pre-loaded. At least the Id and Title property can be accessed without causing a full load.</summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadState.FullyLoaded">
            <summary>The object has been fully loaded. All its properties can be accessed without causing another load.</summary>
        </member>
        <member name="T:Tridion.ContentManager.MixedLanguagesException">
            <summary>
            The exception that is thrown when a Template script contains an include statement to a Template with a different <see cref="N:Tridion.ContentManager.TemplateTypes"/>.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.MixedLanguages"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.MixedLanguagesException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of MixedLanguagesException.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The logging category.</param>
        </member>
        <member name="T:Tridion.ContentManager.PublishableAttribute">
            <summary>
            Specifies whether a class (and its subclasses) can be published.
            </summary>
            <remarks>
            The Publish Engine only accepts publishable classes.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.PublishableAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.PublishableAttribute"/> class with the 
            <paramref name="isPublishable"/> value.
            </summary>
            <param name="isPublishable">A <see cref="T:System.Boolean"/> value that indicates whether
            the item can be published.</param>
        </member>
        <member name="P:Tridion.ContentManager.PublishableAttribute.IsPublishable">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value that indicates whether
            the item can be published.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.ClaimMapping">
            <summary>
            Abstract base class representing a mapping between a Claim and a TCM Group.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.ClaimMapping.#ctor(Tridion.ContentManager.Data.Security.ClaimMappingData,Tridion.ContentManager.Session)">
            <summary>
            Creates an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.ClaimType">
            <summary>
            Gets or sets the claim type (URI) to match on.
            </summary>
            <seealso cref="P:System.IdentityModel.Claims.Claim.ClaimType"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.Value">
            <summary>
            Gets or sets the claim value to match on.
            </summary>
            <seealso cref="P:System.IdentityModel.Claims.Claim.Resource"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.Right">
            <summary>
            Gets or sets the claim "right" to match on.
            </summary>
            <remarks>Typical "rights" are <see cref="P:System.IdentityModel.Claims.Rights.Identity"/> and <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty"/></remarks>
            <seealso cref="P:System.IdentityModel.Claims.Claim.Right"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.Issuer">
            <summary>
            Gets or sets the claims Issuer (URI) to match on.
            </summary>
            <seealso cref="P:System.IdentityModel.Claims.ClaimSet.Issuer"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.Description">
            <summary>
            Gets or sets the description of the mapping.
            </summary>
            <remarks>The description is not used by the system itself; it's intended to explain the mapping to the user.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.ClaimMapping.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <remarks>This property's type is refined in subclasses to reflect the associated Data Object type.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration">
            <summary>
            Represents the tridion.contentmanager.security section within a configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.ImpersonationUsers">
            <summary>
            Gets or sets the <see cref="T:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection"/>
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.AllowAutomaticUserCreation">
            <summary>
            Gets or sets if it is allowed to automatically create users if they are member of a Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.HideOrganizationalItemsNoAccess">
            <summary>
            Gets or sets a value indicating whether Organizational Items should be hidden if user has no access to content.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.AllowWriteOperationsInTemplates">
            <summary>
            Gets or sets whether it is allowed to perform write operations when rendering Templates (e.g. Preview and Publish) and during the lifetime of a Publish Transaction.
            </summary>
            <remarks>
            By default all rendering is done in read only mode. Setting it to <c>true</c> will override the configuration and allow code in Templates to also Save, Delete, Localize, etc.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ContentManagerSecurityConfiguration.SectionName">
            <summary>
            Use this section name to get the security configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.DirectoryGroupMapping">
            <summary>
            Represents a mapping from a Group or Subtree in a Directory Service to a TCM Group.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.DirectoryGroupMapping.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.DirectoryGroupMapping.#ctor(Tridion.ContentManager.Data.Security.DirectoryGroupMappingData,Tridion.ContentManager.Session)">
            <summary>
            Creates an instance pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.DirectoryGroupMapping.DirectoryServiceName">
            <summary>
            Gets or sets the name the Directory Service to match on.
            </summary>
            <remarks>
            This property maps to <see cref="P:Tridion.ContentManager.Security.ClaimMapping.Issuer"/>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.DirectoryGroupMapping.SearchDN">
            <summary>
            Gets or sets the Distinguished Name (DN) of the Group or Subtree to match on.
            </summary>
            <remarks>
            This property maps to <see cref="P:Tridion.ContentManager.Security.ClaimMapping.Value"/>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.DirectoryGroupMapping.SearchType"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.DirectoryGroupMapping.SearchType">
            <summary>
            Gets or sets the search type: either a Subtree or Group.
            </summary>
            <remarks>
            This property maps to <see cref="P:Tridion.ContentManager.Security.ClaimMapping.ClaimType"/>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Security.DirectoryGroupMapping.SearchDN"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.DirectoryGroupMapping.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <remarks>This property's type is refined in subclasses to reflect the associated Data Object type.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.Group">
            <summary>
            Represents a Group of Users.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Security.Group"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Group.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Group.
            </summary>
            <param name="id">The identifier (TCM URI) of the Group.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Group.</param>
            <param name="session">The Session in which the Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(Tridion.ContentManager.Data.Security.GroupData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance pre-loaded with a given Data Object
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetEveryoneGroup(Tridion.ContentManager.Session)">
            <summary>
            Gets the predefined "Everyone" Group.
            </summary>
            <param name="session">The Session use to get the object</param>
            <returns>A Group object representing the "Everyone" Group.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetGroupMembers">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.Trustee"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> contained in this Group.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.Trustee"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.Security.Group.GetListGroupMembers"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetGroupMembers(Tridion.ContentManager.Security.GroupMembersFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.Trustee"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> contained in this Group.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.GroupMembersFilter"/> that constraints the list of Trustees in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.Trustee"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.Security.Group.GetListGroupMembers(Tridion.ContentManager.Security.GroupMembersFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetListGroupMembers">
            <summary>
            Gets a list of Trustees as a <see cref="T:System.Xml.XmlElement"/> contained in this Group.
            </summary>
            <returns>The root element of the XML list.</returns>
            <seealso cref="M:Tridion.ContentManager.Security.Group.GetGroupMembers"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetListGroupMembers(Tridion.ContentManager.Security.GroupMembersFilter)">
            <summary>
            Gets a list of Trustees as a <see cref="T:System.Xml.XmlElement"/> contained in this Group.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> that constraints the list of Trustees.</param>
            <returns>The root element of the XML list.</returns>
            <seealso cref="M:Tridion.ContentManager.Security.Group.GetGroupMembers(Tridion.ContentManager.Security.GroupMembersFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.OnLoading(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.Unload">
            <summary>
            Unloads the state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.SyncCurrentState">
            <summary>
            Ensures the <see cref="P:Tridion.ContentManager.Security.Group.CurrentState"/> property is up-to-date.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.AddLegacyXsltParams(System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Adds parameters to the Legacy XSLT.
            </summary>
            <param name="xsltArguments">The parameters that will be passed to the XSLT.</param>
            <remarks>
            We add the "isDirectoryGroupMappingEnabled" parameter here.
            That parameter is used to set the DirectoryGroupMappings/@Enabled attribute in the R5 XML.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.NormalizeDN">
            <summary>
            Normalizes SearchDNs by removing spaces before or after comma and by lower casing.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Group.Scope">
            <summary>
            Gets access to the Group's scope (also known as "usage constraints"): the Repositories in which the Group can be used.
            </summary>
            <value>
            A "connected" collection of Repository objects representing the Repositories in which the Group can be used.
            An empty collection means that the Group is not scoped to particular Repositories.
            Changes to the collection are reflected in the state of the Group.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Security.Group.ClaimMappings">
            <summary>
            Gets access to the Group's Claim Mappings.
            </summary>
            <value>
            A "connected" collection of <see cref="T:Tridion.ContentManager.Security.ClaimMapping"/>-derived objects.
            Changes to the collection are reflected in the state of the Group.
            </value>
            <remarks>
            A specific kind of Claim Mapping is a Directory Group Mapping, 
            which is used to map the group to a Group or Subtree in a Directory Service.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.Security.DirectoryGroupMapping"/>
        </member>
        <member name="P:Tridion.ContentManager.Security.Group.CurrentState">
            <summary>
            Get the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.Group.LoadedState">
            <summary>
            Get the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.GroupMembership">
            <summary>
            Represents a (scoped) Group Membership, i.e. a reference to a Group and optionally a scope
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.#ctor(Tridion.ContentManager.Security.Group)">
            <summary>
            Create an instance for a given Group
            </summary>
            <param name="group">The Group for which to create a GroupMembership</param>
            <remarks>
            If a scoped GroupMembership is needed, use the <see cref="P:Tridion.ContentManager.Security.GroupMembership.Scope"/> property to set the scope.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.#ctor(Tridion.ContentManager.Data.Security.GroupMembershipData,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a Data Object
            </summary>
            <param name="data">The Data Object</param>
            <param name="session"></param>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.Equals(System.Object)">
            <summary>
            Object equality test.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns><c>true</c> if the given object is an GroupMembership instance and it has the same <see cref="P:Tridion.ContentManager.Security.GroupMembership.Group"/> as this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.GetHashCode">
            <summary>
            Get a hash code for the object.
            </summary>
            <returns>The hash code, which is based on the Group Id.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which includes the type name and Group Id.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.GroupMembership.GetData">
            <summary>
            Get a Data Object reflecting the state
            </summary>
            <returns>A Data Object</returns>
        </member>
        <member name="P:Tridion.ContentManager.Security.GroupMembership.Group">
            <summary>
            Get the Group (the target of the membership)
            </summary>
            <remarks>
            This property is read-only. Changing the Group essentially means creating a new Group Membership.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.GroupMembership.Scope">
            <summary>
            Get access to the scope of the membership
            </summary>
            <remarks>
            This is a "connected" collection: changes to the collection are reflected in the state of the GroupMembership.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Security.Configuration.ImpersonationType">
            <summary>
            Specifies which security model is used for impersonation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Configuration.ImpersonationType.Windows">
            <summary>
            Windows impersonation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Security.Configuration.ImpersonationType.DirectoryService">
            <summary>
            Directory Service impersonation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Configuration.ImpersonationUserSettings">
            <summary>
            Represents a collection of ImpersonationUser settings within a configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ImpersonationUserSettings.Name">
            <summary>
            Gets or sets the name of the impersonation user.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ImpersonationUserSettings.ImpersonationType">
            <summary>
            Gets or sets the type of the impersonation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection">
            <summary>
            Represents a configuration element containing a collection of impersonation users elements.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.CreateNewElement">
            <summary>
            Creates a new ImpersonationUserSettings.
            </summary>
            <returns>A new ImpersonationUserSettings.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified ImpersonationUserSettings.
            </summary>
            <param name="section"></param>
            <returns>An Object that acts as the key for the specified ImpersonationUserSettings.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.Add(Tridion.ContentManager.Security.Configuration.ImpersonationUserSettings)">
            <summary>
            Adds a ImpersonationUserSettings to a ImpersonationUserCollection.
            </summary>
            <param name="impersonationUserSettings">The ImpersonationUser to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Adds a ImpersonationUserSettings to a ImpersonationUserCollection.
            </summary>
            <param name="impersonationUser">The ImpersonationUserSettings to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.Remove(Tridion.ContentManager.Security.Configuration.ImpersonationUserSettings)">
            <summary>
            Removes a ImpersonationUserSettings from the collection.
            </summary>
            <param name="impersonationUserSettings">The ImpersonationUserSettings to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the ImpersonationUserSettings at the specified index location.
            </summary>
            <param name="index">The index location of the ImpersonationUserSettings to remove.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.CollectionType">
            <summary>
            Gets the type of the ImpersonationUserCollection.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Configuration.ImpersonationUserCollection.Item(System.Int32)">
            <summary>
            Gets the ImpersonationUserSettings at the specified index location. 
            </summary>
            <param name="index">The index location of the ImpersonationUserSettings to get.</param>
            <returns>A ImpersonationUserSettings at the specified index.</returns>
        </member>
        <member name="T:Tridion.ContentManager.Security.UsersFilter">
            <summary>
            A Filter that can be used to constrain a list of Users.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.UsersFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.Security.UsersFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.UsersFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.Security.UsersFilter"/> and copies the specified <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.UsersFilter.#ctor(Tridion.ContentManager.Data.Security.UsersFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The Session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.UsersFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.UsersFilter.SetDefaultValues">
            <summary>
            Sets default values on <see cref="P:Tridion.ContentManager.Security.UsersFilter.CurrentState"/> 
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.UsersFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Session">
            <summary>
            Represents a session with the TCM system.
            </summary>
            <remarks>
            <para>This is the entry point to the TOM.NET API. It is used to retrieve existing objects
            and to create new system-wide objects.</para>
            <para>A Session is associated to only one user, but one user can have multiple concurrent Sessions.</para>
            <para>Because a Session holds on to "expensive" objects, it should be explicitly disposed if no longer needed.
            For that purpose, it implements <see cref="T:System.IDisposable"/>.</para>
            <para>IMPORTANT NOTE: Session objects are not thread-safe; you must not share Session objects across threads.
            Furthermore, the thread that creates a Session object should be in a Single Threaded Apartment (STA),
            since the Session will internally create an Apartment Threaded COM object. See <see cref="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)"/>.
            </para>
            <para>IMPORTANT NOTE: It is recommended to reuse the existing Session instance of the Templating Engine for code fragments inside Templates. 
            Example:
            <code>
            Session session = engine.GetSession();
            </code>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Session"/> instance for the current Windows user.
            </summary>
            <remarks>
            The current Windows user is determined using <see cref="M:System.Security.Principal.WindowsIdentity.GetCurrent"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Session"/> instance for the given user name (using impersonation).
            </summary>
            <param name="userName">The account name of the user to impersonate.</param>
            <remarks>
            The current Windows user (determined using <see cref="M:System.Security.Principal.WindowsIdentity.GetCurrent"/>)
            must be configured in TCM as an impersonation user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(System.String,System.String,Tridion.ContentManager.Interop.cm_sys.UserContext)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Session"/> instance for the given user name, optionally using impersonation.
            </summary>
            <param name="userName">The account name of the user to impersonate. May not be <c>null</c> or empty.</param>
            <param name="impersonationUserName">The name of the impersonation user. If <c>null</c> or empty string, no impersonation is used.</param>
            <param name="userContext">The User Context to be initialized. If <c>null</c>, a User Context is created internally.</param>
            <remarks>This constructor is used by SystemFacade.InitializeUserContext and CoreService.Impersonate.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(Tridion.ContentManager.Interop.cm_sys.UserContext)">
            <summary>
            Creates a new <see cref="T:Tridion.ContentManager.Session"/> with the given user context (for internal use only).
            </summary>
            <param name="userContext">The UserContext object used to obtain the access token from.</param>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.ClaimSet})">
            <summary>
            Creates a new Session based on claim sets (for claims-based authorization).
            </summary>
            <param name="claimSets">The claim sets used to obtain the user's identity and (optionally) group memberships.</param>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(Tridion.ContentManager.Data.Security.UserData)">
            <summary>
            Creates a new Session with the given access token.
            </summary>
            <param name="accessTokenData">A Data Object representing the access token information of the user.</param>
        </member>
        <member name="M:Tridion.ContentManager.Session.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Tridion.ContentManager.Session"/> class. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Session.Dispose">
            <summary>
            Dispose the object, i.e. release "expensive" objects.
            </summary>
            <remarks>
            This method is part of the <see cref="T:System.IDisposable"/> interface.
            As such, it can be called either explicitly or implicitly using the C# <c>using</c> statement.
            </remarks>
            <example><code>
            using (Session mySession = new Session())
            {
                // do something with mySession
            } // mySession no longer needed, its Dispose method will be called by the compiler.
            </code></example>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetNewObject``1">
            <summary>
            Get a new system-wide object of the given type.
            </summary>
            <typeparam name="T">The type of object to get. Must be a subtype of <see cref="T:Tridion.ContentManager.SystemWideObject"/>.</typeparam>
            <returns>An instance of the given type representing a new object (i.e. it doesn't exist in the database yet).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(Tridion.ContentManager.TcmUri)">
            <summary>
            Get an object for the given TCM URI.
            </summary>
            <param name="tcmUri">The TCM URI</param>
            <returns>An object representing the item or <c>null</c> if the TCM URI is <c>null</c> or represents <c>tcm:0-0-0</c></returns>
            <remarks>
            <para>Multiple subsequent calls with the same URI will return different instances.</para>
            <para>
            In order to retrieve an object in context of a given Repository which is different from the context Repository specified in the URI,
            use <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(Tridion.ContentManager.TcmUri)"/>.
            </para>
            <para>
            In order to retrieve a specific version of a Versioned Item (which is different from the version specified in the URI),
            use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/> on the Versioned Item obtained from this method.
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(Tridion.ContentManager.TcmUri)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(System.String)">
            <summary>
            Get an object for the given URI.
            </summary>
            <param name="uri">The URI. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns>An object representing the item or <c>null</c> if the URI is tcm:0-0-0</returns>
            <remarks>
            <para>Multiple subsequent calls with the same URI will return different instances.</para>
            <para>
            In order to retrieve an object in context of a given Repository which is different from the context Repository specified in the URI,
            use <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(System.String)"/>.
            </para>
            <para>
            In order to retrieve a specific version of a Versioned Item (which is different from the version specified in the URI),
            use <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersion(System.UInt32)"/> on the Versioned Item obtained from this method.
            </para>
            <para>
            In previous versions <c>null</c> was returned when the given URI was malformed.
            In this version, an exception is thrown in that case. The type of the exception depends on
            whether the URI appears to be a TCM URI or not. If the invalid URI begins with "tcm:",
            an <see cref="T:Tridion.ContentManager.InvalidTcmUriException"/> is thrown. In other types of malformed URIs, an <see cref="T:Tridion.ContentManager.InvalidUriException"/> is thrown instead.
            </para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(System.String)"/>
            <exception cref="T:Tridion.ContentManager.InvalidTcmUriException">Given URI begins with tcm: but it is not valid</exception>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">Given URI doesn't begin with tcm: and it is not valid</exception>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(System.Xml.XmlElement)">
            <summary>
            Get an object for the given XLink element.
            </summary>
            <param name="linkElement">An XLink element, i.e. an XML element with an <c>xlink:href</c> and optionally an <c>xlink:title</c> attribute.</param>
            <returns>An object representing the item or <c>null</c> if the URI is tcm:0-0-0</returns>
            <remarks>
            The <c>xlink:href</c> attribute can contain either a TCM URI or a WebDAV URL representing a TCM object.
            If an <c>xlink:title</c> attribute is present and not empty, its value is used to pre-load a title.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.IsExistingObject(System.String)">
            <summary>
            Determine whether a given URI refers to an existing object.
            </summary>
            <param name="uri">The URI to test. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns><c>true</c> if the URI refers to an existing object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)">
            <summary>Get a system-wide list of objects.</summary>
            <typeparam name="T">The type of objects to get. Must be a concrete subtype of <see cref="T:Tridion.ContentManager.IdentifiableObject"/>:
            <list type="bullet">
                <item><see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.User"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.Group"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
                <item>Any concrete subtype of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
            </list>
            </typeparam>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockUser</term><description>Only return items locked by the given user. Only applies to versionable objects.</description></item>
            </list>
            </param>
            <returns>A list of objects of the requested type.</returns>
            <remarks>
            A typical use case for this method is to get a list of system-wide objects (e.g. Publications).
            However, it can also be used to get a system-wide list of repository-local objects (e.g. all checked-out items).
            Note that for such a system-wide list of repository-local objects, a "LockUser" condition must be specified.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetList(Tridion.ContentManager.SystemWideListFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetList(System.Type,Tridion.ContentManager.Filter)">
            <summary>Get a system-wide list of objects as XML.</summary>
            <param name="objectType">The type of objects to get. Must be a concrete subtype of <see cref="T:Tridion.ContentManager.IdentifiableObject"/>:
            <list type="bullet">
                <item><see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.User"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.Group"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
                <item>Any concrete subtype of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
            </list>
            </param>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
            <remarks>
            A typical use case for this method is to get a list of system-wide objects (e.g. Publications).
            However, it can also be used to get a system-wide list of repository-local objects (e.g. all checked-out items).
            Note that for such a system-wide list of repository-local objects, a "LockUser" condition must be specified.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetList(Tridion.ContentManager.SystemWideListFilter)">
            <summary>Get a system-wide list of objects as XML.</summary>
            <param name="filter">
            Strongly typed filter used to determine list type to call.
            Also can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
            <remarks>
            A typical use case for this method is to get a list of system-wide objects (e.g. Publications).
            However, it can also be used to get a system-wide list of repository-local objects (e.g. all checked-out items).
            Note that for such a system-wide list of repository-local objects, a "LockUser" condition must be specified.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/>
            <exception cref="T:Tridion.ContentManager.KernelException">Specified filter type is not expected.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetUniquenessConflicts(Tridion.ContentManager.ItemType,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}})">
            <summary>
            Gets a collection of <see cref="T:Link"/> objects that reference <see cref="T:Tridion.ContentManager.IdentifiableObject"/> objects
            that conflict with the specified <paramref name="values"/>.
            </summary>
            <param name="itemType">The <see cref="T:Tridion.ContentManager.ItemType"/> of the item for which to check its uniqueness.</param>
            <param name="values">A collection of property/value pairs to check for uniqueness. </param>
            <returns>A collection of <see cref="T:Link"/> objects that reference <see cref="T:Tridion.ContentManager.IdentifiableObject"/> objects
            that conflict with the specified <paramref name="values"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.CreateTransactionScope">
            <summary>
            Creates a configured <see cref="T:System.Transactions.TransactionScope"/> instance.
            </summary>
            <remarks>
            All transactional methods must use this method or its overload instead of directly creating a <see cref="T:System.Transactions.TransactionScope"/> instance.
            If legacy transactional BL objects will be used within the transaction scope, use <see cref="M:Tridion.ContentManager.Session.CreateTransactionScope(System.Transactions.EnterpriseServicesInteropOption)"/>
            with <see cref="F:System.Transactions.EnterpriseServicesInteropOption.Full"/>.
            </remarks>
            <returns>A <see cref="T:System.Transactions.TransactionScope"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.CreateTransactionScope(System.Transactions.EnterpriseServicesInteropOption)">
            <summary>
            Creates a configured <see cref="T:System.Transactions.TransactionScope"/> instance with given COM+ transaction interoperability.
            </summary>
            <param name="comPlusTransactionSupport">
            Specifies the level of support for COM+ transactions.
            If legacy transactional BL objects will be used within the transaction scope, specify <see cref="F:System.Transactions.EnterpriseServicesInteropOption.Full"/>.
            </param>
            <remarks>
            All transactional methods must use this method or its overload instead of directly creating a <see cref="T:System.Transactions.TransactionScope"/> instance.
            If no legacy transactional BL objects will be used within the transaction scope, use <see cref="M:Tridion.ContentManager.Session.CreateTransactionScope"/>.
            </remarks>
            <returns>A <see cref="T:System.Transactions.TransactionScope"/> instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.CreateKernelException(System.Exception)">
            <summary>
            Converts a COM exception raised by the legacy BL to an appropriate <see cref="T:Tridion.ContentManager.KernelException"/>-derived instance.
            </summary>
            <param name="comException">The exception obtained from the legacy BL.</param>
            <returns>An instance of <see cref="T:Tridion.ContentManager.KernelException"/> or of a subclass or the original exception.</returns>
            <remarks>
            For some operations, the legacy BL stores error code/message in the User Context as a work-around for VB error handling issues
            during execution of Multiple Operations.
            For these operations, this method should be used instead of using <see cref="M:Tridion.ContentManager.KernelException.CreateFromCOMException(System.Exception)"/> directly.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetDataSession">
            <summary>
            Gets the current Data Session
            </summary>
            <returns>The current Data Session's interface.</returns>
            <remarks>
            This method is used, together with <see cref="M:Tridion.ContentManager.Session.ReleaseDataSession"/>, to ensure that a single Data Session (and thus database connection)
            is used for all the work done in a transaction.
            If no current Data Session exists, a new one is created.
            Otherwise, the existing is returned and a reference counter is increased.
            After each GetDataSession call, a <see cref="M:Tridion.ContentManager.Session.ReleaseDataSession"/> must be performed (also in case of exceptions).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.ReleaseDataSession"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.TransactionCompletedHandlerReleaseDataSession(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            Handles transaction completed events in case <see cref="M:Tridion.ContentManager.Session.GetDataSession"/> was called in context of a transaction.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
            <remarks>
            If <see cref="M:Tridion.ContentManager.Session.GetDataSession"/> is called in context of a transaction, the Data Session is kept alive until transaction completes
            or the Session is disposed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.TransactionCompletedHandlerReleaseUserContext(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            Handles transaction completed events in case <see cref="P:Tridion.ContentManager.Session.UserContext"/> was called in context of a transaction.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
            <remarks>
            If <see cref="P:Tridion.ContentManager.Session.UserContext"/> is called in context of a transaction, the Data Session is kept alive until transaction completes
            or the Session is disposed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.ReleaseDataSession">
            <summary>
            Release the Data Session obtained by <see cref="M:Tridion.ContentManager.Session.GetDataSession"/>.
            </summary>
            <remarks>
            This method decreases the Data Session reference counter and disposes the Data Session if the counter reaches 0.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetDataSession"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetDataObject(Tridion.ContentManager.TcmUri)">
            <summary>
            Get a Data Object for a given TCM URI.
            </summary>
            <param name="id">The TCM URI of the object to get.</param>
            <returns>A Data Object or <c>null</c> if the id is <c>null</c> or <c>TcmUri.UriNull</c></returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.RemoveFromCache(Tridion.ContentManager.TcmUri)">
            <summary>
            Removes an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> with given ID from the cache.
            </summary>
            <param name="id">The TCM URI of the object to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Get a TOM.NET Business Object for a given Data Object.
            </summary>
            <param name="data">The Data Object to be used as (pre-loaded) state.</param>
            <returns>The Business Object</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject``1(Tridion.ContentManager.Data.Link{``0})">
            <summary>
            Get a TOM.NET Business Object for a given Data Object Link
            </summary>
            <typeparam name="T">The type of the Data Object link</typeparam>
            <param name="link">The Data Object link</param>
            <returns>The TOM.NET Business Object or <c>null</c> if the given link is <c>null</c> or refers to <c>null</c> or <c>tcm:0-0-0</c></returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetNewObject(Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Get a new Identifiable Object of the given data object.
            </summary>
            <param name="data">The Data Object to be used for updating the default data.</param>
            <returns>The Business Object.</returns>
            <remarks>
            The Business Object is created with default data and updated with the <paramref name="data"/> object.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetNewObject(Tridion.ContentManager.ItemType,System.String)">
            <summary>
             Get a new Identifiable Object of the given item type.
            </summary>
            <param name="itemType">The item type used to create the business object.</param>
            <param name="containerId">The parent id used for creating a Repository Local Object.</param>
            <returns>The Business Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjectsFromDataObjectLinks``2(System.Collections.Generic.ICollection{Tridion.ContentManager.Data.Link{``1}})">
            <summary>
            Get a collection of TOM.NET objects for a given collection of Data Object links.
            </summary>
            <typeparam name="T">The type of the TOM.NET objects.</typeparam>
            <typeparam name="DT">Type type of the Data Objects.</typeparam>
            <param name="dataObjectLinks">The collection of Data Object links.</param>
            <returns>A list of TOM.NET objects or <c>null</c> if <paramref name="dataObjectLinks"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjectsFromDataObjectLinks``2(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link{``1}})">
            <summary>
            Get a collection of TOM.NET objects for a given collection of Data Object links.
            </summary>
            <typeparam name="T">The type of the TOM.NET objects.</typeparam>
            <typeparam name="TData">The type of the Data Objects.</typeparam>
            <param name="dataObjectLinks">Enumerable of Data Object links.</param>
            <returns>A list of TOM.NET objects or <c>null</c> if <paramref name="dataObjectLinks"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjectsFromDataObjectLinks``2(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.LinkWithIsEditable{``1}})">
            <summary>
            Get a collection of TOM.NET objects for a given collection of Data Object links.
            </summary>
            <typeparam name="T">The type of the TOM.NET objects.</typeparam>
            <typeparam name="TData">The type of the Data Objects.</typeparam>
            <param name="dataObjectLinks">Enumerable of Data Object links.</param>
            <returns>A list of TOM.NET objects or <c>null</c> if <paramref name="dataObjectLinks"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetDataObjectsLinksFromObjects``2(System.Collections.Generic.IList{``0})">
            <summary>
            Get a list of Data objects link for a given list of TOM.NET objects.
            </summary>
            <typeparam name="T">The type of the TOM.NET objects.</typeparam>
            <typeparam name="TData">Type type of the Data Objects.</typeparam>
            <param name="businessObjects">The collection of TOM.NET objects.</param>
            <returns>A list of data object links.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjectsFromDataObjects``2(System.Collections.Generic.IEnumerable{``1},Tridion.ContentManager.StronglyTypedFilter,System.Boolean)">
            <summary>
            Gets a collection of TOM.NET objects for the specified collection of data objects.
            </summary>
            <typeparam name="T">The type of the TOM.NET object.</typeparam>
            <typeparam name="DT">The type of the data object.</typeparam>
            <param name="dataObjects">The collection of data objects.</param>
            <param name="filter">The filter that specifies the requested columns/properties, including whether allowed actions are required</param>
            <param name="removeInternalProperties">
            In order to determine allowed actions, more properties than requested by the Filter may be needed internally.
            If this parameter is set to <c>true</c>, these "internal" properties will be removed again (to avoid that they end up in the serialized XML).
            Use <c>false</c> for best performance.
            </param>
            <returns>An <see cref="T:IList"/> of TOM.NET objects.</returns>
            <remarks>
            This method wraps the Data Objects in Business Objects, but also lets the Business Objects set the allowed actions, if requested in the given Filter.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetTcmUri(System.String)">
            <summary>
            Get a TCM URI object for a given TCM URI or WebDAV URL string.
            </summary>
            <param name="uri">The URI string, which can contain either a TCM URI or a WebDAV URL.</param>
            <returns>A TCM URI object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetBLObject(System.String,System.Boolean)">
            <summary>
            Get a Business Logic object.
            </summary>
            <param name="className">The name of the class (excluding BL or BLST suffixes).</param>
            <param name="transactional">Indicates whether a transactional BL class is required.</param>
            <returns>An object that can perform the Business Logic and supports the expected interfaces.</returns>
            <remarks>
            This method is mainly for internal use. It can be overridden in a subclass to support unit testing using mock BL objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.ReleaseBLObject(System.Object)">
            <summary>
            Release the reference to a Business Logic object.
            </summary>
            <param name="blObject">The BL object reference to release.</param>
            <remarks>
            This method is mainly for internal use. It can be overridden in a subclass to support unit testing using mock BL objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.Dispose(System.Boolean)">
            <summary>
            Release all "expensive" objects. Part of Dispose pattern implementation.
            </summary>
            <param name="disposing">Indicates whether this method is called from the Dispose method or the finalizer.</param>
            <remarks>According to MS guidelines, it should be allowed to call Dispose multiple times.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetNewObject(System.Type,System.String)">
            <summary>
            Get a new Identifiable Object of the given object type.
            </summary>
            <param name="objectType">The object used to create the business object.</param>
            <param name="containerUri">The parent id used for creating a Repository Local Object.</param>
            <returns>The Business Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetTransactionId">
            <summary>
            Gets the transaction id.
            </summary>
            <returns>Returns the transaction id if there is a transaction otherwise returns an empty string.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Session.ApiVersion">
            <summary>
            Gets the API version.
            </summary>
            <value>
            Syntax: {MajorVersion}.{MinorVersion}.{ServicePack}
            </value>
            <remarks>
            Typically, the API itself does not change for Service Packs, but system behavior
            may change (i.e. be corrected) and therefore the Service Pack number is included.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.Cache">
            <summary>
            Gets or sets the cache used by this Session.
            </summary>
            <remarks>
            As soon as the Cache property is set, all objects used in the Session will be put in the cache
            and the Session will try to obtain objects from the cache.
            A single cache can be shared by multiple Session objects.
            The lifetime of a cache may be longer or shorter that the lifetime of a Session.
            If the Cache property is set to <c>null</c>, the Session will stop caching.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ICache"/>
            <seealso cref="T:Tridion.ContentManager.Caching.SimpleCache"/>
        </member>
        <member name="P:Tridion.ContentManager.Session.SystemManager">
            <summary>
            Gets an instance of <see cref="P:Tridion.ContentManager.Session.SystemManager"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Session.WorkflowManager">
            <summary>
            Gets an instance of <see cref="P:Tridion.ContentManager.Session.WorkflowManager"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Session.User">
            <summary>
            Gets the <see cref="P:Tridion.ContentManager.Session.User"/> for which the <see cref="T:Tridion.ContentManager.Session"/> was created.
            </summary>
            <remarks>
            If impersonation has been used, this will be the impersonated user.
            The Group Memberships are expanded, i.e. the collection also contains indirect Group memberships
            and also group memberships obtained from an external LDAP Directory (if any).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.WebDavUrlPrefix">
            <summary>
            Gets or sets the WebDAV URL prefixed used for this Session.
            </summary>
            <remarks>
            By default, the WebDAV URL prefix is /webdav, but it can be overridden per Session.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.TransactionTimeout">
            <summary>
            Gets or sets the transaction timeout (in seconds) used for this Session.
            </summary>
            <remarks>
            By default, the transaction timeout is 60 seconds, but it can be overridden per Session.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.ContextData">
            <summary>
            Gets or sets the application user-defined data.
            </summary>
            <remarks>
            This data can be used to get or set some application specific information about context of the current session.
            For example, a custom data can be passed from application to event handlers.
            <para>
            When asynchronous events are triggered, all the <see cref="P:Tridion.ContentManager.Session.ContextData"/> are copied to avoid interference, 
            but the exact behaviour differs and depends on a type of the user-defined objects stored in the session.
            For any type derived from <see cref="T:Tridion.ContentManager.IdentifiableObject"/>, a new object is created and all property values are cloned.
            For a type implementing <see cref="T:System.ICloneable"/> interface, the object is cloned by calling its <see cref="M:System.ICloneable.Clone"/> method.
            For any value type, the object's value is simply copied over.
            For any other reference type, only the object's reference is copied which can be dangerous if the object is not immutable.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.AuthorizationManager">
            <summary>
            Gets an instance of <see cref="P:Tridion.ContentManager.Session.AuthorizationManager"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Session.UserContext">
            <summary>
            Gets a COM user context object.
            </summary>
            <remarks>UserContext is bound to session, so if Session is disposed then UserContext is not longer available.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.EventStack">
            <summary>
            Gets the event stack for the current session.
            </summary>
            <value>The event stack associated with the current session.</value>
            <remarks>
            This method is for internal use by the <see cref="T:Tridion.ContentManager.Extensibility.EventSystem"/> only. It use it to track events that are delivered inside the scope
            of other events (nested operations).
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Session.ExternalTransactionState">
            <summary>
            Represents the state of an "external" transaction (i.e. a transaction that is not coordinated by the TOM.NET itself)
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Session.ExternalTransactionState.None">
            <summary>No external transaction present.</summary>
        </member>
        <member name="F:Tridion.ContentManager.Session.ExternalTransactionState.InProgress">
            <summary>An external transaction is in progress.</summary>
        </member>
        <member name="F:Tridion.ContentManager.Session.ExternalTransactionState.Completing">
            <summary>An external transaction has completed, but we still have to release the Data Session.</summary>
        </member>
        <member name="F:Tridion.ContentManager.Session.ExternalTransactionState.Completed">
            <summary>An external transaction has completed and we have released the Data Session.</summary>
        </member>
        <member name="T:Tridion.ContentManager.SystemManager">
            <summary>
            The <see cref="T:Tridion.ContentManager.SystemManager"/> object provides functionality to retrieve system wide data from the system.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.SystemManager"/> class. 
            </summary>
            <param name="session">The Session in which the SystemManager should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of Repository Local Objects across all Publications constrained by the specified filter.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>The a collection of Repository Local objects.</returns>
            <remarks>
            As per current implementation if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/> is set then it returns those items constrained by the filter.
            Otherwise it returns items that are checked out, either by the current user if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> is not set, or
            by the user specified in <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> condition, constrained by the rest of the filter condition.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of Repository Local Objects in XML format across all Publications constrained by the specified filter.
            </summary>
            <param name="filter">Can be used to filter the result of items.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <remarks>
            As per current implementation if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.ItemIds"/> is set then it returns those items constrained by the filter.
            Otherwise it returns items that are checked out, either by the current user if <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> is not set, or
            by the user specified in <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter.LockUser"/> condition, constrained by the rest of the filter condition.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.SystemManager.GetRepositoryLocalObjects(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetUsers">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.User"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.User"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetUsers(Tridion.ContentManager.Security.UsersFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.User"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Security.UsersFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.UsersFilter"/> that constraints the list of Users in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.User"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects that are checked out as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects that are checked out as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> that constraints the list of versioned items that are checked out in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.VersionedItem"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetGroups">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.Group"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.Group"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetGroups(Tridion.ContentManager.Security.GroupsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Security.Group"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> that constraints the list of Groups in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Security.Group"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetTargetTypes">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetTargetTypes(Tridion.ContentManager.CommunicationManagement.TargetTypesFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetMultimediaTypes">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetMultimediaTypes(Tridion.ContentManager.ContentManagement.MultimediaTypesFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetPublicationTargets">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetPublicationTargets(Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetRepositories">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetRepositories(Tridion.ContentManager.ContentManagement.RepositoriesFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetPublications">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetPublications(Tridion.ContentManager.CommunicationManagement.PublicationsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetBluePrintNodes">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetBluePrintNodes(Tridion.ContentManager.ContentManagement.BluePrintFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> that constraints the list of BluePrint nodes in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> objects.</returns>
            <exception cref="T:Tridion.ContentManager.FilterException">Throws exception if <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForItem"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForRepository"/> both the conditions are set.</exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintNodes(Tridion.ContentManager.ContentManagement.BluePrintFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/> objects as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> that constraints the list of <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintNode"/>.</param>
            <returns>A list of BluePrintNodes as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <exception cref="T:Tridion.ContentManager.FilterException">Throws exception if <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForItem"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForRepository"/> both the conditions are set.</exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetBluePrintParents">
            <summary>
            Gets the list of valid BluePrint parents of a new Repository as <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>A list of Repository as <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
            <remarks>
            The returned list will contain only those repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetBluePrintParents(Tridion.ContentManager.ContentManagement.BluePrintParentsFilter)">
            <summary>
            Gets the list of valid BluePrint parents of a Repository as <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> to specify for which Repository BluePrint parents will be resolved</param>
            <returns>
            A list of Repository as <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </returns>
            <remarks>
            The returned list will contain only those repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetSecurityDescriptorsForSubjectsIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a dictionary with subjectId as the key and a set of associated <see cref="T:Tridion.ContentManager.Security.SecurityDescriptor"/> as value.
            </summary>
            <param name="subjectIds">The subject Ids whose <see cref="T:Tridion.ContentManager.Security.SecurityDescriptor"/> needs to be retrieved.</param>
            <returns>A dictionary with subjectId as the key and a set of associated <see cref="T:Tridion.ContentManager.Security.SecurityDescriptor"/> as value.</returns>
            <remarks>
            For root Organizational Items the value of the <see cref="P:Tridion.ContentManager.Security.SecurityDescriptor.Permissions"/> is always <see cref="F:Tridion.ContentManager.Security.Permissions.None"/>.
            Use the <see cref="P:Tridion.ContentManager.Security.SecurityDescriptor.Rights"/> to check if the user can read, write, localize or delete the item.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.LoadGlobalApplicationData(System.String)">
            <summary>
            Loads global (system-wide) application-specific data for a given application.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <returns>An <see cref="T:Tridion.ContentManager.ApplicationData"/> instance representing the application-specific data or <c>null</c> if no such data exists.</returns>
            <seealso cref="M:Tridion.ContentManager.SystemManager.LoadAllGlobalApplicationData"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.LoadAllGlobalApplicationData">
            <summary>
            Loads all global (system-wide) application-specific data.
            </summary>
            <returns>
            A collection of <see cref="T:Tridion.ContentManager.ApplicationData"/> objects representing all the global application-specific data stored in the system.
            </returns>
            <seealso cref="M:Tridion.ContentManager.SystemManager.LoadGlobalApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.SaveGlobalApplicationData(Tridion.ContentManager.ApplicationData)">
            <summary>
            Saves global (system-wide) application-specific data.
            </summary>
            <param name="applicationData">The application-specific data to store.</param>
            <remarks>
            If global application-specific data already exists for the given application identifier, it will be overwritten.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.SystemManager.DeleteGlobalApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.SaveGlobalApplicationData(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ApplicationData})">
            <summary>
            Saves global (system-wide) application-specific data.
            </summary>
            <param name="applicationDataCollection">A collection of application-specific data to store.</param>
            <remarks>
            If global application-specific data already exists for the given application identifiers, it will be overwritten.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.SystemManager.DeleteGlobalApplicationData(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.DeleteGlobalApplicationData(System.String)">
            <summary>
            Deletes global (system-wide) application-specific data for a given application.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <seealso cref="M:Tridion.ContentManager.SystemManager.DeleteAllGlobalApplicationData"/>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.DeleteAllGlobalApplicationData">
            <summary>
            Deletes all global (system-wide) application-specific data.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetApplicationIds">
            <summary>
            Reads all application IDs for all application data stored in the system.
            </summary>
            <returns>
            A collection of <see cref="T:System.String"/> values representing all application IDs.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.PurgeApplicationData(System.String)">
            <summary>
            Deletes all (global and subject related) application data for a given application ID.
            </summary>
            <param name="applicationId">The application identifier.</param>
            <remarks>
            Typical usecase of this method is a clean up of all application data left by some application which was uninstalled.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetSubjectIdsWithApplicationData(System.String)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.TcmUri"/> of subjects which have application data of the specified <paramref name="applicationId"/> associated.
            </summary>
            <param name="applicationId">The application Id whose subjects needs to be retrieved.</param>
            <returns>An enumerable of <see cref="T:Tridion.ContentManager.TcmUri"/> of subjects associated with the specified application data.</returns>
            <remarks>
            If the specified <paramref name="applicationId"/> has associated Global Application Data, then, the returned list will contain tcm:0-0-0.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.PurgeOldVersions(Tridion.ContentManager.PurgeOldVersionsInstruction)">
            <summary>
            Purges the old versions, according to <see cref="T:Tridion.ContentManager.PurgeOldVersionsInstruction"/> object.
            </summary>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">Operation can be invoked only by System Administrator.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">The <see cref="P:Tridion.ContentManager.PurgeOldVersionsInstruction.Containers"/> property can contains only items of next types:
            <list type="bullet">
            <item> <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/></item>
            <item> <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/></item>
            <item> <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/></item>
            </list>
            </exception>
            <exception cref="T:Tridion.ContentManager.ItemDoesNotExistException">Item in the <see cref="P:Tridion.ContentManager.PurgeOldVersionsInstruction.Containers"/> property doesn't exists.</exception>
            <example>
            <code>
             PurgeOldVersionsInstruction instruction = new PurgeOldVersionsInstruction(SysAdminSession);
             SysAdminSession.SystemManager.PurgeOldVersions(instruction);
            </code>
            </example>
            <param name="instruction">The purge instruction.</param>
            <returns>The count of purged versions.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListUsers">
            <summary>
            Gets a list of Users as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of Users as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListUsers(Tridion.ContentManager.Security.UsersFilter)">
            <summary>
            Gets a list of Users as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Security.UsersFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.UsersFilter"/> that constraints the list of Users.</param>
            <returns>A list of Users as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListCheckedOutItems(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of Versioned Items that are checked out as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> that constraints the list of Versioned items that are checked out.</param>
            <returns>A list of Versioned Items as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListGroups(Tridion.ContentManager.Security.GroupsFilter)">
            <summary>
            Gets a list of Groups as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.GroupsFilter"/> that constraints the list of Groups.</param>
            <returns>A list of Groups as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListRepositories(Tridion.ContentManager.ContentManagement.RepositoriesFilter)">
            <summary>
            Gets a list of Repositories as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoriesFilter"/> that constraints the list of Repositories.</param>
            <returns>A list of Repositories as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListPublications">
            <summary>
            Gets a list of Publications as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of Publications as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListPublications(Tridion.ContentManager.CommunicationManagement.PublicationsFilter)">
            <summary>
            Gets a list of Publications as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> that constraints the list of Publications.</param>
            <returns>A list of Publications as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListPublicationTargets(Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter)">
            <summary>
            Gets a list of Publication Targets as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTargetsFilter"/> that constraints the list of Publication Targets.</param>
            <returns>A list of Publication Targets as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListMultimediaTypes(Tridion.ContentManager.ContentManagement.MultimediaTypesFilter)">
            <summary>
            Gets a list of Multimedia Types as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.MultimediaTypesFilter"/> that constraints the list of Multimedia types.</param>
            <returns>A list of Multimedia Types as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListTargetTypes(Tridion.ContentManager.CommunicationManagement.TargetTypesFilter)">
            <summary>
            Gets a list of Target Types as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetTypesFilter"/> that constraints the list of Target Types.</param>
            <returns>A list of Target Types as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintParents">
            <summary>
            Gets the list of valid BluePrint parents for a new Repository as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of Repository as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            The returned list will contain only those repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintParents(Tridion.ContentManager.ContentManagement.BluePrintParentsFilter)">
            <summary>
            Gets the list valid BluePrint parents of a Repository.
            </summary>
            <param name="filter">a <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> to specify for which Repository BluePrint parents will be resolved.</param>
            <returns>A list of Repository as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            To get the valid parents for new Publication set the <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.ForRepository"/> null.
            The returned list will contain only those repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListRepositoryLocalObjectsStream(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of Repository Local Object(s) as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> that constraints the list of Repository Local Object(s) in the XML.</param>
            <returns>A list of Repository Local Object(s) in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintParentsStream(Tridion.ContentManager.ContentManagement.BluePrintParentsFilter)">
            <summary>
            Gets the list valid BluePrint parents Repository as a <see cref="T:System.IO.Stream"/> of XML data.
            </summary>
            <param name="filter">a <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> to specify the Repository.</param>
            <returns>A list of Repository in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListPublicationsStream(Tridion.ContentManager.CommunicationManagement.PublicationsFilter)">
            <summary>
            Gets a list of Publications as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> that constraints the list of Publications in the XML.</param>
            <returns>A list of Publications in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListUsersStream(Tridion.ContentManager.Security.UsersFilter)">
            <summary>
            Gets a list of Users as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.Security.UsersFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.UsersFilter"/> that constraints the list of Users in the XML.</param>
            <returns>A list of Users in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintNodesStream(Tridion.ContentManager.ContentManagement.BluePrintFilter)">
            <summary>
            Gets a list of Blue Print Nodes as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> that constraints the list of nodes in the XML.</param>
            <returns>A list of BluePrintNodes in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
            <exception cref="T:Tridion.ContentManager.FilterException">Throws exception if <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForItem"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForRepository"/> both the conditions are set.</exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListRepositoryLocalObjectsData(Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListUsersData(Tridion.ContentManager.Security.UsersFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.Security.UserData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.Security.UsersFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Security.UsersFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.Security.UserData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.Security.UserData"/> objects.</returns>
            <remarks>
            The returned Data Objects do NOT have allowed actions set yet, 
            but will be loaded with all properties needed to determine allowed actions (if requested in the filter).
            In order to set the allowed actions (and remove non-requested, internal properties needed to determine allowed action),
            use <see cref="M:Tridion.ContentManager.Session.GetObjectsFromDataObjects``2(System.Collections.Generic.IEnumerable{``1},Tridion.ContentManager.StronglyTypedFilter,System.Boolean)"/> on the list of Data Objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintParentsData(Tridion.ContentManager.ContentManagement.BluePrintParentsFilter)">
            <summary>
            Gets the list <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryData"/> of valid BluePrint parents data for a Repository.
            </summary>
            <param name="filter">a <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter"/> to specify the Repository for which valid parents will be fetched.</param>
            <returns>a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.RepositoryData"/></returns>
            <remarks>To get the valid parents of a new Repository set <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintParentsFilter.ForRepository"/> to null.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListPublicationsData(Tridion.ContentManager.CommunicationManagement.PublicationsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.PublicationData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationsFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.PublicationData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.CommunicationManagement.PublicationData"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetListBluePrintNodesData(Tridion.ContentManager.ContentManagement.BluePrintFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.BluePrintNodeData"/> objects constrained by the specified <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.ContentManagement.BluePrintFilter"/> that constraints the list of returned <see cref="T:Tridion.ContentManager.Data.ContentManagement.BluePrintNodeData"/> objects.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Data.ContentManagement.BluePrintNodeData"/> objects.</returns>
            <exception cref="T:Tridion.ContentManager.FilterException">Throws exception if <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForItem"/> and <see cref="P:Tridion.ContentManager.ContentManagement.BluePrintFilter.ForRepository"/> both the conditions are set.</exception>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.PostProcessGetListRepositoryLocalObjects(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.ContentManagement.RepositoryLocalObjectData},Tridion.ContentManager.ContentManagement.RepositoryLocalObjectsFilter)">
            <summary>
            Posts the processing for ProcessGetListRepositoryLocalObjectsData.
            </summary>
            <param name="repositoryLocalObjectDatas">The repository local object datas.</param>
            <param name="filter">The filter.</param>
            <returns>A collection of RepositoryLocalObjectData.</returns>
        </member>
        <member name="M:Tridion.ContentManager.SystemManager.GetLegacyList(Tridion.ContentManager.SystemWideListFilter)">
            <summary>
            Gets a system wide list in XML format from the legacy business layer.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
        </member>
        <member name="P:Tridion.ContentManager.SystemManager.Session">
            <summary>
            Gets the context Session.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.TypeRegistry">
            <summary>
            Contains mappings between object types, ItemType enumeration values and localizable type names.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetDataObjectTypes(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets Types of the data objects currently supported.
            </summary>
            <param name="provider">DataContractSerializer passes the ServiceContract class or MethodInfo of the OperationContract method  as <see cref="T:System.Reflection.ICustomAttributeProvider"/></param> when invoking this method. 
            <returns>Collection of the data object types</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterType(Tridion.ContentManager.ItemType,System.Type,System.Type,System.String)">
            <summary>
            Register a domain object type.
            </summary>
            <param name="itemType">The type ID of the type to register.</param>
            <param name="businessObjectType">The Type of the business object (TOM.NET object).</param>
            <param name="dataObjectType">The Type of the data object.</param>
            <param name="typeResource">The name of the string resource containing the (localizable) name of the type.</param>
            <remarks>
            This method should be called for all classes which are implemented in R6 architecture.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterSystemWideList(System.Type,System.Type,System.Type,System.Type,System.String,System.String)">
            <summary>
            Register list methods for System Wide Objects 
            </summary>
            <param name="filterType">The Type of the <c>filter</c> parameter in the list method</param>
            <param name="filterDataType">The type of the data class associated with <c>filterType</c>.</param>
            <param name="businessObjectType">The Type of the business object (TOM.NET object).</param>
            <param name="managerType">The Type of class that contains the system wide list methods.</param>
            <param name="xmlListMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <see cref="T:Tridion.ContentManager.SystemManager"/> that returns a list as domain objects.</param>
            <remarks>
            This method should be called for all filter classes derived from  <see cref="T:Tridion.ContentManager.SystemWideListFilter"/> implemented in R6 architecture.
            </remarks>
            <exception cref="T:Tridion.ContentManager.KernelException">Trying to register the same list twice.</exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterSubjectRelatedList(System.Type,System.Type,System.Type,System.String,System.String)">
            <summary>
            Register subject-related list methods
            </summary>
            <param name="filterType">The Type of the <c>filter</c> parameter in the list method</param>
            <param name="filterDataType">The type of the data class associated with <c>filterType</c>.</param>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <c>subjectType</c> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <c>subjectType</c> that returns a list as domain objects.</param>
            <remarks>
            This method should be called for all concrete filter classes derived from <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/>.
            </remarks>
            <exception cref="T:Tridion.ContentManager.KernelException">Trying to register the same list twice.</exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterSubjectRelatedList(System.Type,System.Type,System.Type,System.String,System.String,System.String)">
            <summary>
            Register subject-related list methods
            </summary>
            <param name="filterType">The Type of the <c>filter</c> parameter in the list method</param>
            <param name="filterDataType">The type of the data class associated with <c>filterType</c>.</param>
            <param name="subjectType">The Type of the object (TOM.NET object) to call list on.</param>
            <param name="xmlListMethodName">The name of the method in <c>subjectType</c> that returns a list as XML.</param>
            <param name="listMethodName">The name of the method in <c>subjectType</c> that returns a list as domain objects.</param>
            <param name="dataObjectlistMethodName">The name of the method in <c>subjectType</c> that returns a list as data objects.</param>
            <remarks>
            This method should be called for all concrete filter classes derived from <see cref="T:Tridion.ContentManager.SubjectRelatedListFilter"/>.
            </remarks>
            <exception cref="T:Tridion.ContentManager.KernelException">Trying to register the same list twice.</exception>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetLocalizableTypeName(Tridion.ContentManager.ItemType)">
            <summary>
            Get the localizable type name for a given type ID.
            </summary>
            <param name="typeId">The type ID.</param>
            <returns>A LocalizableMessage representing the localizable type name 
            or a string representing the unlocalized type ID if no type resource is found for the given type ID.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetLocalizedTypeNames(System.Type)">
            <summary>
            Returns string containing comma-separated list of localized item type names.
            </summary>
            <param name="dataObjectType">Type of the data object.</param>
            <returns>String containing comma-separated list of localized item type names.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetLocalizedTypeNames(System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})">
            <summary>
            Returns string containing comma-separated list of localized item type names.
            </summary>
            <param name="itemTypes">The item types.</param>
            <returns>String containing comma-separated list of localized item type names.</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetItemType(System.Type)">
            <summary>
            Gets the ItemType that corresponds with the given Type. If the specified Type is derived from a known ItemType, it will return that ItemType
            </summary>
            <param name="objectType">The <see cref="T:System.Type"/> of the object that you want the <see cref="T:Tridion.ContentManager.ItemType"/> of</param>
            <returns>The <see cref="T:Tridion.ContentManager.ItemType"/> that corresponds to the specified <paramref name="objectType"/>.</returns>
            <remarks>Returns ItemType.None as default if the <paramref name="objectType"/> is not (derived from) a known ItemType</remarks>
            <example>
            <c>example 1</c>
            <code>
            Session.GetItemType(typeof(Schema));
            // returns ItemType.Schema
            </code>
            <c>example 2</c>
            <code>
            // VerySpecialComponent is derived from SpecialComponent. 
            // SpecialComponent is derived from Component.
            Session.GetItemType(typeof(VerySpecialComponent));
            // returns ItemType.Component
            </code>
            <c>example 3</c>
            <code>
            Session.GetItemType(typeof(Template));
            // returns ItemType.None
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterChildTypes(System.Type,System.Type,Tridion.ContentManager.Security.Rights)">
            <summary>
            Registers the child types of an OrganizationalItem and the managementRights that are associated with the childType.
            </summary>
            <param name="containerType">Type of the container.</param>
            <param name="childType">Type of the item that can reside in the container</param>
            <param name="managementRights">The management rights that are defined for the containeeType.</param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetChildTypes(System.Type)">
            <summary>
            Gets the child types and their associated rights for the specified containerType
            </summary>
            <param name="containerType">Type of the container.</param>
            <returns>an IDictionary of the child Types and their associated Rights</returns>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.Initialize">
            <summary>
            Initializes mappings between domain object types, data object types, ItemType enumeration values and resource IDs for localizable type names.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.RegisterType(System.Type)">
            <summary>
            Registers a domain object type.
            </summary>
            <param name="businessObjectType">Type of the business object.</param>
        </member>
        <member name="M:Tridion.ContentManager.TypeRegistry.GetRegisteringConstructor(System.Type)">
            <summary>
            Gets a constructor that will be used to register a business object type.
            </summary>
            <param name="businessObjectType">Type of the business object.</param>
            <returns>The constructor that will be used to register a business object type.</returns>
        </member>
        <member name="T:Tridion.ContentManager.ConversionType">
            <summary>
            Specifies the type of conversion to do in a URL conversion batch.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.UrlConversion">
            <summary>
            Provides WebDAV URL to/from TCM URI conversion functionality.
            </summary>
            <remarks>
            One instance of the class is used for one URL conversion batch.
            The UrlConversion is a class instead of a structure because
            the properties of a Value types cannot be modified in a Collection
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.#cctor">
            <summary>
            Class constructor (a.k.a. type initializer)
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create a new instance for a batch of URL conversions or for building a WebDAV URL. The conversion type 
            is <see cref="F:Tridion.ContentManager.ConversionType.WebDavUrlsToTcmUris"/>.
            </summary>
            <param name="session">The Session in which the URL conversion is performed.</param>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.#ctor(Tridion.ContentManager.ConversionType,Tridion.ContentManager.Session)">
            <summary>
            Create a new instance for a batch of URL conversions.
            </summary>
            <param name="conversionType">The type of conversions that will be done in the batch.</param>
            <param name="session">The Session in which the URL conversion is performed.</param>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.AddLink(Tridion.ContentManager.Data.Link)">
            <summary>
            Add a single Link to the batch.
            </summary>
            <param name="link">The Link to convert</param>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.AddLinks(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link})"/>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.Convert"/>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.AddLinks(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link})">
            <summary>
            Add a collection of Links to the batch.
            </summary>
            <param name="links">The collection of Links to convert</param>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.AddLink(Tridion.ContentManager.Data.Link)"/>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.Convert"/>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.AddLinks``1(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link{``0}})">
            <summary>
            Add a collection of Links to the batch.
            </summary>
            <param name="links">The collection of Links to convert</param>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.AddLink(Tridion.ContentManager.Data.Link)"/>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.Convert"/>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.AddXLinks(System.Xml.XmlNode)">
            <summary>
            Add XLink elements to the batch.
            </summary>
            <param name="rootNode">The root element under which XLink elements should be located.</param>
            <seealso cref="M:Tridion.ContentManager.UrlConversion.Convert"/>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.Convert">
            <summary>
            Perform the URL conversion.
            </summary>
            <remarks>
            Whether TCM URIs are converted to WebDAV URLs or vice versa depends on the <see cref="P:Tridion.ContentManager.UrlConversion.ConversionType"/> specified in the constructor.
            The Link objects and XLink elements added to the batch are updated with the conversion results.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.TryConvert">
            <summary>
            Preforms the URL conversion, but don't fail if some items cannot be converted.
            </summary>
            <returns><c>true</c> if all items could be converted.</returns>
            <remarks>
            Whether TCM URIs are converted to WebDAV URLs or vice versa depends on the <see cref="P:Tridion.ContentManager.UrlConversion.ConversionType"/> specified in the constructor.
            The Link objects and XLink elements added to the batch are updated with the conversion results.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.ConvertTcmUrisToWebDavUrls(Tridion.ContentManager.Data.ISystemDataMapper)">
            <summary>
            Convert TCM URIs to WebDAV URLs.
            </summary>
            <param name="systemDataMapper">The data mapper used for the DAL access</param>
            <returns><c>true</c> if all items could be converted.</returns>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.ConvertWebDavUrlsToTcmUris(Tridion.ContentManager.Data.ISystemDataMapper)">
            <summary>
            Convert WebDAV URLs to TCM URIs.
            </summary>
            <param name="systemDataMapper">The SystemDataMapper used for the DAL access</param>
            <returns><c>true</c> if all items could be converted.</returns>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.HasWebDavUrl(Tridion.ContentManager.ItemType)">
            <summary>
            Determine whether items of a given type can have a WebDAV URL.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.HasWebDavUrl(Tridion.ContentManager.TcmUri)">
            <summary>
            Determine whether items of a given type can have a WebDAV URL.
            </summary>
            <param name="tcmUri">TCMUri</param>
            <remarks>
            IF item is in system repositroy, then HasWebDavUrl will return false. Otherwise, it calls overloaded version of the method
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.BuildWebDavUrl(Tridion.ContentManager.Data.PathInfo)">
            <summary>
            Build a WebDAV URL from given PathInfo.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.BuildWebDavUrl(System.String,Tridion.ContentManager.ItemType,System.Nullable{System.Int32},System.String,System.String,System.Boolean)">
            <summary>
            Build a WebDAV URL.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.BuildPathInfo(System.String)">
            <summary>
            Build PathInfo from a given WebDAV URL.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.ConvertPathToUrl(System.String)">
            <summary>
            Convert a path of a TCM item to a UTF-8 URL.
            </summary>
            <param name="path">The path of the TCM item: a concatenation of Repository title, Org. Item titles and the item's own title</param>
            <returns>An UTF-8 URL encoded representation of the path, excluding the WebDAV URL prefix</returns>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.ConvertUrlToPath(System.String)">
            <summary>
            Convert a UTF-8 URL of a TCM item to a path.
            </summary>
            <param name="url">The (UTF-8 encoded) URL, excluding the WebDAV URL prefix and file extension</param>
            <returns>The path of the item: a concatenation of Repository title, Org. Item titles and the item's own title</returns>
        </member>
        <member name="M:Tridion.ContentManager.UrlConversion.ConvertTcmUriToUrl(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Converts a given TcmUri to a WebDavUrl.
            </summary>
            <param name="uri">The TcmUri to convert.</param>
            <param name="session">The Session in which the URL conversion is performed.</param>
            <returns>A WebDavUrl.</returns>
        </member>
        <member name="P:Tridion.ContentManager.UrlConversion.ConversionType">
            <summary>
            Get the conversion type of this batch.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.UrlConversion.ConversionSource">
            <summary>
            Keeps track of the conversion sources for one path mapping.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.UsedItemsFilter">
            <summary>
            Represents the Filter for a list of used items.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.#ctor">
            <summary>
            Constructor used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of <see cref="T:Tridion.ContentManager.UsedItemsFilter"/>.
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.#ctor(Tridion.ContentManager.Data.UsedItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Creates a new instance based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.SetDefaultValues">
            <summary>
            Sets default values on the <c>CurrentState</c> properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsedItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.UsedItemsFilter.IncludeBlueprintParentItem">
            <summary>
            Indicates whether to include the parent item of this item (if any). If this item is a
            local copy, then the parent item is the item overridden by this item
            (as a local copy). The parent item is labeled as such in the Comment attribute.
            </summary>
            <value>A boolean indicating whether Blueprint parent should be
            included in the results or not.</value>
        </member>
        <member name="P:Tridion.ContentManager.UsedItemsFilter.IncludeExternalLinks">
            <summary>
            Indicates whether to include external links in the results. External links are extracted
            from the Component's content/metadata. Applied only for Components.
            </summary>
            <value>A boolean indicating whether external links should be
            included in the results or not.</value>
        </member>
        <member name="P:Tridion.ContentManager.UsedItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.UsingItemsFilter">
            <summary>
            Represents the Filter for a list of items using specific item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> class.
            </summary>
            <param name="session">
            The session used to create business objects.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> class copied from other UsingItemsFilter.
            Creates a new instance which is a copy of the given Filter.
            </summary>
            <param name="filter">The filter to copy from.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.#ctor(Tridion.ContentManager.Data.UsingItemsFilterData,Tridion.ContentManager.Session)">
            <summary>
             Initializes a new instance of the <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.SetDefaultValues">
            <summary>
            Sets default values on the <c>CurrentState</c> properties where values aren't specified.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.UsingItemsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>The <see cref="T:Tridion.ContentManager.Data.UsingItemsFilterData"/> object type.</returns>
        </member>
        <member name="P:Tridion.ContentManager.UsingItemsFilter.IncludedVersions">
            <summary>
            Gets or sets a value indicating which versions to include in the result.
            </summary>
            <remarks>The default value is <see cref="F:Tridion.ContentManager.VersionCondition.AllVersions"/>.
            <para>
            The results are constrained by the specified <see cref="T:Tridion.ContentManager.VersionCondition"/> value in the filter. For example,
            if the value is set to <see cref="F:Tridion.ContentManager.VersionCondition.OnlyLatestVersions"/>, only the items' latests version will be included in the result.
            </para>
            This condition maps to the <c>OnlyLatestVersions</c> and <c>IncludeDynamicVersions</c> conditions in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.UsingItemsFilter.IncludeLocalCopies">
            <summary>
            Gets or sets a value indicating whether local copies are included.
            </summary>
            <remarks>The default value is <c>false</c>.
            <para>
            When specified, the results are constrained by the specified <see cref="P:Tridion.ContentManager.UsingItemsFilter.IncludeLocalCopies"/> value in the filter. For example,
            if the value is set to <c>true</c>, items that are local copies will be included in the result.
            </para>
            This condition maps to the <c>IncludeLocalCopies</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.UsingItemsFilter.ExcludeTaxonomyRelations">
            <summary>
            Gets or sets a value indicating whether taxonomy relations are excluded from the result.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            <para>
            When specified, the results are constrained by the specified <see cref="P:Tridion.ContentManager.UsingItemsFilter.ExcludeTaxonomyRelations"/> value in the filter. For example,
            if the value is set to <c>true</c>, all Taxonomy relations will be excluded from the result.
            </para>
            This condition maps to the <c>ExcludeTaxonomyRelations</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            Taxonomy relations are parent, child and related Keywords of a <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> and allowed parent Categories of a <see cref="T:Tridion.ContentManager.ContentManagement.Category"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.UsingItemsFilter.IncludeVersionsColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:Tridion.ContentManager.ContentManagement.VersionedItem.Version"/> or XML attribute <c>Versions</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.UsingItemsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.CreateLinkTo``1(Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Creates a Link to the IdentifiableObjectData based on the IdentifiableObject object. If the IdentifiableObject is null a Link to Uri null is returned.
            </summary>
            <typeparam name="T">The type of the referenced object. Must be a type derived from <see cref="T:Tridion.ContentManager.IdentifiableObject"/></typeparam>
            <param name="businessObject">The IdentifiableObject to create the link from.</param>
            <returns>A Link to the IdentifiableObjectData.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AddSchemaLocationAttributeForImports(System.Xml.XmlElement,Tridion.ContentManager.LoadFlags,Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Modifies the <paramref name="xsdElement"/> for specialSchema imports and includes and add the appropriate schemaLocation attribute to it.
            When it is not a specialSchema import, it modifies the xsd:include, xsd:import statements so that it removes the xlink:href 
            and xlink:title and xlink:type attributes and adds the schemaLocation attribute with the value of the xlink:href attribute.
            This method is used for PostProcessing the CategoriesXsd on Publication or Xsd on Schema.
            </summary>
            <param name="xsdElement">The CategoriesXsd element from Publication or Xsd element from Schema to process</param>
            <param name="loadFlags">The LoadFlags from the Schema or Publication this method is called for</param>
            <param name="tcmUri">The Id from the Schema or Publication this method is called for</param>
            <param name="session">The current Session object</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AddSchemaLocationAttributeForImports(System.Xml.XmlElement,Tridion.ContentManager.LoadFlags,Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session,System.Boolean)">
            <summary>
            Modifies the <paramref name="xsdElement"/> for specialSchema imports and includes and add the appropriate schemaLocation attribute to it.
            When it is not a specialSchema import, it modifies the xsd:include, xsd:import statements so that it removes the xlink:href 
            and xlink:title and xlink:type attributes and adds the schemaLocation attribute with the value of the xlink:href attribute.
            This method is used for PostProcessing the CategoriesXsd on Publication or Xsd on Schema.
            </summary>
            <param name="xsdElement">The CategoriesXsd element from Publication or Xsd element from Schema to process</param>
            <param name="loadFlags">The LoadFlags from the Schema or Publication this method is called for</param>
            <param name="tcmUri">The Id from the Schema or Publication this method is called for</param>
            <param name="session">The current Session object</param>
            <param name="processCategoryXsdOnly">indicates whether to </param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.ThrowInvalidLinkException(Tridion.ContentManager.Data.Link)">
            <summary>
            Throws an InvalidLinkException where the message contains the LocalizedTypeName of the Link if available.
            </summary>
            <param name="link">The link that is invalid</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.ThrowInvalidLinkException(Tridion.ContentManager.Data.Link,Tridion.ContentManager.KernelException)">
            <summary>
            Throws an InvalidLinkException where the message contains the LocalizedTypeName of the Link if available.
            </summary>
            <param name="link">The link that is invalid</param>
            <param name="innerException">a KernelException that will be wrapped in an InvalidLinkException</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.GetLinkDataType(Tridion.ContentManager.Data.Link)">
            <summary>
            Gets a data object type for a given Link.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.IsAssignableFrom(System.Type,Tridion.ContentManager.ItemType)">
            <summary>
            Determines if the type is assignable from the other type associated with the given item type.
            </summary>
            <param name="toType">Type to assign to</param>
            <param name="fromItemType">Type to assign from</param>
            <returns>True if one type is assignable to another type, false otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidLink(Tridion.ContentManager.Data.Link,Tridion.ContentManager.Session)">
            <summary>
            Performs general link validation:
            <list type="bullet">
              <item>Uri does not contain a version.</item>
              <item>Item Type matches the link type.</item>
              <item>The linked item exists.</item>
            </list>
            </summary>
            <param name="link">The link to validate.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidExistingLink(Tridion.ContentManager.Data.Link,Tridion.ContentManager.Session)">
            <summary>
            Performs general link validation:
            <list type="bullet">
            <item>
            Uri does not contain a version.
            </item>
            <item>
            Item Type matches the link type.
            </item>
            <item>
            The linked item exists.
            </item>
            </list>
            </summary>
            <param name="link">
            The link to validate.
            </param>
            <param name="session">
            The session.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidExistingLinks(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link},Tridion.ContentManager.Session)">
            <summary>
            Iterates over links to validate the Link with <see cref="M:Tridion.ContentManager.Utilities.AssertValidLink(Tridion.ContentManager.Data.Link,Tridion.ContentManager.Session)"/>
            </summary>
            <param name="links">The links to validate.</param> 
            <param name="session">
            The session.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidLinkUri(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Asserts that <paramref name="uri"/> does not have a version specified and is an <see cref="T:Tridion.ContentManager.TcmUri"/>of an existing object.
            </summary>
            <param name="uri">The TCM URI to perform the checks on</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidLinkUri(Tridion.ContentManager.TcmUri,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType},System.Boolean,Tridion.ContentManager.Session)">
            <summary>
            Asserts that the <paramref name="uri"/> is a reference to an <see cref="T:Tridion.ContentManager.ItemType"/> in the <paramref name="allowedItemTypes"/> collection. Also checks if the uri does not have a version specified and is an <see cref="T:Tridion.ContentManager.TcmUri"/>of an existing object.
            </summary>
            <remarks><paramref name="allowedItemTypes"/> can be null, in that case the check for the allowedItemTypes collection is skipped. This is the same as <seealso cref="M:Tridion.ContentManager.Utilities.AssertValidLinkUri(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)"/></remarks>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to perform the checks on.</param>
            <param name="allowedItemTypes">a collection of allowed <see cref="T:Tridion.ContentManager.ItemTypes"/>, that the <paramref name="uri"/> can be a reference to</param>
            <param name="failOnUriNull">a boolean that specifies whether an error should be thrown when the <paramref name="uri"/> is a <see cref="P:Tridion.ContentManager.TcmUri.UriNull"/>.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            If it's a native TCM URI and it does not have TcmUri.UriNull value, then it must conform to some business rules.            
                                                                             - Valid URI format
                                                                             - Item type is expected
                                                                             - Can 't have a version number in the URI
                                                                             - Context Publication ID must match the current context
                                                                             - Item must exist
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertUriNotNull(Tridion.ContentManager.TcmUri,System.Boolean)">
            <summary>
            Asserts that the <paramref name="uri"/> is not null and does not have TcmUri.UriNull value.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to perform the checks on.</param>
            <param name="failOnUriNull">true if exception should be thrown on a TcmUri.Null value.</param>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">Thrown when the uri is null, or when it has TcmUri.UriNull value and failOnUriNull is true.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertVersionlessUri(Tridion.ContentManager.TcmUri)">
            <summary>
            Asserts that the <paramref name="uri"/> does not have a version.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to perform the checks on.</param>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">Thrown when the TCM URI has a version.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertValidItemTypeInUri(Tridion.ContentManager.ItemType,System.Collections.Generic.IEnumerable{Tridion.ContentManager.ItemType})">
            <summary>
            Asserts that the <paramref name="itemType"/> is member of the <paramref name="allowedItemTypes"/>.
            </summary>
            <param name="itemType"><see cref="T:Tridion.ContentManager.ItemType"/> of a <see cref="T:Tridion.ContentManager.TcmUri"/>.</param>
            <param name="allowedItemTypes">List of allowed item types.</param>
            <remarks>The check is performed on the business object types, because there can be several BO types mapped to one ItemType.</remarks>
            <exception cref="T:Tridion.ContentManager.InvalidUriException">Thrown when the business object type mapped to the <paramref name="itemType"/> 
            does not exists in the collection of the business object types mapped to the <paramref name="allowedItemTypes"/>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertItemExists(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Asserts that an item with the specified <paramref name="uri"/> exists in the Tridion Content Manager.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> of an item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Utilities.AssertUrisNotNull``1(System.Collections.Generic.IEnumerable{Tridion.ContentManager.Data.Link{``0}})">
            <summary>
            Validates that the given collection contains only non null Tcm Uris.
            If a null Tcm Uri is found, an <see cref="T:Tridion.ContentManager.InvalidActionException"/> is thrown.
            </summary>
            <typeparam name="T">
            Can be of any types inherited from IdentifiableObjectData.
            </typeparam>
            <param name="links">
            The collection of links to verify.
            </param>
            <exception cref="T:Tridion.ContentManager.InvalidLinkException">
            The collection contains one or more null Link or link to null Uri.
            </exception>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter">
            <summary>
            Represents the Filter for a list of AprovalStatuses.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatusesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatusesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatusesFilter.#ctor(Tridion.ContentManager.Data.Workflow.ApprovalStatusesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatusesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatusesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation">
            <summary>
            Represents an Process Definition Association.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.#ctor(Tridion.ContentManager.Data.Workflow.ProcessDefinitionAssociationData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> class.
            </summary>
            <param name="data">The data object of the Process Definition Association.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL. Throws <see cref="T:Tridion.TridionNotSupportedException"/> exception.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for a <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is actually saved.
            </remarks>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnLoading(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business rule : - check that the item does not have using items
            - check that the item does not have local copies
            </remarks>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnLoadingApplicationData(Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnDeletingApplicationData(Tridion.ContentManager.Extensibility.Events.DeleteApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.DeleteApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.OnSavingApplicationData(Tridion.ContentManager.Extensibility.Events.SaveApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.SaveApplicationData(Tridion.ContentManager.ApplicationData)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TcmUri specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>
            The <see cref="T:System.Type"/> of the Data Object.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.GetManagementRights">
            <summary>
            Get the type of security management rights needed to create/update/delete objects of this class.
            </summary>
            <returns>
            A <see cref="T:Tridion.ContentManager.Security.Rights"/> value needed to create/update/delete objects of this class.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of items that reference this item as an XML <see cref="T:System.IO.Stream"/> constraint by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of items referencing this item.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> of items referencing this item as XML.
            </returns>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.ProcessDefinition">
            <summary>
            Gets the process definition related to current <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/>.
            </summary>
            <value>A <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.ProcessDefinition"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter">
            <summary>
            Represents the Filter for a list of ProcessDefinition associations.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.#ctor(Tridion.ContentManager.Data.Workflow.ProcessDefinitionAssociationsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.ContextRepository">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.ContextRepository"/> condition to constrain the
            items returned by the list to this value.
            </summary>
            <remarks>Only items that belong to this Repository will be included in the filtered list.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.ProcessDefinition">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.ProcessDefinition"/> condition to constrain the
            items returned by the list to this value.
            </summary>
            <remarks>Only items that are associated with this Process Definition will be included in the filtered list.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter">
            <summary>
            Represents the Filter for a list of ProcessDefinitions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.#ctor(Tridion.ContentManager.Data.Workflow.ProcessDefinitionsFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.ContextRepository">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.ContextRepository"/> condition which constrains items returned by the list.
            </summary>
            <remarks>
            Limits the returned result to ProcessDefinitions from specified Publication.
            This condition maps to the <c>PublicationURI</c> condition in the <see cref="P:Tridion.ContentManager.Filter.Conditions"/> collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessesFilter">
            <summary>
            Represents the Filter for a list of Processes.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessesFilter.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/> class. 
            </summary>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessesFilter.#ctor(Tridion.ContentManager.Filter,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/> class based on a copy of the given <see cref="T:Tridion.ContentManager.Filter"/>.
            </summary>
            <param name="filter">The <see cref="T:Tridion.ContentManager.Filter"/> to copy.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessesFilter.#ctor(Tridion.ContentManager.Data.Workflow.ProcessesFilterData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/> class based on a given data object.
            </summary>
            <param name="data">The data object to be used as state of the new Filter instance.</param>
            <param name="session">The session used to create business objects.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessesFilter.GetDataObjectType">
            <summary>
            Gets the Filter data object type.
            </summary>
            <returns>
            The get data object type.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessesFilter.SetDefaultValues">
            <summary>
            Sets default values on the properties where values aren't specified.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessesFilter.ProcessType">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.ProcessesFilter.ProcessType"/> condition to constrain the items returned by the list to this value.
            Using this condition it is possible to return only Process Instance objects, only Process History objects, or both, which is the default.
            </summary>
            <value>The value constrains the items returned by the list to only processes of the specified type.</value>
            <remarks>
            <para>
            ProcessType currently can affect how results are filtered based on security when the calling user
            is not a System Administrator and does not have Workflow Management Rights in any Publication:
            <ul>
            <li>When the calling user is a System Administrator, no security filtering is applied.</li>
            <li>When the calling user has Workflow Management Rights in one or more Publications, only the Processes that belong
            to those Publications are returned.</li>
            <li>
            When the calling user doesn't have Workflow Management Rights in any Publication, ProcessType affects the returned list.
            If ProcessType is <see cref="F:Tridion.ContentManager.Workflow.ProcessType.Active"/>, nothing will be returned because the
            user doesn't have Workflow Management Rights.
            However, if ProcessType has any other value, the results will not be filtered by security. This is a known
            limitation and can change in future versions.
            </li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessesFilter.ForPerformer">
            <summary>
            Gets or sets the <see cref="P:Tridion.ContentManager.Workflow.ProcessesFilter.ForPerformer"/> condition to constrain the items returned by the list to this value.
            </summary>
            <value>For performer.</value>
            <remarks>
            <para>
                For a System Administrator, this property allows to filter results based on a specific performer or return unfiltered results. 
                For a user with Workflow Management Rights in one or more Publications - only the Processes from those Publications are returned, 
                filtered based on a specific performer being set. For a user that is not a System Administrator and does not have Workflow Management
                Rights in any Publication, this property is ignored and the results are always filtered on that user.
            </para>
            <para>
                This condition currently is ignored when the <see cref="P:Tridion.ContentManager.Workflow.ProcessesFilter.ProcessType"/> is set to 
                <see cref="F:Tridion.ContentManager.Workflow.ProcessType.Active"/>; in that case results are never filtered on Performer and are only
                available for System Administrators or users with Workflow Management Rights. This is a known limitation and can change in future
                versions.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessesFilter.CurrentState">
            <summary>
            Gets the filter's current state as a data object.
            </summary>
            <remarks>
            The property's type is refined to the appropriate data object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.WorkflowManager">
            <summary>
            The <see cref="T:Tridion.ContentManager.Workflow.WorkflowManager"/> object provides functionality to retrieve workflow related data from the system.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowManager"/> class. 
            </summary>
            <param name="session">The Session in which the WorkflowManager should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcessDefinitions">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcessDefinitions(Tridion.ContentManager.Workflow.ProcessDefinitionsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/> that constraints the list of Workflow Items in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetUserWorkItems(Tridion.ContentManager.Workflow.UserWorkItemsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/>.
            </summary>
            <param name="filter">An <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/> that constraints the list of Work Items in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> objects.</returns>
            <remarks>
            If <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState"/> set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> then returns a list of Activity Instances
            assigned to Current User. If set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/> or <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/> then
            returns a list of Activity Instances performed by Current User.  
            Will return empty list if <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState"/> set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Finished"/> 
            because the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> is not available anymore once the activity is finished.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcessDefinitionAssociations(Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/> that constraints the list of Activity Instances in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcessDefinitionAssociations">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociation"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcesses">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.Process"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>A list of <see cref="T:Tridion.ContentManager.Workflow.Process"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetProcesses(Tridion.ContentManager.Workflow.ProcessesFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.Process"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/> that constraints the list of Workflow Items in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>A list of <see cref="T:Tridion.ContentManager.Workflow.Process"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListProcessDefinitions(Tridion.ContentManager.Workflow.ProcessDefinitionsFilter)">
            <summary>
            Gets a list of Process Definitions as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionsFilter"/> that constraints the list of Process Definitions.</param>
            <returns>A list of Process Definitions as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListUserWorkItems(Tridion.ContentManager.Workflow.UserWorkItemsFilter)">
            <summary>
            Gets a list of Activity Instances as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/>.
            </summary>
            <param name="filter">An <see cref="T:Tridion.ContentManager.Workflow.UserWorkItemsFilter"/> that constraints the list of Activity Instances.</param>
            <returns>A list of Activity Instances as a <see cref="T:System.Xml.XmlElement"/>.</returns>
            <remarks>
            If <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState"/> set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> then returns a list of Activity Instances
            assigned to Current User. If set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/> or <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/> then
            returns a list of Activity Instances performed by Current User.  
            Will return empty list if <see cref="P:Tridion.ContentManager.Workflow.UserWorkItemsFilter.ActivityState"/> set to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Finished"/> 
            because the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> is not available anymore once the activity is finished.
            </remarks>        
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListProcessDefinitionAssociations(Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter)">
            <summary>
            Gets a list of Process Definition Associations as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinitionAssociationsFilter"/> that constraints the list of Process Definition Associations.</param>
            <returns>A list of Process Definition Associations as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListProcesses(Tridion.ContentManager.Workflow.ProcessesFilter)">
            <summary>
            Gets a list of Processes as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.Workflow.ProcessesFilter"/> that constraints the list of Processes.</param>
            <returns>A list of Processes as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListApprovalStatuses(Tridion.ContentManager.Workflow.ApprovalStatusesFilter)">
            <summary>
            Gets a list of Approval Statuses as a <see cref="T:System.Xml.XmlElement"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/>.
            </summary>
            <param name="filter">An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/> that constraints the list of Publication Targets.</param>
            <returns>A list of Approval Statuses as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetListApprovalStatuses">
            <summary>
            Gets a list of Approval Statuses as a <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <returns>A list of Approval Statuses as a <see cref="T:System.Xml.XmlElement"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetApprovalStatuses">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetApprovalStatuses(Tridion.ContentManager.Workflow.ApprovalStatusesFilter)">
            <summary>
            Gets a list of <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> objects as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> constrained by the specified <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/>.
            </summary>
            <param name="filter">An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatusesFilter"/> that constraints the list of Target Types in the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetLegacyList(Tridion.ContentManager.Workflow.WorkflowManagerFilter)">
            <summary>
            Gets a system wide list in XML format from the legacy business layer.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowManager.GetLegacyList(System.Type,Tridion.ContentManager.Workflow.WorkflowManagerFilter)">
            <summary>
            Gets a system wide list in XML format from the legacy business layer.
            </summary>
            <param name="businessObjectType">Business object type which should be return.</param>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkflowManager.Session">
            <summary>
            Gets the context Session.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.Activity">
            <summary>
            Abstract base class for Activity Instances and Activity Histories.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.WorkflowObject">
            <summary>
            Abstract Base class for Workflow related objects except for <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> and <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowObject"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowObject"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowObject"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.#ctor(Tridion.ContentManager.Data.Workflow.WorkflowObjectData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowObject"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkflowObject"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.AssertValidContextPublication(Tridion.ContentManager.TcmUri)">
            <summary>
            Verifies that TCM URI specified in <paramref name="uri"/> is valid for the current context Repository.
            </summary>
            <param name="uri">The <see cref="T:Tridion.ContentManager.TcmUri"/> to verify.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.OnLoadingApplicationData(Tridion.ContentManager.Extensibility.Events.LoadApplicationDataEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.LoadApplicationData(System.String)"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.GetManagementRights">
            <summary>
            Get the type of security management rights associated with the item type.
            </summary>
            <returns>The value <see cref="F:Tridion.ContentManager.Security.Rights.WorkflowManagement"/>.</returns>        
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.GetListUsingItemsStream(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Gets a list of used items as a <see cref="T:System.IO.Stream"/> of XML data constrained by the specified <see cref="T:Tridion.ContentManager.UsingItemsFilter"/>.
            </summary>
            <param name="filter">A <see cref="T:Tridion.ContentManager.UsingItemsFilter"/> that constraints the list of used items in the XML.</param>
            <returns>A list of used items in a <see cref="T:System.IO.Stream"/> of XML data.</returns>
            <exception cref="T:Tridion.TridionNotSupportedException">Thrown when this method is not supported on the type.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <remarks>
            Business Rule checks go in here.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.GetParentId">
            <summary>
            Get the Id of the parent organizational item of this object.
            </summary>
            <returns>
            The TCM URI of the parent organizational item.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.GetSession(Tridion.ContentManager.IdentifiableObject,System.String)">
            <summary>
            Gets the Session from a given Identifiable Object.
            </summary>
            <param name="source">The Identifiable Object to get the Session from. May be <c>null</c>.</param>
            <param name="parameterName">The parameter name of the source.</param>
            <returns>The Session obtained from the source.</returns>
            <exception cref="T:Tridion.TridionArgumentNullException">If the <paramref name="source"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.GetContextRepository(Tridion.ContentManager.IdentifiableObject,System.String)">
            <summary>
            Gets the context Repository from a given Identifiable Object.
            </summary>
            <param name="source">The Identifiable Object to get the context Repository from. Must be either a Repository Local Object or a Workflow Object.</param>
            <param name="parameterName">The parameter name of the source.</param>
            <returns>The context Repository obtained from the source.</returns>
            <exception cref="T:Tridion.TridionArgumentNullException">If the <paramref name="source"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkflowObject.AssertValidWorkflowUri">
            <summary>
            Workflow object must have a context publication and no version in their URI
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkflowObject.ContextRepository">
            <summary>
            Gets the context Repository: the Repository in which the object has been retrieved.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkflowObject.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkflowObject.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Activity"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Activity"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Activity"/> class.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.#ctor(Tridion.ContentManager.Data.Workflow.ActivityData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Activity"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Activity"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Saving of Activities is not allowed; we create/update them internally.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.Unload">
            <summary>
            Unloads the state.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Activity.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.CurrentState"/> property.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.FinishDate">
            <summary>
            Gets the date/time at which the Activity has been finished.
            </summary>
            <value>
            The date/time at which the Activity has been finished or <see cref="F:System.DateTime.MinValue"/> if the Activity has not been finished yet.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.StartDate">
            <summary>
            Gets the date/time at which the Activity was started (for the first time).
            </summary>
            <value>If the Activity is not started yet, the value is <see cref="F:System.DateTime.MinValue"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.SuspendDate">
            <summary>
            Gets the date/time at which the automated Activity was suspended (the last time).
            </summary>
            <value>If the Activity has not been suspended (yet), the value is <see cref="F:System.DateTime.MinValue"/>.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.Position">
            <summary>
            Gets the position of the current Activity within the Process.
            </summary>
            <seealso cref="P:Tridion.ContentManager.Workflow.Activity.Process"/>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.Owner">
            <summary>
            Gets the User who owns the Activity.
            </summary>
            <remarks>
            The User who starts an Activity becomes the owner of the Activity.
            Ownership can be transferred to someone else using the ReAssign method.
            Only the owner can Finish the Activity.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Workflow.Activity.Performers"/>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.Performers">
            <summary>
            Gets the Users that are performing or have performed the Activity.
            </summary>
            <remarks>
            For now, there can be only one performer, which is also the <see cref="P:Tridion.ContentManager.Workflow.Activity.Owner"/> of the Activity.
            In the future, an Activity can have multiple Performers because it can have multiple <see cref="P:Tridion.ContentManager.Workflow.Activity.WorkItems">Work Items</see>
            and each Work Item can by owned/performed by someone else.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Workflow.Activity.Owner"/>
            <seealso cref="P:Tridion.ContentManager.Workflow.Activity.WorkItems"/>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.FinishMessage">
            <summary>
            Gets the message provided by the User that finished the Activity.
            </summary>
            <value>
            If the Activity has not been finished yet this will be an empty string.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.Assignee">
            <summary>
            Gets the User or Group to which the Activity is assigned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.WorkItems">
            <summary>
            Gets the Work Items involved in the Activity.
            </summary>
            <remarks>
            An Activity contains a Work Item for each Content Manager item ("subject") involved in the Activity.
            For now, an Activity has exactly one Work Item.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.Process">
            <summary>
            Gets the Process which contains the Activity.
            </summary>
            <value>
            If the Activity is read in context of its containing Process, this property is <c>null</c>; 
            it only has a value if the Activity is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Activity.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityDefinition">
            <summary>
            Abstract base class for Activity Definitions. Part of Process Definition.
            </summary>
            <seealso cref="P:Tridion.ContentManager.Workflow.ActivityDefinition.ProcessDefinition"/>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityDefinition"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityDefinition"/> class for an existing ActivityDefinition.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the ActivityDefinition.
            </param>
            <param name="session">
            The Session in which the ActivityDefinition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.#ctor(Tridion.ContentManager.Data.Workflow.ActivityDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityDefinition"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityDefinition"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityDefinition"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Activity Definition.
            </param>
            <param name="session">
            The Session in which the Activity Definition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Saving of Activity Definitions is not allowed; the containing Process Definition should be saved instead.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityDefinition.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
                In this method the IsEditable property of the <see cref="P:Tridion.ContentManager.Workflow.ActivityDefinition.LoadedState"/> is set to <c>false</c>, which is always the case.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityDefinition.Description">
            <summary>
            Gets or sets the description of the Activity Definition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityDefinition.Assignee">
            <summary>
            Gets or sets the User or Group to which the Workflow activity will be assigned.
            </summary>
            <remarks>
            <para>
            Depending on the character of activity this property has some limitations:
            </para>
            <list type="bullet">
            <item>First activity in the process should always be assigned to everyone. This can be done by not setting this property.</item>
            <item>Automatic activities (activities with <see cref="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.Script"/> property set) should be assigned to the workflow agent user (Id of this user can be found in Content Manager configuration under the 'Automatic Trustee ID' setting in the Workflow settings node).</item>
            </list>
            <para>
            If this property is not set or set to null, the value depends on the activity definition position in the workflow chain. 
            If this activity is the first activity, it will be assigned to everyone. If it is not the first, the behaviour depends on the kind of activity:
            </para>
            <list type="bullet">
            <item>For normal activity the everyone group will be assigned.</item>
            <item>For decision activity a performer of the previous activity will be assigned.</item>
            <item>For automatic activity (activity with <see cref="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.Script"/> property set) the workflow agent user will be assigned.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityDefinition.ProcessDefinition">
            <summary>
            Gets the Workflow Process Definition that contains this activity.
            </summary>
            <value>Will be <c>null</c> if the Activity Definition is read in the context of a Process Definition. If read stand-alone it will be set.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityDefinition.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityFinish">
            <summary>
            An item used to specify the activity finish operation.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityFinish.#ctor(Tridion.ContentManager.Data.Workflow.ActivityFinishData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityFinish"/> class, pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityFinish.#ctor(System.String,Tridion.ContentManager.Security.Trustee,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityFinish"/> class, loaded with its properties.
            </summary>
            <param name="message">The finish message.</param>
            <param name="nextAssignee">The next Assignee.</param> 
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityFinish.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>A Data Object reflecting the current state.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityFinish.Session">
            <summary>
            Gets the Session in which the object was created.
            </summary>
            <value>The session.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityFinish.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityFinish.NextAssignee">
            <summary>
            Gets or sets the next assignee.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityHistory">
            <summary>
            Represents an Activity History: an Activity which is part of a Process History.
            </summary>
            <seealso cref="T:Tridion.ContentManager.Workflow.ProcessHistory"/>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityHistory"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityHistory"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.#ctor(Tridion.ContentManager.Data.Workflow.ActivityHistoryData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityHistory"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityHistory"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.GetTypeId">
            <summary>
            Gets the type identifier for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.GetTypeResource">
            <summary>
            Gets the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.ActivityHistory.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.ActivityHistory.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>When implementing this method in a derived class, call the base method first to clear the collection.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityHistory.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
                In this method the IsEditable property of the <see cref="P:Tridion.ContentManager.Workflow.ActivityHistory.LoadedState"/> is set to <c>false</c>, which is always the case.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityHistory.ActivityType">
            <summary>
            Gets the type of the Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityHistory.ApprovalStatus">
            <summary>
            Gets the Approval Status of the Activity History.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityHistory.Description">
            <summary>
            Gets the Description of the Activity History.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityHistory.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityHistory.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ActivityInstance">
            <summary>
            Represents an Activity Instance: a current Activity which is part of a Process Instance.
            </summary>
            <seealso cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.#ctor(Tridion.ContentManager.Data.Workflow.ActivityInstanceData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> class preloaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (preloaded) current state.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.Start">
            <summary>
            Starts this Activity Instance.
            </summary>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If the user does not have read permissions on every subject related to this Activity Instance.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is not equal to Assigned. Only an Activity Instance that is
            currently <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> may be started.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.Suspend">
            <summary>
            Suspends an automated Activity Instance.
            </summary>
            <remarks>
            <para>This method is called by the Workflow Agent as soon as an error occurs in an automated Activity. A user may retry the execution
            of the workflow activity using the <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Restart"/> method.</para>
            <para>The current User must be the Owner or have Workflow Management Rights.</para>
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If the user does not have read permissions on every subject related to this Activity Instance.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is not equal to Started. Only an Activity Instance that is
            currently <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/> may be suspended.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If the current user is not this Activity Instance's Owner or the current user does not have Workflow Management Rights.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.Restart">
            <summary>
            Restarts a suspended automated Activity Instance.
            </summary>
            <remarks>
                <para>
                    Activity State must be <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/>.
                    If the Activity Instance is successfully restarted, it enters the <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> state.
                    The Workflow Agent will pick it up again and set the Activity Instance state to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/>.
                </para>
                <para>
                    The Workflow Agent sets the Activity Instance State to <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/> as soon as an error occurs in an automated Activity using the 
                    <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Suspend"/> method. A user may retry the execution of the workflow activity using the Restart method after the fixing the error.
                </para>
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If the user does not have read permissions on every subject related to this Activity Instance
            or if the user does not have Workflow Management rights on the context repository.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is not equal to Suspended. Only an Activity Instance that is
            currently <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/> may be restarted.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's Owner is not the Workflow Agent.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.Finish(Tridion.ContentManager.Workflow.ActivityFinish)">
            <summary>
            Finishes this Activity Instance.
            </summary>
            <param name="finishData">An item that represents data that is needed to finish this activity.
            If this is a Decision Activity Instance, this parameter should be of type <see cref="T:Tridion.ContentManager.Workflow.DecisionActivityFinish"/>.
            </param>
            <returns>The next Activity Instance that is created by finishing this instance, or <c>null</c> when there is no next Activity Instance.</returns>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If the user does not have read permissions on every subject related to this Activity Instance.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If <paramref name="finishData"/> is a Decision Activity Finish and the <see cref="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.NextActivity"/> is an Automatic Activity then it is not possible to set <see cref="P:Tridion.ContentManager.Workflow.ActivityFinish.NextAssignee"/>. It should be <c>null</c>.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is already Finished.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is Started and the current user is not the owner or does not have <see cref="F:Tridion.ContentManager.Security.Rights.WorkflowManagement"/> rights on the Context Repository.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is Assigned or Suspended and the current user does not have <see cref="F:Tridion.ContentManager.Security.Rights.WorkflowManagement"/> rights on the Context Repository.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance is a Decision activity and the <see cref="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.NextActivity"/> is not provided in the <paramref name="finishData"/>.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance is a Decision activity and the <see cref="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.NextActivity"/> is provided in the <paramref name="finishData"/>, but the specified activity is invalid as the next activity for the current Decision Activity.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.ReAssign(Tridion.ContentManager.Security.Trustee)">
            <summary>
            Assigns this Activity Instance to a new Trustee.
            </summary>
            <remarks>
                <para>
                    The Activity Instance must be in <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> or
                    <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/> state for this operation to succeed.
                    Additionally, if the Activity State is Started, the provided Assignee can only be a User.
                </para>
                <para>
                    The User performing the operation must have Read Permissions on every subject related to this Activity Instance
                    and Workflow Management Rights on the context repository.
                </para>
                <para>
                    If the Activity State is Started, only the Performers collection is updated in order to hold the new user.
                    If The Activity State is Assigned, only the Assignee property is updated in order to hold the new trustee.
                </para>
            </remarks>
            <param name="newAssignee">The User or Group that will become the new assignee of this Activity Instance</param>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If the user does not have read permissions on every subject related to this Activity Instance
            or if the user does not have Workflow Management rights on the context repository.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If it is an Automatic Activity it is not possible to ReAssign it.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is not equal to Started or Assigned.</exception>
            <exception cref="T:Tridion.ContentManager.InvalidActionException">If this Activity Instance's state is Started but the supplied assignee is not a User.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnStarting(Tridion.ContentManager.Extensibility.Events.StartActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Start"/> before going to the DAL.
            </summary>
            <remarks>
            This method implements the business rules that are checked for starting an Activity
            and derived classes should adhere to that convention. The business rules implemented here are:
            <para>Read Permissions are required on all subjects</para>
            <para>Activity State must be <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/></para>
            </remarks>
            <param name="eventArgs">The event data based on the method parameters</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnStarted(Tridion.ContentManager.Extensibility.Events.StartActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Start"/> after going to the DAL.
            </summary>
            <param name="eventArgs">The event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnSuspending(Tridion.ContentManager.Extensibility.Events.SuspendActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Suspend"/> before going to the DAL.
            </summary>
            <remarks>
            This method implements the business rules that are checked for Suspending an Activity
            and derived classes should adhere to that convention. The business rules implemented here are:
            <para>Read Permissions are required on all subjects</para>
            <para>The current User must be the Owner or have Workflow Management Rights.</para>
            <para>Activity State must be <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/></para>
            </remarks>
            <param name="eventArgs">The event data based on the method parameters</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnSuspended(Tridion.ContentManager.Extensibility.Events.SuspendActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Suspend"/> after going to the DAL.
            </summary>
            <param name="eventArgs">The event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnRestarting(Tridion.ContentManager.Extensibility.Events.RestartActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Restart"/> before going to the DAL.
            </summary>
            <remarks>
            This method implements the business rules that are checked for Restarting an Activity
            and derived classes should adhere to that convention. The business rules implemented here are:
            <para>Read Permissions are required on all subjects</para>
            <para>Workflow Management Rights are required on the context repository</para>
            <para>The Owner must be the configured Workflow Agent account (Can only be used for automatic Activity Instances).</para>
            <para>Activity State must be <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Suspended"/></para>
            </remarks>
            <param name="eventArgs">The event data based on the method parameters</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnRestarted(Tridion.ContentManager.Extensibility.Events.RestartActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Restart"/> after going to the DAL.
            </summary>
            <remarks>
            This method also sends the Work Items of this Activity Instance to the queue of the Workflow Agent.
            </remarks>
            <param name="eventArgs">The event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnFinishing(Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Finish(Tridion.ContentManager.Workflow.ActivityFinish)"/> before going to the DAL.
            </summary>
            <remarks>
            This method implements the business rules that are checked for Finishing an Activity
            and derived classes should adhere to that convention. The business rules implemented here are:
            <para>Cannot set <see cref="P:Tridion.ContentManager.Workflow.ActivityFinish.NextAssignee"/> if the <see cref="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.NextActivity"/> is an Automatic Activity. It should be <c>null</c>.</para>
            <para>Read Permissions are required on all subjects</para>
            <para>Workflow Management Rights are required on the context repository when Activity State is Assigned or Suspended.</para>
            <para>User must be Owner or have Workflow Management Rights on the context repository when Activity State is Started.</para>
            <para>Activity State must not be Finished.</para>
            This method is also rendering and persisting snapshots for every Work Item if the Process Instance is set to contain snapshots. 
            </remarks>
            <param name="eventArgs">The event data based on the method parameters</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnFinished(Tridion.ContentManager.Extensibility.Events.FinishActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.Finish(Tridion.ContentManager.Workflow.ActivityFinish)"/> after going to the DAL.
            </summary>
            <param name="eventArgs">The event data based on the method parameters.</param>
            <returns>The next Activity Instance that is created by finishing this instance, or <c>null</c> when there is no next Activity Instance.</returns>
            <remarks>
            This method checks some additional business rules:
            <para>A Decision Activity must have the next Activity provided in the <see cref="T:Tridion.ContentManager.Workflow.DecisionActivityFinish"/> object.</para>
            <para>The next Activity provided in the <see cref="T:Tridion.ContentManager.Workflow.DecisionActivityFinish"/> object, must be a valid next activity for the current Decision Activity</para>
            This method also sends the Work Items of the next Activity to the queue of the Workflow Agent when the next Activity is assigned to the Workflow Agent.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnReAssigning(Tridion.ContentManager.Extensibility.Events.ReAssignActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.ReAssign(Tridion.ContentManager.Security.Trustee)"/> before going to the DAL.
            </summary>
            <remarks>
            This method implements the business rules that are checked for starting an Activity and derived classes should adhere to that convention.
            The business rules implemented here are:
            <para>Cannot Reassign an Automatic Activity.</para>
            <para>Read Permissions are required on all subjects</para>
            <para>Workflow Management Rights are required on the context repository</para>
            <para>Activity State must be <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Assigned"/> or
            <see cref="F:Tridion.ContentManager.Workflow.ActivityState.Started"/></para>
            <para>If the Activity State is Started, the new Assignee can only be a User.</para>
            </remarks>
            <param name="eventArgs">The event data based on the method parameters</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnReAssigned(Tridion.ContentManager.Extensibility.Events.ReAssignActivityEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ActivityInstance.ReAssign(Tridion.ContentManager.Security.Trustee)"/> after going to the DAL.
            </summary>
            <param name="eventArgs">The event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.GetTypeId">
            <summary>
            Gets the type identifier for this type.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.GetTypeResource">
            <summary>
            Gets the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.ActivityInstance.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.ActivityInstance.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>When implementing this method in a derived class, call the base method first to clear the collection.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
                In this method the IsEditable property of the <see cref="P:Tridion.ContentManager.Workflow.ActivityInstance.LoadedState"/> is set to <c>false</c>, which is always the case.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.GetSnapShotTemplate(Tridion.ContentManager.ContentManagement.VersionedItem)">
            <summary>
            Gets the Template that will be used to render the item with for this snapshot.
            </summary>
            <param name="item">The Page or Component that we need to get the right template for.</param>
            <returns>The Page Template or Component Template to render the item with.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.Create">
            <summary>
            Saves the instance of the <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/>
            </summary>
            <returns>
                A <see cref="T:Tridion.ContentManager.TcmUri"/> representing the Id of the newly saved instance of <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/>
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.SendWorkItemsToWorkflowAgent">
            <summary>
            Sends the Work Items of this Activity Instance to the queue of the Workflow Agent.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.CreateNextActivityInstance(Tridion.ContentManager.Data.Workflow.ActivityDefinitionData,Tridion.ContentManager.TcmUri@,System.String)">
            <summary>
            Creates (and saves) the next activity instance object.
            </summary>
            <param name="nextActivityDefinitionData">The activity definition data object that describes the next activity instance.</param>
            <param name="nextAssigneeId">The <see cref="T:Tridion.ContentManager.TcmUri"/> of the Trustee that represents the assignee for the next Activity Instance.</param>
            <param name="nextAssigneeTitle">The name of the Trustee that represents the assignee for the next Activity Instance.</param>
            <returns>The created next Activity Instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.DetermineAssigneeForNextActivityInstance(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Data.Workflow.ActivityDefinitionData,Tridion.ContentManager.Data.IDataSession)">
            <summary>
            Determines the assignee that is needed for creating the next Activity Instance after Finishing the current Activity Instance.
            </summary>
            <param name="dynamicAssigneeUri">The URI of the dynamic Assignee, applicable only for a decision activity. Allowed to be <c>null</c> when the current activity is not a decision activity.</param>
            <param name="nextActivityDefinitionData">The activity definition data object that describes the next activity instance.</param>
            <param name="dataSession">The data session.</param>
            <returns>A Trustee Data object that represents the assignee for the next Activity Instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.RenderItemIntoSnapshot(Tridion.ContentManager.ContentManagement.VersionedItem,Tridion.ContentManager.CommunicationManagement.Template)">
            <summary>
            Renders the Page or Component and breaks it down into Legacy R5 XML format using the Render Engine Facade.
            </summary>
            <param name="item">The Page or Component that will be rendered and converted into Legacy R5 XML format.</param>
            <param name="template">The Page Template or Component Template to render the item with.</param>
            <returns>A string representation of the Legacy R5 XML format that is created from the Rendered Item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.SaveBinariesAndGetBinaryIds(System.String,System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.IDictionary{System.String,System.String}})">
            <summary>
            Saves the binaries from the Rendered Item including Child Rendered Item Binaries (when it's not a component binary) and stores the binary Id, TempFilename and DeployedFilename in the dictionary.
            </summary>
            <param name="snapshot">The snapshot that represents the Rendered Item that contains binary content.</param>
            <param name="dictionary">A dictionary that contains the binary Id as a key and a Dictionary as a value. That (embedded) Dictionary has "TempFilename" or "DeployedFilename" as a key and the corresponding values set from the Rendered Item.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ActivityInstance.CreateFinishData(System.String,Tridion.ContentManager.TcmUri,Tridion.ContentManager.TcmUri)">
            <summary>
            Creates the Finish Data object that is appropriate for the Activity Definition of this Activity Instance.
            </summary>
            <param name="finishMessage">The Finish Message</param>
            <param name="nextActivityDefinitionUri">For Decision Activities, the URI of the Activity Definition to use for the next Activity Instance</param>
            <param name="dynamicAssigneeUri">For Decision Activities, the URI of the Assignee for the next Activity Instance</param>
            <returns>A Finish Data object that matches the parameters and the Activity Definition of this Activity Instance</returns>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityInstance.ActivityState">
            <summary>
            Gets the state of the Activity Instance.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityInstance.ActivityDefinition">
            <summary>
            Gets the Activity Definition on which the Activity Instance is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityInstance.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ActivityInstance.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ApprovalStatus">
            <summary>
            Represents an Approval Status
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.Workflow.ApprovalStatus.Unapproved">
            <summary>
            Defines the TCM Uri for the built-in Unapproved Approval Status.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> class, used internally by Type Registry.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> class for a new Approval Status.
            </summary>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> class for an existing Approval Status.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the Approval Status.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the object.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.GetTypeId">
            <summary>
            Gets the Item Type that corresponds to the Approval Status type, which is <see cref="F:Tridion.ContentManager.ItemType.ApprovalStatus"/>.
            </summary>
            <returns>
            The value <see cref="F:Tridion.ContentManager.ItemType.ApprovalStatus"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.GetDataObjectType">
            <summary>
            Gets the type of the Data Object associated with the Approval Status type, which is <see cref="T:Tridion.ContentManager.Data.Workflow.ApprovalStatusData"/>.
            </summary>
            <returns>The type <see cref="T:Tridion.ContentManager.Data.Workflow.ApprovalStatusData"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.GetTypeResource">
            <summary>
            Gets the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.SetDefaultData">
            <summary>
            Sets the loaded state to reflect default data for a newly created object.
            The default state of the Approval Status sets <see cref="P:Tridion.ContentManager.Workflow.ApprovalStatus.Position"/> to zero and <see cref="P:Tridion.ContentManager.Workflow.ApprovalStatus.IsDeleted"/> to <c>false</c>.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.ApprovalStatus.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.ApprovalStatus.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            Checks the <see cref="P:Tridion.ContentManager.Workflow.ApprovalStatus.IsDeleted"/> property. If it is <c>true</c>, it will set the <see cref="P:Tridion.ContentManager.IdentifiableObject.IsEditable"/> property to <c>false</c>.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.AddUniqueProperties(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{Tridion.ContentManager.Data.UniquenessFlag,System.String}},Tridion.ContentManager.Data.SystemWideObjectData)">
            <summary>
            Adds properties plus its values that are going to be used for finding uniqueness conflicts.
            </summary>
            <param name="checkForUniqueness">Items in this dictionary are checked for uniqueness.</param>
            <param name="dataObject">Properties are retrieved from this <see cref="T:Tridion.ContentManager.Data.SystemWideObjectData"/>.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> before it is actually saved. User must have System
            Administrator Privilege or Workflow Management Rights in any publication. 
            </remarks>
            <exception cref="T:Tridion.ContentManager.InvalidPropertyValueException">The <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> property is not set or an empty string. This
            exception is also thrown if the length of the <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/> is exceeding 255 characters or it contains a
            backslash (\).</exception>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If user is not a System Administrator and doesn't have Workflow Management Rights in any publication. 
            </exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            The following business rules are checked:
            <list type="ol">
                <item>check that the item does not have using items</item>
                <item>check that the item does not have local copies</item>
                <item>check that the user has System Administrator Privilege or Workflow Management Rights in at least one publication</item>
            </list>
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">If user is not a System Administrator or has Workflow Management Rights in any publication. </exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.AssertValidPermissions">
            <summary>
            Asserts the valid permissions. Checks whether the current user is System Administrator or has Workflow Management rights in any publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.Position">
            <summary>
            Gets or sets the position of this Approval Status in the list of Approval Statuses.
            </summary>
            <remarks>
            The list of Approval Statuses is ordered, because Publication Targets can have a
            <see cref="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.MinApprovalStatus"/>:
            Approval Statuses with a Position lower than this minimal approval status won't be publishable.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.IsDeleted">
            <summary>
            Gets a value indicating whether the Approval Status is deleted.
            </summary>
            <remarks>
            If an Approval Status is deleted, it is not physically removed, but only flagged as deleted
            (and therefore suppressed from the list of Approval Statuses).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.IsWhereUsedImplemented">
            <summary>
            Gets a value indicating whether this type implements where used functionality.
            </summary>
            <value><c>false</c> for Approval Status.</value>
            <remarks>
                <para>It is used when throwing <see cref="T:Tridion.ContentManager.ItemIsInUseException"/>. When where used is not implemented we want to set ItemIsInUseNoWhereUsed error code to prevent GUI showing Where Used button.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.Configuration.WorkflowConfiguration">
            <summary>
            Represents the workflow section within the configuration file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Configuration.WorkflowConfiguration.StartWorkflowOnRollback">
            <summary>
            Get or set the flag indicating whether to start a Workflow on a rollback.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Configuration.WorkflowConfiguration.WorkflowAgentAccountUri">
            <summary>
            Gets or sets the URI of the user to whom automated activites are assigned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Configuration.WorkflowConfiguration.SectionName">
            <summary>
            Use this section name to get the rendering configuration from the <see cref="T:System.Configuration.ConfigurationManager"/>
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.DecisionActivityFinish">
            <summary>
            An item used to specify the activity finish operation.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.DecisionActivityFinish.#ctor(Tridion.ContentManager.Data.Workflow.DecisionActivityFinishData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.DecisionActivityFinish"/> class, pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.DecisionActivityFinish.#ctor(Tridion.ContentManager.Workflow.ActivityDefinition,Tridion.ContentManager.Security.Trustee,System.String,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.DecisionActivityFinish"/> class, loaded with its properties.
            </summary>
            <param name="nextActivity">
            The next Activity.
            </param>
            <param name="nextAssignee">
            The next Assignee.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.DecisionActivityFinish.NextActivity">
            <summary>
            Gets or sets the next activity.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.Process">
            <summary>
            Abstract base class for Process Instances and Process Histories. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Process"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Process"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Process"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the item.
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.#ctor(Tridion.ContentManager.Data.Workflow.ProcessData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Process"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.Process"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Process.
            </param>
            <param name="session">
            The Session in which the Process should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.Unload">
            <summary>
            Unloads the current and loaded state
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>Default implementation only converts WebDAV URLs is requested. Subclasses can override if more post processing is needed.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.Process.AddSubject(Tridion.ContentManager.Workflow.IWorkflowItem)">
            <summary>
            Adds a subject to the subject collection.
            </summary>
            <param name="item">The subject to be added to the subject collection.</param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Process.Activities">
            <summary>
            Gets the Activities that occurred within the Process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Process.HasSnapshots">
            <summary>
            Gets a value indicating whether the Process has snapshots.
            </summary>
            <remarks>
            This property reflects the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.StoreSnapshot"/> property of the Process Definition.
            However, if the Process Definition's property is changed, existing Processes will keep their setting.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Process.Subjects">
            <summary>
            Gets the items which participate in the Process.
            </summary>
            <remarks>
            This is the union of all <see cref="P:Tridion.ContentManager.Workflow.WorkItem.Subject">Subjects of all Work Items</see> of all <see cref="P:Tridion.ContentManager.Workflow.Process.Activities"/> in the Process.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Process.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.Process.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessDefinition">
            <summary>
            Abstract base class for Process Definitions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> class for an existing object. 
            </summary>
            <param name="id">The TCM URI of the Process Definition.</param>
            <param name="session">The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.#ctor(Tridion.ContentManager.Data.Workflow.ProcessDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> class from the specified <paramref name="data"/> object that contains the state.
            </summary>
            <param name="data">A <see cref="T:Tridion.ContentManager.Data.Workflow.ProcessDefinitionData"/> object to use as (pre-loaded) current state.</param>
            <param name="session">
            The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> class for a new object. 
            </summary>
            <param name="session">The Session in which the Process Definition should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> in which the Process Definition should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Process Definition.
            </param>
            <param name="session">
            The Session in which the Process Definition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetNewInstance">
            <summary>
            Gets a new <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/>.
            </summary>
            <returns>
                A newly created <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> using the current <see cref="T:Tridion.ContentManager.Workflow.ProcessDefinition"/>
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnLocalizing(Tridion.ContentManager.Extensibility.Events.LocalizeEventArgs)">
            <summary>
            Validates that this item can be localized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.Localize().
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnUnLocalizing(Tridion.ContentManager.Extensibility.Events.UnLocalizeEventArgs)">
            <summary>
            Validates that this item can be unlocalized; throws a <see cref="T:Tridion.ContentManager.InvalidActionException"/> if not.
            Called by RepositoryLocalObject.UnLocalize().
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetContainerType">
            <summary>
            Gets the type of the container that can hold Process Definitions.
            </summary>
            <returns>
            Repository.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetTypeResource">
            <summary>
            Gets the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetManagementRights">
            <summary>
            Gets the type of security management rights associated with the item type.
            </summary>
            <returns>A <see cref="T:Tridion.ContentManager.Security.Rights"/> value associated with the item type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetSecurityPermissions(Tridion.ContentManager.Security.Permissions)">
            <summary>
            Gets the <see cref="T:Tridion.ContentManager.Security.Permissions"/> that is applicable for this <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/>.This method validate <see cref="T:Tridion.ContentManager.Security.Permissions"/> represented by <paramref name="demandingPermissions"/> and returns appliable <see cref="T:Tridion.ContentManager.Security.Permissions"/>.
            </summary>
            <param name="demandingPermissions"><see cref="T:Tridion.ContentManager.Security.Permissions"/> that are depended by a particular operation, for example, Localize, Unlocalize and so on .</param>
            <returns>
                <para><see cref="T:Tridion.ContentManager.Security.Permissions"/> that must be available to perform a particular operation.</para>
                <para>Process Definition has not container, so demanded permissions are None.</para>
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.SetAllowedActions">
            <summary>
            Determines allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.SetDefaultData">
            <summary>
            Sets the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnCopying(Tridion.ContentManager.Extensibility.Events.CopyEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Copy(Tridion.ContentManager.ContentManagement.OrganizationalItem,System.Boolean)"/>, before going to the BL. Copying of Categories is not yet supported.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnMoving(Tridion.ContentManager.Extensibility.Events.MoveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Move(Tridion.ContentManager.ContentManagement.OrganizationalItem)"/>, before going to the BL. Moving of Categories is not supported.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnClassifying(Tridion.ContentManager.Extensibility.Events.ClassifyEventArgs)">
            <summary>
            Validates that this item can be classified. Called by RepositoryLocalObject.Classify().
            Classification is not supported for ProcessDefinition.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnUnClassifying(Tridion.ContentManager.Extensibility.Events.UnClassifyEventArgs)">
            <summary>
            Validates that this item can be unclassified. Called by RepositoryLocalObject.UnClassify().
            Classification is not supported for ProcessDefinition.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnReClassifying(Tridion.ContentManager.Extensibility.Events.ReClassifyEventArgs)">
            <summary>
            Validates that this item can be reclassified. Called by RepositoryLocalObject.ReClassify().
            Classification is not supported for ProcessDefinition.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            User requires Workflow Management Rights.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.GetConflicts(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets a collection of objects that conflict with the specified <paramref name="values"/>.
            </summary>
            <param name="values">A collection of property/value pairs to check for uniqueness.</param>
            <returns>
            An enumerable of <see cref="T:Tridion.ContentManager.Data.UniquenessConflictData"/> objects
            that conflict with the specified <paramref name="values"/>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessDefinition.UpdateInternal(Tridion.ContentManager.Data.IdentifiableObjectData)">
            <summary>
            Updates the state of the object based on a given <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData">Data Object</see>.
            </summary>
            <param name="deltaData">An <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData">Data Object</see> which contains the properties to be modified.</param>
            <remarks>
            The type of the <paramref name="deltaData"/> parameter should be a subtype of <see cref="T:Tridion.ContentManager.Data.IdentifiableObjectData"/>
            that matches the type of the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState"/> property.
            All "dirty" properties of this Data Object will be merged into the <see cref="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.ActivityDefinitions">
            <summary>
            Gets the Activity Definitions.
            </summary>
            <remarks>
            There are some points to consider regarding the first Activity Definition specified in this collection:
            <ol>
                <li> 
                    The first Activity Definition specified in this collection is the one that will be the used
                    to create the first Activity Instance of the workflow.
                </li>
                <li>
                    The <see cref="P:Tridion.ContentManager.Workflow.ActivityDefinition.Assignee"/> of the first Activity Definition
                    can only be set to the predefined "Everyone" group. The same can be achieved by simply
                    not setting the <see cref="P:Tridion.ContentManager.Workflow.ActivityDefinition.Assignee"/> property at all.
                </li>
            </ol>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.StoreSnapshot">
            <summary>
            Gets or sets a value indicating whether Process Instances based on this Process Definition store snapshots.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Process Definition cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.Metadata">
            <summary>
            Gets or sets the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Process Definition cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.IsSaveImplementedInR6">
            <summary>
            Gets a value indicating whether saving of this type objects is implemented in R6.
            </summary>
            <value><c>true</c>, if save is implemented in R6; otherwise, <c>false</c>. Default value is <c>true</c>.</value>
            <remarks>
            Types that doesn't implement save in R6 must override this property and set it to <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.IsWhereUsedImplemented">
            <summary>
            Gets a value indicating whether this type implements where used functionality.
            </summary>
            <value><c>false</c> for Process Definition.</value>
            <remarks>
            	<para>It is used when throwing <see cref="T:Tridion.ContentManager.ItemIsInUseException"/>. When where used is not implemented we want to set ItemIsInUseNoWhereUsed error code to prevent GUI showing Where Used button.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessDefinition.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessHistory">
            <summary>
            Represents a Process that was active in the past but it is no longer active.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessHistory"/> class for an existing object.
            </summary>
            <param name="id">The identifier (TCM URI) of the item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.#ctor(Tridion.ContentManager.Data.Workflow.ProcessHistoryData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessHistory"/> class pre-loaded with a given Data Object
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessHistory"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Process History.</param>
            <param name="session">The Session in which the Process History should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessHistory"/> class. 
            </summary>
            <remarks>
            This constructor is only used internally by the Type Registry.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.GetTypeId">
            <summary>
            Gets the type identifier for this type.
            </summary>
            <returns>The type identifier, which is <see cref="F:Tridion.ContentManager.ItemType.ProcessHistory"/>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Throws a <see cref="T:Tridion.TridionNotSupportedException"/> because a Process History is a read only object.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>Default implementation only converts WebDAV URLs is requested. Subclasses can override if more post processing is needed.</remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>When implementing this method in a derived class, call the base method first to clear the collection.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessHistory.HasUsingItems(Tridion.ContentManager.UsingItemsFilter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">Can be used to filter the items based on conditions.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> for a description of supported condition.</param>
            <returns>
            <c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.
            </returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            if you are only interested in finding out if there are using items
            and not which items are using this item.
            Always returns false. As there are no dependencies to Process History 
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.UsingItemsFilter)"/>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessHistory.Activities">
            <summary>
            Gets the Activities that occurred within the Process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessHistory.FinishDate">
            <summary>
            Gets a value indicating the date and time when this Process History had finished.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessHistory.FinishReason">
            <summary>
            Returns the Finish Reason of this ProcessHistory.
            </summary>
            <remarks>
            The Finish Reason allows you to distinguish between processes which           
            were finished in the normal way and those where a finish
            was forced by a workflow administrator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessHistory.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessHistory.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ProcessInstance">
            <summary>
            Representing a Process Instance: a current Process.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class for an existing object. 
            </summary>
            <param name="id">A <see cref="T:Tridion.ContentManager.TcmUri"/> of a <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/>.</param>
            <param name="session">The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor(Tridion.ContentManager.Data.Workflow.ProcessInstanceData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class from
            the specified Data Object that contains the state.
            </summary>
            <param name="data">A <see cref="T:Tridion.ContentManager.Data.Workflow.ProcessInstanceData"/> object to use as (pre-loaded) current state.</param>
            <param name="session">The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor(Tridion.ContentManager.Workflow.ProcessDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class from the specified <paramref name="processDefinition"/>.
            </summary>
            <param name="processDefinition">The Process Definition on which the Process Instance should be based.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Process Instance.</param>
            <param name="session">The Session in which the Process Instance should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.ForceFinish(Tridion.ContentManager.Workflow.ApprovalStatus)">
            <summary>
            Forces finish of a Process Instance and returns the corresponding Process History Uri.
            </summary>
            <param name="approvalStatus">The Approval Status which will be set to all subjects of the related Work Items.</param>
            <returns>
            The Uri of the corresponding Process History.
            </returns>
            <remarks>
            <para>
            Trying to Read or Load the Process Instance after Finish completes successfully will throw an
            <see cref="T:Tridion.ContentManager.ItemDoesNotExistException"/>, due to the reason that the Process Instance does not
            exist anymore it has been archived to Process History.
            </para>
            <para>All the Subjects of the related Work Items will be checked-in after a force finish.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.Delete">
            <summary>
            Permanently deletes the Process Instance and terminates the process.
            </summary>
            <remarks>
            <para>
            Trying to Read or Load the Process Instance after Delete completes successfully will throw an
            <see cref="T:Tridion.ContentManager.ItemDoesNotExistException"/>, due to the reason that the Process Instance does not
            exist anymore it has been archived to Process History.
            </para>
            <para>All subjects will be undone check-out after Delete operation is completed successfully.</para>
            <para>
            Two events <see cref="T:Tridion.ContentManager.Extensibility.Events.DeleteEventArgs"/> and <see cref="T:Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs"/> with <see cref="F:Tridion.ContentManager.Workflow.ProcessFinishReason.Terminated"/> reason 
            will be raised when deleting Process Instance.
            </para>
            </remarks>
            <exception cref="T:Tridion.ContentManager.PermissionDeniedException">The user does not have Delete permissions or appropriate rights.</exception>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.OnFinishing(Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ProcessInstance.Finish(Tridion.ContentManager.Workflow.ProcessFinishReason,Tridion.ContentManager.Workflow.ApprovalStatus)"/>, before going to the DAL.
            </summary>
            <remarks>
            This method is checking the business rules for an <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/> before it is actually finished.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.OnFinished(Tridion.ContentManager.Extensibility.Events.FinishProcessEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.Workflow.ProcessInstance.Finish(Tridion.ContentManager.Workflow.ProcessFinishReason,Tridion.ContentManager.Workflow.ApprovalStatus)"/>, after going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.ProcessInstance.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.ProcessInstance.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            <para>
                Validates that the <see cref="P:Tridion.ContentManager.Workflow.Process.Subjects"/> collection contain only one <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>.
                That <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/> is then checked out and its Approval Status is set to Unapproved.
                Finally it sets the Lock Owner on the Item.
            </para>
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, after going to the DAL.
            </summary>
            <remarks>
            Inside this method, first the saved Process Instance is fully Loaded and then the first Activity Instance of this Process Instance is created 
            from the Activity Definition. After that, the Process Instance is updated with the reference of the first Activity Instance.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
                In this method the IsEditable property of the <see cref="P:Tridion.ContentManager.Workflow.ProcessInstance.LoadedState"/> is set to <c>false</c>, which is always the case.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.GetTypeId">
            <summary>
            Returns the type ID for this type.
            </summary>
            <returns>The type id for this type.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.Finish(Tridion.ContentManager.Workflow.ProcessFinishReason,Tridion.ContentManager.Workflow.ApprovalStatus)">
            <summary>
            Archives a Process Instance and returns the corresponding Process History Uri.
            </summary>
            <param name="reason">The reason for finishing the process instance.</param>
            <param name="approvalStatus">The approval status of the most recent Activity Instance.</param>
            <returns>
            The Uri of the corresponding Process History.
            </returns>
            <remarks>
            Trying to Read or Load the Process Instance after Finish completes successfully will throw an
            <see cref="T:Tridion.ContentManager.ItemDoesNotExistException"/>, due to the reason that the Process Instance does not
            exist anymore it has been archived to Process History.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.CreateFirstActivityInstance(Tridion.ContentManager.TcmUri)">
            <summary>
            Creates (and saves) the first Activity Instance object.
            </summary>
            <param name="nextAssigneeId">A TCM URI specifying the assignee for the Activity Instance. If <c>null</c>, the current user will be used instead.</param>
            <returns>The created Activity Instance.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ProcessInstance.Update">
            <summary>
            Updates the process instance with current Activity Instance reference.
            </summary>
            <remarks>
            This method is used to save the Process Instance Data with the Current Activity Instance's Link. Because, The current Activity Instance
            created in <see cref="M:Tridion.ContentManager.Workflow.ProcessInstance.OnSaved(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/> of the Process Instance since Activity Instance also needs the reference of the Process Instance.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessInstance.Activities">
            <summary>
            Gets the List of <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> related to the current <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/>
            </summary>
            <value>
                a list of <see cref="T:Tridion.ContentManager.Workflow.ActivityInstance"/> that refers to <see cref="T:Tridion.ContentManager.Workflow.ProcessInstance"/>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessInstance.ProcessDefinition">
            <summary>
            Gets the Process Definition on which the Process Instance is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessInstance.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessInstance.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ProcessInstance.IsInternalSave">
            <summary>
            Sets a value indicating whether saving executed internally.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.TridionActivityDefinition">
            <summary>
            Represents a Tridion proprietary Activity Definition.
            </summary>
            <seealso cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionActivityDefinition"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.#ctor(Tridion.ContentManager.Data.Workflow.TridionActivityDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionActivityDefinition"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">
            The Data Object to use as (pre-loaded) current state
            </param>
            <param name="session">
            The Session in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionActivityDefinition"/> class for an existing object.
            </summary>
            <param name="id">
            The identifier (TCM URI) of the TridionActivityDefinition.
            </param>
            <param name="session">
            The Session in which the TridionActivityDefinition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionActivityDefinition"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionActivityDefinition"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Activity Definition.
            </param>
            <param name="session">
            The Session in which the Activity Definition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
            <returns>
            The Item Type for this instance.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionActivityDefinition.UpdateXsltLocalizedStrings">
            <summary>
            Adds localized strings to the collection of strings that is passed as parameter to the XSLT transformation.
            </summary>
            <remarks>Adds a localized string for the Activity Type title.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.ActivityType">
            <summary>
            Gets or sets a value indicating whether this instance represents a decision or not.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.Script">
            <summary>
            Gets or sets the script of an automated Activity.
            </summary>
            <value>A string that contains VBScript code.</value>
            <remarks>
            <para>
                An Activity Definition can represent an automated activity to which a script is associated.
                This script is then executed by the TCM Workflow Agent once the workflow process reaches the activity.
            </para>
            <para>
                When you create a Process Definition, you can define an automatic Activity Definition simply by setting
                the Script property. You don't need to explicitly specify the <see cref="P:Tridion.ContentManager.Workflow.ActivityDefinition.Assignee"/>, it will be
                automatically set to the TCM Workflow Agent during the creation of the Process Definition.
            </para>
            <para>
                The TCM Workflow Agent user is declared in the TCM configuration in the <c>workflow</c> section as the following example illustrates:
                <pre>
                    &lt;configuration&gt;
                        &lt;workflow workflowAgentAccountUri="tcm:0-3-65552" /&gt;
                    &lt;/configuration&gt;
                </pre>
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.FinishApprovalStatus">
            <summary>
            Gets or sets the Approval Status that is assigned to the Workflow Item when the Activity finishes.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.NextActivityDefinitions">
            <summary>
            Gets the potential next activities in the Workflow.
            </summary>
            <value>
            The value will be set when the Activity Definition is read in the context of a Process Definition.
            If the Activity Definition is read stand-alone, this value will be <c>null</c>.
            This is a connected collection: changes to the collection are reflected in the state of the Activity Definition.
            </value>
            <remarks>Should be empty if this represents the last activity. Should contain exactly one activity, unless this represents a decision.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionActivityDefinition.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.TridionProcessDefinition">
            <summary>
            Represents a Tridion proprietary Process Definition.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/> class used internally for registering the type.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/> class for an existing object. 
            </summary>
            <param name="id">The TCM URI of the Tridion Process Definition.</param>
            <param name="session">The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.#ctor(Tridion.ContentManager.Data.Workflow.TridionProcessDefinitionData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/> class from the specified <paramref name="data"/> object that contains the state.
            </summary>
            <param name="data">
            A <see cref="T:Tridion.ContentManager.Data.Workflow.TridionProcessDefinitionData"/> object to use as (pre-loaded) current state.
            </param>
            <param name="session">
            The <see cref="T:Tridion.ContentManager.Session"/> in which the object should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/> class for a new object. 
            </summary>
            <param name="session">The Session in which the Process Definition should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> in which the Process Definition should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.TridionProcessDefinition"/> class based on an existing XML representation.
            </summary>
            <param name="xmlRepresentation">
            The XML representation to be used as state of the Process Definition.
            </param>
            <param name="session">
            The Session in which the Process Definition should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.ValidateEnumProperties">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/> when saving via the legacy BL.
            </summary>
            <remarks>
            This method validates enumeration properties for an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> before it is saved.
            It is used only when saving through legacy BL. After migrating the saving operations, this validation should be moved to the appropriate <see cref="M:Tridion.ContentManager.IdentifiableObject.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)"/> methods.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.GetTypeId">
            <summary>
            Get the type ID for this type.
            </summary>
            <returns>
            The ItemType for this instance.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.GetBLClassName">
            <summary>
            Gets the legacy BL class name.
            </summary>
            <returns>The legacy BL class name.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.SyncCurrentState">
            <summary>
            Ensure that the <see cref="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.CurrentState"/> property is up-to-date
            </summary>
            <remarks>
            Subclasses may keep derived state next to the <see cref="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.CurrentState"/> property (typically: collections of TOM.NET objects).
            When this method is called, the <see cref="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.CurrentState"/> property has to be updated to reflect the latest state and this additional derived state flushed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.Unload">
            <summary>
            Unloads the current and loaded state.
            </summary>
            <remarks>
            This method should be called after performing a DAL operation that is known to invalidate the loaded state.
            By unloading the state, a re-load is forced if the state is accessed later.
            NOTE: this also discards any unsaved changes.
            If you implement state next to the current and loaded state then you must override this method and clear that additional state (e.g. synchronized collections).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.TridionProcessDefinition.UpdateInternal(System.String)">
            <summary>
            Updates the state of the object from the specified (delta) R5 XML. 
            </summary>
            <param name="deltaXml">An XML <see cref="T:System.String"/> that should be valid according to the R5 XML schema.</param>
            <remarks>This method provides functionality for the BL facade to facility the original UpdateXML functionality.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.ActivityDefinitions">
            <summary>
            Gets the list of Tridion specific Activity Definitions.
            </summary>
            <value>This list is an editable collection.</value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.Diagram">
            <summary>
            Gets or sets the binary representation of the Diagram of the Activity Definition.
            </summary>
            <value>A Microsoft Visio diagram, or an empty Stream.</value>
            <remarks>
            Both in getting and in setting this property, the responsibility for disposing the Stream belongs to the caller.
            This class doesn't hold any permanent reference to any stream.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.TridionProcessDefinition.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.WorkItem">
            <summary>
            Represents a Work Item: the association between <see cref="T:Tridion.ContentManager.Workflow.IWorkflowItem">an item participating in workflow</see> and an <see cref="P:Tridion.ContentManager.Workflow.WorkItem.Activity"/>.
            </summary>
            <seealso cref="P:Tridion.ContentManager.Workflow.WorkItem.Activity"/>
            <seealso cref="T:Tridion.ContentManager.Workflow.IWorkflowItem"/>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.#ctor(Tridion.ContentManager.ContentManagement.Repository)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> class for a new object.
            </summary>
            <param name="contextRepository">The context Repository in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> class for an existing object.
            </summary>
            <param name="id">The identifier (TCM URI) of the item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.#ctor(Tridion.ContentManager.Data.Workflow.WorkItemData,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> class pre-loaded with a given Data Object.
            </summary>
            <param name="data">The Data Object to use as (pre-loaded) current state</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> class based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.Workflow.WorkItem"/> class.
            </summary>
            <remarks>
            This is an internal constructor meant to be used by Type Registry
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.GetDataObjectType">
            <summary>
            Get the type of the Data Object associated with this BL class.
            </summary>
            <returns>The <see cref="T:System.Type"/> of the Data Object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.GetTypeResource">
            <summary>
            Get the name of a string resource containing the localizable type name.
            </summary>
            <returns>The name of a string resource.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.GetTypeId">
            <summary>
            Gets the type identifier for this type, which is <see cref="F:Tridion.ContentManager.ItemType.WorkItem"/>.
            </summary>
            <returns>The type identifier.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.SetAllowedActions">
            <summary>
            Determine allowed actions for this object and set the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property.
            </summary>
            <remarks>
            The default implementation sets the <see cref="P:Tridion.ContentManager.Data.IdentifiableObjectData.AllowedActions"/> property with a default Allowed Actions instance.
            This method should be overridden in subclasses to actually set applicable allowed actions.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.OnLoaded(Tridion.ContentManager.Extensibility.Events.LoadEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags,System.Boolean)"/>, after going to the DAL.
            </summary>
            <remarks>
                In this method the IsEditable property of the <see cref="P:Tridion.ContentManager.Workflow.WorkItem.LoadedState"/> is set to <c>false</c>, which is always the case.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.OnSaving(Tridion.ContentManager.Extensibility.Events.SaveEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Save"/>, before going to the DAL.
            </summary>
            <remarks>
            Saving of Work Items is not allowed; we create/update them internally.
            </remarks>
            <param name="eventArgs">The Event data based on the method parameters.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.OnDeleting(Tridion.ContentManager.Extensibility.Events.DeleteEventArgs)">
            <summary>
            Called by <see cref="M:Tridion.ContentManager.IdentifiableObject.Delete"/>, before going to the DAL.
            </summary>
            <param name="eventArgs">The Event data based on the method parameters.</param>
            <remarks>
            Business Rule checks go in here.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.SetDefaultData">
            <summary>
            Set the loaded state to reflect default data for a newly created object.
            </summary>
            <remarks>
            Ensure to use the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.LoadedState"/> property and not the <see cref="P:Tridion.ContentManager.Workflow.WorkflowObject.CurrentState"/> property.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.WorkItem.GetSnapshot(System.String)">
            <summary>
            Gets the snapshot of the Work Item.
            </summary>
            <remarks>
            Returns <c>null</c> if there is no snapshot stored or storing snapshot is turned off or the Work Item is not finished yet.
            </remarks>
            <param name="binaryStoragePath">
            The absolute path where the binaries should be saved to disk.
            If the parameter is an empty string or <c>null</c> then the binaries will be saved on the same path that is used for previewing.
            </param>
            <returns>Returns the snapshot of the activity as <see cref="T:Tridion.ContentManager.Publishing.Rendering.RenderedItem"/></returns>
            <seealso cref="P:Tridion.ContentManager.Publishing.Rendering.Configuration.RenderingConfiguration.PreviewPath"/>
            <exception cref="T:Tridion.TridionArgumentOutOfRangeException">if the given path is not an absolute path</exception>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.CurrentState">
            <summary>
            Gets the current state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the current state (i.e. including any changes made since the object was loaded).
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            This property's visibility is "protected internal": in this manner it can be used in this class and subclasses,
            but also from our WCF Web Service (to which we'll make internals visible).
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.LoadedState">
            <summary>
            Gets the last loaded state as a Data Object.
            </summary>
            <value>
            A Data Object reflecting the last loaded state.
            If the object's state has not been loaded yet, it will be Just-In-Time loaded when retrieving this property.
            </value>
            <remarks>
            The property's type is refined in subclasses so that it reflects the associated Data Object type.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.Activity">
            <summary>
            Gets the Activity which contains the Work Item.
            </summary>
            <value>
            If the Work Item is read in context of the Activity, the value is <c>null</c>.
            The value is only set if the Work Item is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.Subject">
            <summary>
            Gets the item participating in the workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.Process">
            <summary>
            Gets the Process which contains the Work Item.
            </summary>
            <value>
            If the Work Item is read in context of the Process, the value is <c>null</c>.
            The value is only set if the Work Item is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.WorkItem.Owner">
            <summary>
            Gets the User who owns the Work Item.
            </summary>
            <remarks>
            The owner of the Work Item can view/edit the <see cref="P:Tridion.ContentManager.Workflow.WorkItem.Subject"/>.
            The owners of all <see cref="P:Tridion.ContentManager.Workflow.Activity.WorkItems">Work Items</see> of an Activity 
            are called the <see cref="P:Tridion.ContentManager.Workflow.Activity.Performers"/> of the Activity.
            For now, an Activity has exactly one Work Item and hence exactly one Performer.
            In the future, an Activity may have multiple Work Items and each Work Item can have another Owner,
            hence the Activity may have multiple Performers.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.XmlSections">
            <summary>
            Specifies which parts of an object's XML representation to retrieve.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.All">
            <summary>All sections</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Context">
            <summary>The context section (tcm:Context element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Info">
            <summary>The info section (tcm:Info element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Data">
            <summary>The data section (tcm:Data element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Permissions">
            <summary>The permissions section (tcm:Permissions element)</summary>
        </member>
    </members>
</doc>
